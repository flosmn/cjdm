<?xml version="1.0" encoding="UTF-8" ?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="http://ofbiz.apache.org/dtds/simple-methods.xsd">

    <simple-method method-name="setCommEventToRead" short-description="">
        <entity-one entity-name="CommunicationEventRole" value-field="eventRole"/>
        <if-compare operator="equals" value="COM_ROLE_CREATED" field="eventRole.statusId">
            <call-simple-method method-name="checkCommEventAccess"/>
            <if-compare operator="equals" value="true" field="found">
                <entity-one entity-name="UserLogin" value-field="userLogin">
                    <field-map field-name="userLoginId" value="system"/>
                </entity-one>
                <set-service-fields service-name="setCommunicationEventRoleStatus"
                    map="parameters" to-map="updStat"/>
                <set field="updStat.statusId" value="COM_ROLE_READ"/>
                <set field="updStat.userLogin" from-field="userLogin"/>
                <call-service service-name="setCommunicationEventRoleStatus" in-map-name="updStat"
                include-user-login="false"/>
            </if-compare>
        </if-compare>
    </simple-method>

    <simple-method method-name="checkCommEventAccess"
        short-description="check if the user has access to the email of this party">
        <set field="found" value="false"/>
        <if-compare-field operator="not-equals" field="parameters.partyId" to-field="userLogin.partyId">
            <entity-and list="emailOwners" entity-name="PartyRelationship" filter-by-date="true">
                <field-map field-name="partyIdFrom" value="${userLogin.partyId}"/>
                <field-map field-name="roleTypeIdFrom" value="EMAIL_ADMIN"/>
                <field-map field-name="partyIdTo" from-field="parameters.partyId"/>
            </entity-and>
            <if-not-empty field="emailOwners">
                <set field="found" value="true"/>
            </if-not-empty>
            <else>
                <set field="found" value="true"/>
            </else>
        </if-compare-field>
    </simple-method>
    <simple-method method-name="addContentToCommEvent"
        short-description="Add content to email communication">
        <!-- Call layout to get field -->
        <call-class-method class-name="org.ofbiz.content.layout.LayoutWorker"
            method-name="uploadImageAndParameters" ret-field="formInput">
            <field field="request" type="javax.servlet.http.HttpServletRequest"/>
            <string value="partyId"/>
        </call-class-method>

        <!-- Create party content -->
        <set-service-fields service-name="createPartyContent" map="formInput.formInput"
            to-map="partycontent"/>
        <set field="partycontent.contentId" from-field="formInput.formInput.contentId"/>
        <set field="partycontent.partyContentTypeId"
            from-field="formInput.formInput.partyContentTypeId"/>
        <set field="partycontent.partyId" from-field="formInput.formInput.partyId"/>
        <call-service service-name="createPartyContent" in-map-name="partycontent"/>

        <!-- Create communication event and content association -->
        <set-service-fields service-name="createCommEventContentAssoc"
            map="formInput.formInput" to-map="contentAssoc"/>
        <set field="contentAssoc.contentId" from-field="formInput.formInput.contentId"/>
        <set field="contentAssoc.communicationEventId"
            from-field="formInput.formInput.communicationEventId"/>
        <call-service service-name="createCommEventContentAssoc" in-map-name="contentAssoc">
            <result-to-field result-name="fromDate" field="fromDate"/>
        </call-service>

        <!-- Return to request -->
        <set field="communicationEventTypeId"
            from-field="formInput.formInput.communicationEventTypeId"/>
        <set field="communicationEventId" from-field="formInput.formInput.communicationEventId"/>
        <field-to-request field="communicationEventTypeId"
            request-name="communicationEventTypeId"/>
        <field-to-request field="communicationEventId" request-name="communicationEventId"/>
    </simple-method>
    <simple-method method-name="createCommunicationContent"
        short-description="Upload Content and Create Communication Content Association">
        <!-- Call layout to get field -->
        <call-class-method class-name="org.ofbiz.content.layout.LayoutWorker"
            method-name="uploadImageAndParameters" ret-field="formInput">
            <field field="request" type="javax.servlet.http.HttpServletRequest"/>
            <string value="uploadedFile"/>
        </call-class-method>
        <set field="parameters.imageFileName" from-field="formInput.imageFileName"/>

        <!-- Call bsh get file type -->
        <call-bsh><![CDATA[
            String fileName = parameters.get("imageFileName");
            String mimeTypeId = fileName.substring(fileName.indexOf(".")+1,fileName.length());
            parameters.put("mimeType",mimeTypeId);
            ]]>
        </call-bsh>

        <!-- Get mime type from FileExtention -->
        <set field="fileMap.fileExtensionId" value="${parameters.mimeType}"/>
        <find-by-primary-key map="fileMap" value-field="mimeType" entity-name="FileExtension"/>

        <!-- Create Data Resource -->
        <set-service-fields service-name="createContentFromUploadedFile"
            map="formInput.formInput" to-map="data"/>
        <set field="data.dataResourceTypeId" value="LOCAL_FILE"/>
        <set field="data.dataTemplateTypeId" value="NONE"/>
        <set field="data.dataCategoryId" from-field="formInput.formInput.dataCategoryId"/>

        <set field="data.statusId" from-field="formInput.formInput.statusId"/>
        <set field="data.dataResourceName" from-field="formInput.imageFileName"/>
        <set field="data.mimeTypeId" from-field="mimeType.mimeTypeId"/>
        <set field="data.uploadedFile" from-field="formInput.imageData"/>
        <set field="data._uploadedFile_fileName" from-field="formInput.imageFileName"/>
        <set field="data._uploadedFile_contentType" from-field="formInput.formInput.mimeTypeId"/>
        <call-service service-name="createDataResource" in-map-name="data">
            <result-to-field result-name="dataResourceId" field="parameters.dataResourceId"/>
        </call-service>
        <log level="always" message=" DataResource : ${parameters.dataResourceId}"/>

        <!-- Create attach upload to data resource -->
        <set-service-fields service-name="attachUploadToDataResource" map="formInput.formInput"
            to-map="attachMap"/>
        <set field="attachMap.uploadedFile" from-field="formInput.imageData"/>
        <set field="attachMap._uploadedFile_fileName" from-field="formInput.imageFileName"/>
        <set field="attachMap._uploadedFile_contentType" from-field="formInput.formInput.mimeTypeId"/>
        <set field="attachMap.dataResourceId" from-field="parameters.dataResourceId"/>
        <set field="attachMap.mimeTypeId" from-field="mimeType.mimeTypeId"/>
        <call-service service-name="attachUploadToDataResource" in-map-name="attachMap"/>

        <!-- Create content from dataResource -->
        <set-service-fields service-name="createContentFromDataResource"
            map="formInput.formInput" to-map="contentMap"/>
        <set field="contentMap.roleTypeId" from-field="formInput.formInput.roleTypeId"/>
        <set field="contentMap.partyId" from-field="formInput.formInput.partyId"/>
        <set field="contentMap.contentTypeId" from-field="formInput.formInput.contentTypeId"/>
        <set field="contentMap.dataResourceId" from-field="parameters.dataResourceId"/>
        <call-service service-name="createContentFromDataResource" in-map-name="contentMap">
            <result-to-field result-name="contentId" field="parameters.contentId"/>
        </call-service>
        <log level="always" message=" Content : ${parameters.contentId}"/>

        <!-- Create party content -->
        <set-service-fields service-name="createPartyContent" map="formInput.formInput"
            to-map="partycontent"/>
        <set field="partycontent.contentId" from-field="parameters.contentId"/>
        <set field="partycontent.partyContentTypeId"
            from-field="formInput.formInput.partyContentTypeId"/>
        <set field="partycontent.partyId" from-field="formInput.formInput.partyId"/>
        <call-service service-name="createPartyContent" in-map-name="partycontent"/>

        <!-- Create communication event and content association -->
        <set-service-fields service-name="createCommEventContentAssoc"
            map="formInput.formInput" to-map="contentAssoc"/>
        <set field="contentAssoc.contentId" from-field="parameters.contentId"/>
        <set field="contentAssoc.communicationEventId"
            from-field="formInput.formInput.communicationEventId"/>
        <call-service service-name="createCommEventContentAssoc" in-map-name="contentAssoc">
            <result-to-field result-name="fromDate" field="fromDate"/>
        </call-service>

        <!-- Return to request -->
        <set field="communicationEventTypeId"
            from-field="formInput.formInput.communicationEventTypeId"/>
        <set field="communicationEventId" from-field="formInput.formInput.communicationEventId"/>
        <field-to-request field="communicationEventId" request-name="communicationEventId"/>
        <field-to-request field="communicationEventTypeId"
            request-name="communicationEventTypeId"/>
    </simple-method>

</simple-methods>
