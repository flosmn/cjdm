<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="http://ofbiz.apache.org/dtds/simple-methods.xsd">

    <!-- FinAccountTrans Services -->
    <simple-method method-name="postFinAccountTransToGl" short-description="Post a Financial Account Transaction to the General Ledger">
        <!-- NOTE: this is not yet complete -->
        <!-- NOTE: this will behave differently depending on how the FinAccount is used, see comments on different GlAccounts for trans entries below -->

        <now-timestamp field="nowTimestamp"/>

        <entity-one entity-name="FinAccountTrans" value-field="finAccountTrans"/>
        <set field="finAccountId" from-field="finAccountTrans.finAccountId"/>
        <entity-one entity-name="FinAccount" value-field="finAccount"/>

        <set field="organizationPartyId" from-field="finAccount.organizationPartyId"/>

        <!-- Figure out which GlAccount to post to using finAccount.postToGlAccountId or if not specified then use FinAccountTypeGlAccount -->
        <if-not-empty field="finAccount.postToGlAccountId">
            <set field="glAccountId" from-field="finAccount.postToGlAccountId"/>

            <else>
                <entity-one entity-name="FinAccountTypeGlAccount" value-field="finAccountTypeGlAccount" auto-field-map="false">
                    <field-map field-name="organizationPartyId"/>
                    <field-map field-name="finAccountTypeId" from-field="finAccount.finAccountTypeId"/>
                </entity-one>
                <if-not-empty field="finAccountTypeGlAccount">
                    <set field="glAccountId" from-field="finAccountTypeGlAccount.glAccountId"/>
                </if-not-empty>
            </else>
        </if-not-empty>

        <!-- set initial values for AcctgTrans -->
        <set field="createAcctgTransAndEntriesMap.finAccountTransId" from-field="parameters.finAccountTransId"/>
        <set field="createAcctgTransAndEntriesMap.transactionDate" from-field="nowTimestamp"/>
        <set field="createAcctgTransAndEntriesMap.glFiscalTypeId" value="ACTUAL"/>
        <set field="createAcctgTransAndEntriesMap.partyId" from-field="finAccount.ownerPartyId"/>

        <!-- set initial values for Main AcctgTransEntry -->
        <make-value value-field="mainAcctgTransEntry" entity-name="AcctgTransEntry"/>
        <set field="mainAcctgTransEntry.glAccountId" from-field="glAccountId"/>
        <set field="mainAcctgTransEntry.organizationPartyId" from-field="finAccount.organizationPartyId"/>
        <set field="mainAcctgTransEntry.partyId" from-field="finAccount.ownerPartyId"/>
        <set field="mainAcctgTransEntry.amount" from-field="finAccountTrans.amount"/>
        <set field="mainAcctgTransEntry.acctgTransEntryTypeId" value="_NA_"/>
        <set field="mainAcctgTransEntry.acctgTransEntrySeqId" value="01"/>

        <!-- set initial values for Offset AcctgTransEntry -->
        <make-value value-field="offsetAcctgTransEntry" entity-name="AcctgTransEntry"/>
        <set field="offsetAcctgTransEntry.organizationPartyId" from-field="finAccount.organizationPartyId"/>
        <set field="offsetAcctgTransEntry.partyId" from-field="finAccount.ownerPartyId"/>
        <set field="offsetAcctgTransEntry.amount" from-field="finAccountTrans.amount"/>
        <set field="offsetAcctgTransEntry.acctgTransEntryTypeId" value="_NA_"/>
        <set field="offsetAcctgTransEntry.acctgTransEntrySeqId" value="02"/>

        <!-- Find the other side to post to/from -
            if payment directory to account do from Payment;
            if from account refill product purchase pull from special account where those funds wait;
            if purchase on account, balance like bank acount received or something -->
        <if>
            <condition><if-compare field="finAccountTrans.finAccountTransTypeId" operator="equals" value="DEPOSIT"/></condition>
            <then>
                <!-- TODO: somehow check to see if the deposit was not from a product, or didn't get into the general CUSTOMER CREDITS 213000 account -->

                <!--
                    Handle the case where a product is purchased to deposit to account.
                    The Product should be setup so that funds go to the general CUSTOMER CREDITS account, 213000.
                    This will simply transfer from that account to the configured account above.
                -->
                <set field="offsetAcctgTransEntry.glAccountId" value="213000"/>

                <set field="mainAcctgTransEntry.debitCreditFlag" value="D"/>
                <set field="offsetAcctgTransEntry.debitCreditFlag" value="C"/>
                <set field="createAcctgTransAndEntriesMap.acctgTransTypeId" value="RECEIPT"/>
            </then>
            <else-if>
                <condition><if-compare field="finAccountTrans.finAccountTransTypeId" operator="equals" value="WITHDRAWAL"/></condition>
                <then>
                    <!-- TODO: somehow determine if this is an order placed against the account or some other type of withdrawal -->

                    <!-- TODO: handle order placed against (paid for with) the account -->

                    <set field="mainAcctgTransEntry.debitCreditFlag" value="C"/>
                    <set field="offsetAcctgTransEntry.debitCreditFlag" value="D"/>
                    <set field="createAcctgTransAndEntriesMap.acctgTransTypeId" value="PAYMENT_ACCTG_TRANS"/>
                </then>
            </else-if>
            <else-if>
                <condition><if-compare field="finAccountTrans.finAccountTransTypeId" operator="equals" value="ADJUSTMENT"/></condition>
                <then>
                    <!-- TODO: what to do for an adjustment? for now nothing, will error out below -->

                    <!-- if positive will go to one account for write-off, if negative will go to another account for a fee -->

                    <!-- these will reverse depending on positive/negative amount -->
                    <set field="mainAcctgTransEntry.debitCreditFlag" value="D"/>
                    <set field="offsetAcctgTransEntry.debitCreditFlag" value="C"/>
                </then>
            </else-if>
        </if>

        <!-- Make sure we have the glAccountId, glAccountIdOffset, organizationPartyId -->
        <if-empty field="mainAcctgTransEntry.glAccountId">
            <add-error><fail-message message="Cannot post FinAccountTrans with ID [${parameters.finAccountTransId}] to GL, could not find Main glAccountId"/></add-error>
        </if-empty>
        <if-empty field="offsetAcctgTransEntry.glAccountId">
            <add-error><fail-message message="Cannot post FinAccountTrans with ID [${parameters.finAccountTransId}] to GL, could not find Offset glAccountId"/></add-error>
        </if-empty>
        <if-empty field="organizationPartyId">
            <add-error><fail-message message="Cannot post FinAccountTrans with ID [${parameters.finAccountTransId}] to GL, could not find organizationPartyId"/></add-error>
        </if-empty>
        <check-errors/>

        <!-- Post the finAccountTrans.amount to/from the given GlAccounts -->
        <set field="createAcctgTransAndEntriesMap.acctgTransEntries[]" from-field="mainAcctgTransEntry"/>
        <set field="createAcctgTransAndEntriesMap.acctgTransEntries[]" from-field="offsetAcctgTransEntry"/>
        <!-- TODO: un-comment this once ready for real use
        <call-service service-name="createAcctgTransAndEntries" in-map-name="createAcctgTransAndEntriesMap" include-user-login="true">
        </call-service>
        -->
        <!-- TODO: do anything with return values from service? -->
    </simple-method>
</simple-methods>
