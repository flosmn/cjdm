/**
 *  This source file is generated by XBiG (The XSLT Bindings Generator)
 *  For the latest info, see http://sourceforge.net/projects/xbig/
 * 
 *  Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
 *  Also see acknowledgements in Readme.html
 * 
 *  This program is free software; you can redistribute it and/or modify it under
 *  the terms of the GNU Lesser General Public License as published by the Free Software
 *  Foundation; either version 2 of the License, or (at your option) any later
 *  version.
 * 
 *  This program is distributed in the hope that it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 *  FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
 * 
 *  You should have received a copy of the GNU Lesser General Public License along with
 *  this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 *  Place - Suite 330, Boston, MA 02111-1307, USA, or go to
 *  http://www.gnu.org/copyleft/lesser.txt.
 * 
 *  Machine generated file
 */

        

package org.ogre4j;


import org.xbig.base.*;
public interface ITagPoint extends INativeObject, org.ogre4j.IBone {

    /** **/
    public org.ogre4j.IEntity getParentEntity();

    /** **/
    public org.ogre4j.IMovableObject getChildObject();

    /** **/
    public void setParentEntity(org.ogre4j.IEntity pEntity);

    /** **/
    public void setChildObject(org.ogre4j.IMovableObject pObject);

    /** 
    Tells the  whether it should inherit orientation from it's parent entity. **/
    public void setInheritParentEntityOrientation(boolean inherit);

    /** 
    Returns true if this  is affected by orientation applied to the parent entity. **/
    public boolean getInheritParentEntityOrientation();

    /** 
    Tells the  whether it should inherit scaling factors from it's parent entity. **/
    public void setInheritParentEntityScale(boolean inherit);

    /** 
    Returns true if this  is affected by scaling factors applied to the parent entity. **/
    public boolean getInheritParentEntityScale();

    /** 
    Gets the transform of parent entity. **/
    public org.ogre4j.IMatrix4 getParentEntityTransform();

    /** 
    Gets the transform of this node just for the skeleton (not entity) **/
    public org.ogre4j.IMatrix4 _getFullLocalTransform();

    /** 
    **/
    public void needUpdate(boolean forceParentUpdate);

    /** 
    Overridden from  in order to include parent  transform. **/
    public void updateFromParentImpl();

    /** 
    **/
    public org.ogre4j.ILightList getLights();

}
