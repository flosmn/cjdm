/**
 *  This source file is generated by XBiG (The XSLT Bindings Generator)
 *  For the latest info, see http://sourceforge.net/projects/xbig/
 * 
 *  Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
 *  Also see acknowledgements in Readme.html
 * 
 *  This program is free software; you can redistribute it and/or modify it under
 *  the terms of the GNU Lesser General Public License as published by the Free Software
 *  Foundation; either version 2 of the License, or (at your option) any later
 *  version.
 * 
 *  This program is distributed in the hope that it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 *  FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
 * 
 *  You should have received a copy of the GNU Lesser General Public License along with
 *  this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 *  Place - Suite 330, Boston, MA 02111-1307, USA, or go to
 *  http://www.gnu.org/copyleft/lesser.txt.
 * 
 *  Machine generated file
 */

        

package org.ogre4j;


import org.xbig.base.*;
public interface IFocusedShadowCameraSetup extends INativeObject, org.ogre4j.IShadowCameraSetup {

public static interface IPointListBody extends INativeObject {

    /** 
    Merges a second  into this one. **/
    public void merge(org.ogre4j.IFocusedShadowCameraSetup.IPointListBody plb);

    /** 
    Builds a point list body from a 'real' body. **/
    public void build(org.ogre4j.IConvexBody body, boolean filterDuplicates);

    /** 
    Builds a  from a Body and includes all the space in a given direction. **/
    public void buildAndIncludeDirection(org.ogre4j.IConvexBody body, org.ogre4j.IAxisAlignedBox aabMax, org.ogre4j.IVector3 dir);

    /** 
    Returns the bounding box representation. **/
    public org.ogre4j.IAxisAlignedBox getAAB();

    /** 
    Adds a specific point to the body list. **/
    public void addPoint(org.ogre4j.IVector3 point);

    /** 
    Adds all points of an AAB. **/
    public void addAAB(org.ogre4j.IAxisAlignedBox aab);

    /** 
    Returns a point. **/
    public org.ogre4j.IVector3 getPoint(int cnt);

    /** 
    Returns the point count. **/
    public int getPointCount();

    /** 
    Resets the body. **/
    public void reset();

}
    /** 
    Returns a uniform shadow camera with a focused view. **/
    public void getShadowCamera(org.ogre4j.ISceneManager sm, org.ogre4j.ICamera cam, org.ogre4j.IViewport vp, org.ogre4j.ILight light, org.ogre4j.ICamera texCam, int iteration);

    /** 
    Sets whether or not to use the more aggressive approach to deciding on the focus region or not. **/
    public void setUseAggressiveFocusRegion(boolean aggressive);

    /** **/
    public boolean getUseAggressiveFocusRegion();

}
