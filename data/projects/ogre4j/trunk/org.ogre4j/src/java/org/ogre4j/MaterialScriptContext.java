/**
 *  This source file is generated by XBiG (The XSLT Bindings Generator)
 *  For the latest info, see http://sourceforge.net/projects/xbig/
 * 
 *  Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
 *  Also see acknowledgements in Readme.html
 * 
 *  This program is free software; you can redistribute it and/or modify it under
 *  the terms of the GNU Lesser General Public License as published by the Free Software
 *  Foundation; either version 2 of the License, or (at your option) any later
 *  version.
 * 
 *  This program is distributed in the hope that it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 *  FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
 * 
 *  You should have received a copy of the GNU Lesser General Public License along with
 *  this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 *  Place - Suite 330, Boston, MA 02111-1307, USA, or go to
 *  http://www.gnu.org/copyleft/lesser.txt.
 * 
 *  Machine generated file
 */

        

package org.ogre4j;


import org.xbig.base.*;
public class MaterialScriptContext extends org.xbig.base.NativeObject implements org.ogre4j.IMaterialScriptContext {
static { System.loadLibrary("ogre4j");}
 
        
	/**
	 * 
	 * This constructor is public for internal useage only!
	 * Do not use it!
	 * 
	 */
	public MaterialScriptContext(org.xbig.base.InstancePointer p) {
		super(p);
	}

	/**
	 * 
	 * Creates a Java wrapper object for an existing C++ object.
	 * If remote is set to 'true' this object cannot be deleted in Java.
	 * 
	 */
	protected MaterialScriptContext(org.xbig.base.InstancePointer p, boolean remote) {
		super(p, remote);
	}

    /**
     * Allows creation of Java objects without C++ objects.
     * 
     * @see org.xbig.base.WithoutNativeObject
     * @see org.xbig.base.INativeObject#disconnectFromNativeObject()
     */
	public MaterialScriptContext(org.xbig.base.WithoutNativeObject val) {
		super(val);
	}

	public void delete() {
		if (this.remote) {
	       throw new RuntimeException("can't dispose object created by native library");
	    }

		if(!this.deleted) {
		    __delete(object.pointer);
		    this.deleted = true;
		   	this.object.pointer = 0;
		}
	}

	public void finalize() {
		if(!this.remote && !this.deleted) {
			delete();
		}
	}
	
			
	private final native void __delete(long _pointer_);	



          /** **/
    public MaterialScriptContext() {
         super( new org.xbig.base.InstancePointer(__createMaterialScriptContext()), false);
    }

    private native static long __createMaterialScriptContext();

    /** **/
    public org.ogre4j.MaterialScriptSection getsection() {
         return org.ogre4j.MaterialScriptSection.toEnum(_getsection(this.object.pointer));
    }

    private native int _getsection(long _pointer_);

    /** **/
    public void setsection(org.ogre4j.MaterialScriptSection _jni_value_) {
        _setsection(this.object.pointer, _jni_value_.getValue());
    }

    private native void _setsection(long _pointer_, int _jni_value_);

    /** **/
    public String getgroupName() {
         return _getgroupName(this.object.pointer);
    }

    private native String _getgroupName(long _pointer_);

    /** **/
    public void setgroupName(String _jni_value_) {
        _setgroupName(this.object.pointer, _jni_value_);
    }

    private native void _setgroupName(long _pointer_, String _jni_value_);

    /** **/
    public void getmaterial(org.ogre4j.IMaterialPtr returnValue) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getmaterial(this.object.pointer)), false);
    }

    private native long _getmaterial(long _pointer_);

    /** **/
    public void setmaterial(org.ogre4j.IMaterialPtr _jni_value_) {
        _setmaterial(this.object.pointer, _jni_value_.getInstancePointer().pointer);
    }

    private native void _setmaterial(long _pointer_, long _jni_value_);

    /** **/
    public org.ogre4j.ITechnique gettechnique() {
         return new org.ogre4j.Technique(new InstancePointer(_gettechnique(this.object.pointer)));
    }

    private native long _gettechnique(long _pointer_);

    /** **/
    public void settechnique(org.ogre4j.ITechnique _jni_value_) {
        _settechnique(this.object.pointer, _jni_value_.getInstancePointer().pointer);
    }

    private native void _settechnique(long _pointer_, long _jni_value_);

    /** **/
    public org.ogre4j.IPass getpass() {
         return new org.ogre4j.Pass(new InstancePointer(_getpass(this.object.pointer)));
    }

    private native long _getpass(long _pointer_);

    /** **/
    public void setpass(org.ogre4j.IPass _jni_value_) {
        _setpass(this.object.pointer, _jni_value_.getInstancePointer().pointer);
    }

    private native void _setpass(long _pointer_, long _jni_value_);

    /** **/
    public org.ogre4j.ITextureUnitState gettextureUnit() {
         return new org.ogre4j.TextureUnitState(new InstancePointer(_gettextureUnit(this.object.pointer)));
    }

    private native long _gettextureUnit(long _pointer_);

    /** **/
    public void settextureUnit(org.ogre4j.ITextureUnitState _jni_value_) {
        _settextureUnit(this.object.pointer, _jni_value_.getInstancePointer().pointer);
    }

    private native void _settextureUnit(long _pointer_, long _jni_value_);

    /** **/
    public void getprogram(org.ogre4j.IGpuProgramPtr returnValue) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getprogram(this.object.pointer)), false);
    }

    private native long _getprogram(long _pointer_);

    /** **/
    public void setprogram(org.ogre4j.IGpuProgramPtr _jni_value_) {
        _setprogram(this.object.pointer, _jni_value_.getInstancePointer().pointer);
    }

    private native void _setprogram(long _pointer_, long _jni_value_);

    /** **/
    public boolean getisProgramShadowCaster() {
         return _getisProgramShadowCaster(this.object.pointer);
    }

    private native boolean _getisProgramShadowCaster(long _pointer_);

    /** **/
    public void setisProgramShadowCaster(boolean _jni_value_) {
        _setisProgramShadowCaster(this.object.pointer, _jni_value_);
    }

    private native void _setisProgramShadowCaster(long _pointer_, boolean _jni_value_);

    /** **/
    public boolean getisVertexProgramShadowReceiver() {
         return _getisVertexProgramShadowReceiver(this.object.pointer);
    }

    private native boolean _getisVertexProgramShadowReceiver(long _pointer_);

    /** **/
    public void setisVertexProgramShadowReceiver(boolean _jni_value_) {
        _setisVertexProgramShadowReceiver(this.object.pointer, _jni_value_);
    }

    private native void _setisVertexProgramShadowReceiver(long _pointer_, boolean _jni_value_);

    /** **/
    public boolean getisFragmentProgramShadowReceiver() {
         return _getisFragmentProgramShadowReceiver(this.object.pointer);
    }

    private native boolean _getisFragmentProgramShadowReceiver(long _pointer_);

    /** **/
    public void setisFragmentProgramShadowReceiver(boolean _jni_value_) {
        _setisFragmentProgramShadowReceiver(this.object.pointer, _jni_value_);
    }

    private native void _setisFragmentProgramShadowReceiver(long _pointer_, boolean _jni_value_);

    /** **/
    public void getprogramParams(org.ogre4j.IGpuProgramParametersSharedPtr returnValue) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getprogramParams(this.object.pointer)), false);
    }

    private native long _getprogramParams(long _pointer_);

    /** **/
    public void setprogramParams(org.ogre4j.IGpuProgramParametersSharedPtr _jni_value_) {
        _setprogramParams(this.object.pointer, _jni_value_.getInstancePointer().pointer);
    }

    private native void _setprogramParams(long _pointer_, long _jni_value_);

    /** **/
    public int getnumAnimationParametrics() {
         return _getnumAnimationParametrics(this.object.pointer);
    }

    private native int _getnumAnimationParametrics(long _pointer_);

    /** **/
    public void setnumAnimationParametrics(int _jni_value_) {
        _setnumAnimationParametrics(this.object.pointer, _jni_value_);
    }

    private native void _setnumAnimationParametrics(long _pointer_, int _jni_value_);

    /** **/
    public org.ogre4j.IMaterialScriptProgramDefinition getprogramDef() {
         return new org.ogre4j.MaterialScriptProgramDefinition(new InstancePointer(_getprogramDef(this.object.pointer)));
    }

    private native long _getprogramDef(long _pointer_);

    /** **/
    public void setprogramDef(org.ogre4j.IMaterialScriptProgramDefinition _jni_value_) {
        _setprogramDef(this.object.pointer, _jni_value_.getInstancePointer().pointer);
    }

    private native void _setprogramDef(long _pointer_, long _jni_value_);

    /** **/
    public int gettechLev() {
         return _gettechLev(this.object.pointer);
    }

    private native int _gettechLev(long _pointer_);

    /** **/
    public void settechLev(int _jni_value_) {
        _settechLev(this.object.pointer, _jni_value_);
    }

    private native void _settechLev(long _pointer_, int _jni_value_);

    /** **/
    public int getpassLev() {
         return _getpassLev(this.object.pointer);
    }

    private native int _getpassLev(long _pointer_);

    /** **/
    public void setpassLev(int _jni_value_) {
        _setpassLev(this.object.pointer, _jni_value_);
    }

    private native void _setpassLev(long _pointer_, int _jni_value_);

    /** **/
    public int getstateLev() {
         return _getstateLev(this.object.pointer);
    }

    private native int _getstateLev(long _pointer_);

    /** **/
    public void setstateLev(int _jni_value_) {
        _setstateLev(this.object.pointer, _jni_value_);
    }

    private native void _setstateLev(long _pointer_, int _jni_value_);

    /** **/
    public void getdefaultParamLines(org.ogre4j.IStringVector returnValue) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getdefaultParamLines(this.object.pointer)), false);
    }

    private native long _getdefaultParamLines(long _pointer_);

    /** **/
    public void setdefaultParamLines(org.ogre4j.IStringVector _jni_value_) {
        _setdefaultParamLines(this.object.pointer, _jni_value_.getInstancePointer().pointer);
    }

    private native void _setdefaultParamLines(long _pointer_, long _jni_value_);

    /** **/
    public int getlineNo() {
         return _getlineNo(this.object.pointer);
    }

    private native int _getlineNo(long _pointer_);

    /** **/
    public void setlineNo(int _jni_value_) {
        _setlineNo(this.object.pointer, _jni_value_);
    }

    private native void _setlineNo(long _pointer_, int _jni_value_);

    /** **/
    public String getfilename() {
         return _getfilename(this.object.pointer);
    }

    private native String _getfilename(long _pointer_);

    /** **/
    public void setfilename(String _jni_value_) {
        _setfilename(this.object.pointer, _jni_value_);
    }

    private native void _setfilename(long _pointer_, String _jni_value_);

    /** **/
    public void gettextureAliases(org.ogre4j.IAliasTextureNamePairList returnValue) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_gettextureAliases(this.object.pointer)), false);
    }

    private native long _gettextureAliases(long _pointer_);

    /** **/
    public void settextureAliases(org.ogre4j.IAliasTextureNamePairList _jni_value_) {
        _settextureAliases(this.object.pointer, _jni_value_.getInstancePointer().pointer);
    }

    private native void _settextureAliases(long _pointer_, long _jni_value_);

}
