/**
 *  This source file is generated by XBiG (The XSLT Bindings Generator)
 *  For the latest info, see http://sourceforge.net/projects/xbig/
 * 
 *  Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
 *  Also see acknowledgements in Readme.html
 * 
 *  This program is free software; you can redistribute it and/or modify it under
 *  the terms of the GNU Lesser General Public License as published by the Free Software
 *  Foundation; either version 2 of the License, or (at your option) any later
 *  version.
 * 
 *  This program is distributed in the hope that it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 *  FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
 * 
 *  You should have received a copy of the GNU Lesser General Public License along with
 *  this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 *  Place - Suite 330, Boston, MA 02111-1307, USA, or go to
 *  http://www.gnu.org/copyleft/lesser.txt.
 * 
 *  Machine generated file
 */

        

package org.ogre4j;


import org.xbig.base.*;
public enum RenderQueueGroupID implements INativeEnum < RenderQueueGroupID > {
    RENDER_QUEUE_BACKGROUND(RenderQueueGroupIDHelper.ENUM_VALUES[0]),
    RENDER_QUEUE_SKIES_EARLY(RenderQueueGroupIDHelper.ENUM_VALUES[1]),
    RENDER_QUEUE_1(RenderQueueGroupIDHelper.ENUM_VALUES[2]),
    RENDER_QUEUE_2(RenderQueueGroupIDHelper.ENUM_VALUES[3]),
    RENDER_QUEUE_WORLD_GEOMETRY_1(RenderQueueGroupIDHelper.ENUM_VALUES[4]),
    RENDER_QUEUE_3(RenderQueueGroupIDHelper.ENUM_VALUES[5]),
    RENDER_QUEUE_4(RenderQueueGroupIDHelper.ENUM_VALUES[6]),
    RENDER_QUEUE_MAIN(RenderQueueGroupIDHelper.ENUM_VALUES[7]),
    RENDER_QUEUE_6(RenderQueueGroupIDHelper.ENUM_VALUES[8]),
    RENDER_QUEUE_7(RenderQueueGroupIDHelper.ENUM_VALUES[9]),
    RENDER_QUEUE_WORLD_GEOMETRY_2(RenderQueueGroupIDHelper.ENUM_VALUES[10]),
    RENDER_QUEUE_8(RenderQueueGroupIDHelper.ENUM_VALUES[11]),
    RENDER_QUEUE_9(RenderQueueGroupIDHelper.ENUM_VALUES[12]),
    RENDER_QUEUE_SKIES_LATE(RenderQueueGroupIDHelper.ENUM_VALUES[13]),
    RENDER_QUEUE_OVERLAY(RenderQueueGroupIDHelper.ENUM_VALUES[14]),
    RENDER_QUEUE_MAX(RenderQueueGroupIDHelper.ENUM_VALUES[15]);

    private int value;

    RenderQueueGroupID(int i) {
        this.value = i;
    }

    public int getValue() {
        return value;
    }

    public RenderQueueGroupID getEnum(int val) {
        return toEnum(val);
    }

    public static final RenderQueueGroupID toEnum(int retval) {
    if (retval ==RENDER_QUEUE_BACKGROUND.value)
        return RenderQueueGroupID.RENDER_QUEUE_BACKGROUND;
    else if (retval ==RENDER_QUEUE_SKIES_EARLY.value)
        return RenderQueueGroupID.RENDER_QUEUE_SKIES_EARLY;
    else if (retval ==RENDER_QUEUE_1.value)
        return RenderQueueGroupID.RENDER_QUEUE_1;
    else if (retval ==RENDER_QUEUE_2.value)
        return RenderQueueGroupID.RENDER_QUEUE_2;
    else if (retval ==RENDER_QUEUE_WORLD_GEOMETRY_1.value)
        return RenderQueueGroupID.RENDER_QUEUE_WORLD_GEOMETRY_1;
    else if (retval ==RENDER_QUEUE_3.value)
        return RenderQueueGroupID.RENDER_QUEUE_3;
    else if (retval ==RENDER_QUEUE_4.value)
        return RenderQueueGroupID.RENDER_QUEUE_4;
    else if (retval ==RENDER_QUEUE_MAIN.value)
        return RenderQueueGroupID.RENDER_QUEUE_MAIN;
    else if (retval ==RENDER_QUEUE_6.value)
        return RenderQueueGroupID.RENDER_QUEUE_6;
    else if (retval ==RENDER_QUEUE_7.value)
        return RenderQueueGroupID.RENDER_QUEUE_7;
    else if (retval ==RENDER_QUEUE_WORLD_GEOMETRY_2.value)
        return RenderQueueGroupID.RENDER_QUEUE_WORLD_GEOMETRY_2;
    else if (retval ==RENDER_QUEUE_8.value)
        return RenderQueueGroupID.RENDER_QUEUE_8;
    else if (retval ==RENDER_QUEUE_9.value)
        return RenderQueueGroupID.RENDER_QUEUE_9;
    else if (retval ==RENDER_QUEUE_SKIES_LATE.value)
        return RenderQueueGroupID.RENDER_QUEUE_SKIES_LATE;
    else if (retval ==RENDER_QUEUE_OVERLAY.value)
        return RenderQueueGroupID.RENDER_QUEUE_OVERLAY;
    else if (retval ==RENDER_QUEUE_MAX.value)
        return RenderQueueGroupID.RENDER_QUEUE_MAX;
    throw new RuntimeException("wrong number in jni call for an enum");
    }
}

class RenderQueueGroupIDHelper{
static { System.loadLibrary("ogre4j");}

				public static final int[] ENUM_VALUES =
				getEnumValues();

			
				private static native int[] getEnumValues();

			
};

