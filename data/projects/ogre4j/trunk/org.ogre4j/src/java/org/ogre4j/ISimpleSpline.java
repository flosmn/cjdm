/**
 *  This source file is generated by XBiG (The XSLT Bindings Generator)
 *  For the latest info, see http://sourceforge.net/projects/xbig/
 * 
 *  Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
 *  Also see acknowledgements in Readme.html
 * 
 *  This program is free software; you can redistribute it and/or modify it under
 *  the terms of the GNU Lesser General Public License as published by the Free Software
 *  Foundation; either version 2 of the License, or (at your option) any later
 *  version.
 * 
 *  This program is distributed in the hope that it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 *  FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
 * 
 *  You should have received a copy of the GNU Lesser General Public License along with
 *  this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 *  Place - Suite 330, Boston, MA 02111-1307, USA, or go to
 *  http://www.gnu.org/copyleft/lesser.txt.
 * 
 *  Machine generated file
 */

        

package org.ogre4j;


import org.xbig.base.*;
public interface ISimpleSpline extends INativeObject {

    /** 
    Adds a control point to the end of the spline. **/
    public void addPoint(org.ogre4j.IVector3 p);

    /** 
    Gets the detail of one of the control points of the spline. **/
    public org.ogre4j.IVector3 getPoint(int index);

    /** 
    Gets the number of control points in the spline. **/
    public int getNumPoints();

    /** 
    Clears all the points in the spline. **/
    public void clear();

    /** 
    Updates a single point in the spline. **/
    public void updatePoint(int index, org.ogre4j.IVector3 value);

    /** 
    Returns an interpolated point based on a parametric value over the whole series. **/
    public void interpolate(org.ogre4j.IVector3 returnValue, float t);

    /** 
    Interpolates a single segment of the spline given a parametric value. **/
    public void interpolate(org.ogre4j.IVector3 returnValue, long fromIndex, float t);

    /** 
    Tells the spline whether it should automatically calculate tangents on demand as points are added. **/
    public void setAutoCalculate(boolean autoCalc);

    /** 
    Recalculates the tangents associated with this spline. **/
    public void recalcTangents();

}
