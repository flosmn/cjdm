/**
 *  This source file is generated by XBiG (The XSLT Bindings Generator)
 *  For the latest info, see http://sourceforge.net/projects/xbig/
 * 
 *  Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
 *  Also see acknowledgements in Readme.html
 * 
 *  This program is free software; you can redistribute it and/or modify it under
 *  the terms of the GNU Lesser General Public License as published by the Free Software
 *  Foundation; either version 2 of the License, or (at your option) any later
 *  version.
 * 
 *  This program is distributed in the hope that it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 *  FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
 * 
 *  You should have received a copy of the GNU Lesser General Public License along with
 *  this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 *  Place - Suite 330, Boston, MA 02111-1307, USA, or go to
 *  http://www.gnu.org/copyleft/lesser.txt.
 * 
 *  Machine generated file
 */

        

package org.ogre4j;


import org.xbig.base.*;
public class AutoParamDataSource extends org.xbig.base.NativeObject implements org.ogre4j.IAutoParamDataSource {
static { System.loadLibrary("ogre4j");}
 
        
	/**
	 * 
	 * This constructor is public for internal useage only!
	 * Do not use it!
	 * 
	 */
	public AutoParamDataSource(org.xbig.base.InstancePointer p) {
		super(p);
	}

	/**
	 * 
	 * Creates a Java wrapper object for an existing C++ object.
	 * If remote is set to 'true' this object cannot be deleted in Java.
	 * 
	 */
	protected AutoParamDataSource(org.xbig.base.InstancePointer p, boolean remote) {
		super(p, remote);
	}

    /**
     * Allows creation of Java objects without C++ objects.
     * 
     * @see org.xbig.base.WithoutNativeObject
     * @see org.xbig.base.INativeObject#disconnectFromNativeObject()
     */
	public AutoParamDataSource(org.xbig.base.WithoutNativeObject val) {
		super(val);
	}

	public void delete() {
		if (this.remote) {
	       throw new RuntimeException("can't dispose object created by native library");
	    }

		if(!this.deleted) {
		    __delete(object.pointer);
		    this.deleted = true;
		   	this.object.pointer = 0;
		}
	}

	public void finalize() {
		if(!this.remote && !this.deleted) {
			delete();
		}
	}
	
			
	private final native void __delete(long _pointer_);	



          /** **/
    public AutoParamDataSource() {
         super( new org.xbig.base.InstancePointer(__createAutoParamDataSource()), false);
    }

    private native static long __createAutoParamDataSource();

    /** 
    Updates the current renderable **/
    public void setCurrentRenderable(org.ogre4j.IRenderable rend) {
        _setCurrentRenderable__RenderableP(this.object.pointer, rend.getInstancePointer().pointer);
    }

    private native void _setCurrentRenderable__RenderableP(long _pointer_, long rend);

    /** 
    Sets the world matrices, avoid query from renderable again **/
    public void setWorldMatrices(org.ogre4j.IMatrix4 m, int count) {
        _setWorldMatrices__Matrix4Piv(this.object.pointer, m.getInstancePointer().pointer,  count);
    }

    private native void _setWorldMatrices__Matrix4Piv(long _pointer_, long m, int count);

    /** 
    Updates the current camera **/
    public void setCurrentCamera(org.ogre4j.ICamera cam, boolean useCameraRelative) {
        _setCurrentCamera__CameraPbv(this.object.pointer, cam.getInstancePointer().pointer,  useCameraRelative);
    }

    private native void _setCurrentCamera__CameraPbv(long _pointer_, long cam, boolean useCameraRelative);

    /** 
    Sets the light list that should be used, and it's base index from the global list **/
    public void setCurrentLightList(org.ogre4j.ILightList ll) {
        _setCurrentLightList__LightListP(this.object.pointer, ll.getInstancePointer().pointer);
    }

    private native void _setCurrentLightList__LightListP(long _pointer_, long ll);

    /** 
    Sets the current texture projector for a index **/
    public void setTextureProjector(org.ogre4j.IFrustum frust, int index) {
        _setTextureProjector__FrustumPiv(this.object.pointer, frust.getInstancePointer().pointer,  index);
    }

    private native void _setTextureProjector__FrustumPiv(long _pointer_, long frust, int index);

    /** 
    Sets the current render target **/
    public void setCurrentRenderTarget(org.ogre4j.IRenderTarget target) {
        _setCurrentRenderTarget__RenderTargetP(this.object.pointer, target.getInstancePointer().pointer);
    }

    private native void _setCurrentRenderTarget__RenderTargetP(long _pointer_, long target);

    /** 
    Sets the current viewport **/
    public void setCurrentViewport(org.ogre4j.IViewport viewport) {
        _setCurrentViewport__ViewportP(this.object.pointer, viewport.getInstancePointer().pointer);
    }

    private native void _setCurrentViewport__ViewportP(long _pointer_, long viewport);

    /** 
    Sets the shadow extrusion distance to be used for point lights. **/
    public void setShadowDirLightExtrusionDistance(float dist) {
        _setShadowDirLightExtrusionDistance__Realv(this.object.pointer, dist);
    }

    private native void _setShadowDirLightExtrusionDistance__Realv(long _pointer_, float dist);

    /** 
    Sets the main camera's scene bounding information **/
    public void setMainCamBoundsInfo(org.ogre4j.IVisibleObjectsBoundsInfo info) {
        _setMainCamBoundsInfo__VisibleObjectsBoundsInfop(this.object.pointer, info.getInstancePointer().pointer);
    }

    private native void _setMainCamBoundsInfo__VisibleObjectsBoundsInfop(long _pointer_, long info);

    /** 
    Set the current scene manager for enquiring on demand **/
    public void setCurrentSceneManager(org.ogre4j.ISceneManager sm) {
        _setCurrentSceneManager__SceneManagerP(this.object.pointer, sm.getInstancePointer().pointer);
    }

    private native void _setCurrentSceneManager__SceneManagerP(long _pointer_, long sm);

    /** 
    Sets the current pass **/
    public void setCurrentPass(org.ogre4j.IPass pass) {
        _setCurrentPass__PassP(this.object.pointer, pass.getInstancePointer().pointer);
    }

    private native void _setCurrentPass__PassP(long _pointer_, long pass);

    /** **/
    public org.ogre4j.IMatrix4 getWorldMatrix() {
         return new org.ogre4j.Matrix4(new InstancePointer(_getWorldMatrix_const(this.object.pointer)));
    }

    private native long _getWorldMatrix_const(long _pointer_);

    /** **/
    public org.ogre4j.IMatrix4 getWorldMatrixArray() {
         return new org.ogre4j.Matrix4(new InstancePointer(_getWorldMatrixArray_const(this.object.pointer)));
    }

    private native long _getWorldMatrixArray_const(long _pointer_);

    /** **/
    public int getWorldMatrixCount() {
         return _getWorldMatrixCount_const(this.object.pointer);
    }

    private native int _getWorldMatrixCount_const(long _pointer_);

    /** **/
    public org.ogre4j.IMatrix4 getViewMatrix() {
         return new org.ogre4j.Matrix4(new InstancePointer(_getViewMatrix_const(this.object.pointer)));
    }

    private native long _getViewMatrix_const(long _pointer_);

    /** **/
    public org.ogre4j.IMatrix4 getViewProjectionMatrix() {
         return new org.ogre4j.Matrix4(new InstancePointer(_getViewProjectionMatrix_const(this.object.pointer)));
    }

    private native long _getViewProjectionMatrix_const(long _pointer_);

    /** **/
    public org.ogre4j.IMatrix4 getProjectionMatrix() {
         return new org.ogre4j.Matrix4(new InstancePointer(_getProjectionMatrix_const(this.object.pointer)));
    }

    private native long _getProjectionMatrix_const(long _pointer_);

    /** **/
    public org.ogre4j.IMatrix4 getWorldViewProjMatrix() {
         return new org.ogre4j.Matrix4(new InstancePointer(_getWorldViewProjMatrix_const(this.object.pointer)));
    }

    private native long _getWorldViewProjMatrix_const(long _pointer_);

    /** **/
    public org.ogre4j.IMatrix4 getWorldViewMatrix() {
         return new org.ogre4j.Matrix4(new InstancePointer(_getWorldViewMatrix_const(this.object.pointer)));
    }

    private native long _getWorldViewMatrix_const(long _pointer_);

    /** **/
    public org.ogre4j.IMatrix4 getInverseWorldMatrix() {
         return new org.ogre4j.Matrix4(new InstancePointer(_getInverseWorldMatrix_const(this.object.pointer)));
    }

    private native long _getInverseWorldMatrix_const(long _pointer_);

    /** **/
    public org.ogre4j.IMatrix4 getInverseWorldViewMatrix() {
         return new org.ogre4j.Matrix4(new InstancePointer(_getInverseWorldViewMatrix_const(this.object.pointer)));
    }

    private native long _getInverseWorldViewMatrix_const(long _pointer_);

    /** **/
    public org.ogre4j.IMatrix4 getInverseViewMatrix() {
         return new org.ogre4j.Matrix4(new InstancePointer(_getInverseViewMatrix_const(this.object.pointer)));
    }

    private native long _getInverseViewMatrix_const(long _pointer_);

    /** **/
    public org.ogre4j.IMatrix4 getInverseTransposeWorldMatrix() {
         return new org.ogre4j.Matrix4(new InstancePointer(_getInverseTransposeWorldMatrix_const(this.object.pointer)));
    }

    private native long _getInverseTransposeWorldMatrix_const(long _pointer_);

    /** **/
    public org.ogre4j.IMatrix4 getInverseTransposeWorldViewMatrix() {
         return new org.ogre4j.Matrix4(new InstancePointer(_getInverseTransposeWorldViewMatrix_const(this.object.pointer)));
    }

    private native long _getInverseTransposeWorldViewMatrix_const(long _pointer_);

    /** **/
    public org.ogre4j.IVector4 getCameraPosition() {
         return new org.ogre4j.Vector4(new InstancePointer(_getCameraPosition_const(this.object.pointer)));
    }

    private native long _getCameraPosition_const(long _pointer_);

    /** **/
    public org.ogre4j.IVector4 getCameraPositionObjectSpace() {
         return new org.ogre4j.Vector4(new InstancePointer(_getCameraPositionObjectSpace_const(this.object.pointer)));
    }

    private native long _getCameraPositionObjectSpace_const(long _pointer_);

    /** **/
    public org.ogre4j.IVector4 getLodCameraPosition() {
         return new org.ogre4j.Vector4(new InstancePointer(_getLodCameraPosition_const(this.object.pointer)));
    }

    private native long _getLodCameraPosition_const(long _pointer_);

    /** **/
    public org.ogre4j.IVector4 getLodCameraPositionObjectSpace() {
         return new org.ogre4j.Vector4(new InstancePointer(_getLodCameraPositionObjectSpace_const(this.object.pointer)));
    }

    private native long _getLodCameraPositionObjectSpace_const(long _pointer_);

    /** 
    Get the light which is 'index'th closest to the current object **/
    public float getLightNumber(int index) {
         return _getLightNumber__iv_const(this.object.pointer, index);
    }

    private native float _getLightNumber__iv_const(long _pointer_, int index);

    /** **/
    public float getLightCount() {
         return _getLightCount_const(this.object.pointer);
    }

    private native float _getLightCount_const(long _pointer_);

    /** **/
    public int getLightCastsShadows(int index) {
         return _getLightCastsShadows__iv_const(this.object.pointer, index);
    }

    private native int _getLightCastsShadows__iv_const(long _pointer_, int index);

    /** **/
    public org.ogre4j.IColourValue getLightDiffuseColour(int index) {
         return new org.ogre4j.ColourValue(new InstancePointer(_getLightDiffuseColour__iv_const(this.object.pointer, index)));
    }

    private native long _getLightDiffuseColour__iv_const(long _pointer_, int index);

    /** **/
    public org.ogre4j.IColourValue getLightSpecularColour(int index) {
         return new org.ogre4j.ColourValue(new InstancePointer(_getLightSpecularColour__iv_const(this.object.pointer, index)));
    }

    private native long _getLightSpecularColour__iv_const(long _pointer_, int index);

    /** **/
    public void getLightDiffuseColourWithPower(org.ogre4j.IColourValue returnValue, int index) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getLightDiffuseColourWithPower__iv_const(this.object.pointer, index)), false);
    }

    private native long _getLightDiffuseColourWithPower__iv_const(long _pointer_, int index);

    /** **/
    public void getLightSpecularColourWithPower(org.ogre4j.IColourValue returnValue, int index) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getLightSpecularColourWithPower__iv_const(this.object.pointer, index)), false);
    }

    private native long _getLightSpecularColourWithPower__iv_const(long _pointer_, int index);

    /** **/
    public org.ogre4j.IVector3 getLightPosition(int index) {
         return new org.ogre4j.Vector3(new InstancePointer(_getLightPosition__iv_const(this.object.pointer, index)));
    }

    private native long _getLightPosition__iv_const(long _pointer_, int index);

    /** **/
    public void getLightAs4DVector(org.ogre4j.IVector4 returnValue, int index) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getLightAs4DVector__iv_const(this.object.pointer, index)), false);
    }

    private native long _getLightAs4DVector__iv_const(long _pointer_, int index);

    /** **/
    public org.ogre4j.IVector3 getLightDirection(int index) {
         return new org.ogre4j.Vector3(new InstancePointer(_getLightDirection__iv_const(this.object.pointer, index)));
    }

    private native long _getLightDirection__iv_const(long _pointer_, int index);

    /** **/
    public float getLightPowerScale(int index) {
         return _getLightPowerScale__iv_const(this.object.pointer, index);
    }

    private native float _getLightPowerScale__iv_const(long _pointer_, int index);

    /** **/
    public void getLightAttenuation(org.ogre4j.IVector4 returnValue, int index) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getLightAttenuation__iv_const(this.object.pointer, index)), false);
    }

    private native long _getLightAttenuation__iv_const(long _pointer_, int index);

    /** **/
    public void getSpotlightParams(org.ogre4j.IVector4 returnValue, int index) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getSpotlightParams__iv_const(this.object.pointer, index)), false);
    }

    private native long _getSpotlightParams__iv_const(long _pointer_, int index);

    /** **/
    public void setAmbientLightColour(org.ogre4j.IColourValue ambient) {
        _setAmbientLightColour__ColourValueR(this.object.pointer, ambient.getInstancePointer().pointer);
    }

    private native void _setAmbientLightColour__ColourValueR(long _pointer_, long ambient);

    /** **/
    public org.ogre4j.IColourValue getAmbientLightColour() {
         return new org.ogre4j.ColourValue(new InstancePointer(_getAmbientLightColour_const(this.object.pointer)));
    }

    private native long _getAmbientLightColour_const(long _pointer_);

    /** **/
    public org.ogre4j.IColourValue getSurfaceAmbientColour() {
         return new org.ogre4j.ColourValue(new InstancePointer(_getSurfaceAmbientColour_const(this.object.pointer)));
    }

    private native long _getSurfaceAmbientColour_const(long _pointer_);

    /** **/
    public org.ogre4j.IColourValue getSurfaceDiffuseColour() {
         return new org.ogre4j.ColourValue(new InstancePointer(_getSurfaceDiffuseColour_const(this.object.pointer)));
    }

    private native long _getSurfaceDiffuseColour_const(long _pointer_);

    /** **/
    public org.ogre4j.IColourValue getSurfaceSpecularColour() {
         return new org.ogre4j.ColourValue(new InstancePointer(_getSurfaceSpecularColour_const(this.object.pointer)));
    }

    private native long _getSurfaceSpecularColour_const(long _pointer_);

    /** **/
    public org.ogre4j.IColourValue getSurfaceEmissiveColour() {
         return new org.ogre4j.ColourValue(new InstancePointer(_getSurfaceEmissiveColour_const(this.object.pointer)));
    }

    private native long _getSurfaceEmissiveColour_const(long _pointer_);

    /** **/
    public float getSurfaceShininess() {
         return _getSurfaceShininess_const(this.object.pointer);
    }

    private native float _getSurfaceShininess_const(long _pointer_);

    /** **/
    public void getDerivedAmbientLightColour(org.ogre4j.IColourValue returnValue) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getDerivedAmbientLightColour_const(this.object.pointer)), false);
    }

    private native long _getDerivedAmbientLightColour_const(long _pointer_);

    /** **/
    public void getDerivedSceneColour(org.ogre4j.IColourValue returnValue) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getDerivedSceneColour_const(this.object.pointer)), false);
    }

    private native long _getDerivedSceneColour_const(long _pointer_);

    /** **/
    public void setFog(org.ogre4j.FogMode mode, org.ogre4j.IColourValue colour, float expDensity, float linearStart, float linearEnd) {
        _setFog__FogModevColourValueRRealvRealvRealv(this.object.pointer, mode.getValue(),  colour.getInstancePointer().pointer,  expDensity,  linearStart,  linearEnd);
    }

    private native void _setFog__FogModevColourValueRRealvRealvRealv(long _pointer_, int mode, long colour, float expDensity, float linearStart, float linearEnd);

    /** **/
    public org.ogre4j.IColourValue getFogColour() {
         return new org.ogre4j.ColourValue(new InstancePointer(_getFogColour_const(this.object.pointer)));
    }

    private native long _getFogColour_const(long _pointer_);

    /** **/
    public org.ogre4j.IVector4 getFogParams() {
         return new org.ogre4j.Vector4(new InstancePointer(_getFogParams_const(this.object.pointer)));
    }

    private native long _getFogParams_const(long _pointer_);

    /** **/
    public org.ogre4j.IMatrix4 getTextureViewProjMatrix(int index) {
         return new org.ogre4j.Matrix4(new InstancePointer(_getTextureViewProjMatrix__iv_const(this.object.pointer, index)));
    }

    private native long _getTextureViewProjMatrix__iv_const(long _pointer_, int index);

    /** **/
    public org.ogre4j.IMatrix4 getTextureWorldViewProjMatrix(int index) {
         return new org.ogre4j.Matrix4(new InstancePointer(_getTextureWorldViewProjMatrix__iv_const(this.object.pointer, index)));
    }

    private native long _getTextureWorldViewProjMatrix__iv_const(long _pointer_, int index);

    /** **/
    public org.ogre4j.IMatrix4 getSpotlightViewProjMatrix(int index) {
         return new org.ogre4j.Matrix4(new InstancePointer(_getSpotlightViewProjMatrix__iv_const(this.object.pointer, index)));
    }

    private native long _getSpotlightViewProjMatrix__iv_const(long _pointer_, int index);

    /** **/
    public org.ogre4j.IMatrix4 getSpotlightWorldViewProjMatrix(int index) {
         return new org.ogre4j.Matrix4(new InstancePointer(_getSpotlightWorldViewProjMatrix__iv_const(this.object.pointer, index)));
    }

    private native long _getSpotlightWorldViewProjMatrix__iv_const(long _pointer_, int index);

    /** **/
    public org.ogre4j.IMatrix4 getTextureTransformMatrix(int index) {
         return new org.ogre4j.Matrix4(new InstancePointer(_getTextureTransformMatrix__iv_const(this.object.pointer, index)));
    }

    private native long _getTextureTransformMatrix__iv_const(long _pointer_, int index);

    /** **/
    public org.ogre4j.IRenderTarget getCurrentRenderTarget() {
         return new org.ogre4j.RenderTarget(new InstancePointer(_getCurrentRenderTarget_const(this.object.pointer)));
    }

    private native long _getCurrentRenderTarget_const(long _pointer_);

    /** **/
    public org.ogre4j.IRenderable getCurrentRenderable() {
         return new org.ogre4j.Renderable(new InstancePointer(_getCurrentRenderable_const(this.object.pointer)));
    }

    private native long _getCurrentRenderable_const(long _pointer_);

    /** **/
    public org.ogre4j.IPass getCurrentPass() {
         return new org.ogre4j.Pass(new InstancePointer(_getCurrentPass_const(this.object.pointer)));
    }

    private native long _getCurrentPass_const(long _pointer_);

    /** **/
    public void getTextureSize(org.ogre4j.IVector4 returnValue, int index) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getTextureSize__iv_const(this.object.pointer, index)), false);
    }

    private native long _getTextureSize__iv_const(long _pointer_, int index);

    /** **/
    public void getInverseTextureSize(org.ogre4j.IVector4 returnValue, int index) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getInverseTextureSize__iv_const(this.object.pointer, index)), false);
    }

    private native long _getInverseTextureSize__iv_const(long _pointer_, int index);

    /** **/
    public void getPackedTextureSize(org.ogre4j.IVector4 returnValue, int index) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getPackedTextureSize__iv_const(this.object.pointer, index)), false);
    }

    private native long _getPackedTextureSize__iv_const(long _pointer_, int index);

    /** **/
    public float getShadowExtrusionDistance() {
         return _getShadowExtrusionDistance_const(this.object.pointer);
    }

    private native float _getShadowExtrusionDistance_const(long _pointer_);

    /** **/
    public org.ogre4j.IVector4 getSceneDepthRange() {
         return new org.ogre4j.Vector4(new InstancePointer(_getSceneDepthRange_const(this.object.pointer)));
    }

    private native long _getSceneDepthRange_const(long _pointer_);

    /** **/
    public org.ogre4j.IVector4 getShadowSceneDepthRange(int index) {
         return new org.ogre4j.Vector4(new InstancePointer(_getShadowSceneDepthRange__iv_const(this.object.pointer, index)));
    }

    private native long _getShadowSceneDepthRange__iv_const(long _pointer_, int index);

    /** **/
    public org.ogre4j.IColourValue getShadowColour() {
         return new org.ogre4j.ColourValue(new InstancePointer(_getShadowColour_const(this.object.pointer)));
    }

    private native long _getShadowColour_const(long _pointer_);

    /** **/
    public void getInverseViewProjMatrix(org.ogre4j.IMatrix4 returnValue) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getInverseViewProjMatrix_const(this.object.pointer)), false);
    }

    private native long _getInverseViewProjMatrix_const(long _pointer_);

    /** **/
    public void getInverseTransposeViewProjMatrix(org.ogre4j.IMatrix4 returnValue) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getInverseTransposeViewProjMatrix_const(this.object.pointer)), false);
    }

    private native long _getInverseTransposeViewProjMatrix_const(long _pointer_);

    /** **/
    public void getTransposeViewProjMatrix(org.ogre4j.IMatrix4 returnValue) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getTransposeViewProjMatrix_const(this.object.pointer)), false);
    }

    private native long _getTransposeViewProjMatrix_const(long _pointer_);

    /** **/
    public void getTransposeViewMatrix(org.ogre4j.IMatrix4 returnValue) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getTransposeViewMatrix_const(this.object.pointer)), false);
    }

    private native long _getTransposeViewMatrix_const(long _pointer_);

    /** **/
    public void getInverseTransposeViewMatrix(org.ogre4j.IMatrix4 returnValue) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getInverseTransposeViewMatrix_const(this.object.pointer)), false);
    }

    private native long _getInverseTransposeViewMatrix_const(long _pointer_);

    /** **/
    public void getTransposeProjectionMatrix(org.ogre4j.IMatrix4 returnValue) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getTransposeProjectionMatrix_const(this.object.pointer)), false);
    }

    private native long _getTransposeProjectionMatrix_const(long _pointer_);

    /** **/
    public void getInverseProjectionMatrix(org.ogre4j.IMatrix4 returnValue) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getInverseProjectionMatrix_const(this.object.pointer)), false);
    }

    private native long _getInverseProjectionMatrix_const(long _pointer_);

    /** **/
    public void getInverseTransposeProjectionMatrix(org.ogre4j.IMatrix4 returnValue) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getInverseTransposeProjectionMatrix_const(this.object.pointer)), false);
    }

    private native long _getInverseTransposeProjectionMatrix_const(long _pointer_);

    /** **/
    public void getTransposeWorldViewProjMatrix(org.ogre4j.IMatrix4 returnValue) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getTransposeWorldViewProjMatrix_const(this.object.pointer)), false);
    }

    private native long _getTransposeWorldViewProjMatrix_const(long _pointer_);

    /** **/
    public void getInverseWorldViewProjMatrix(org.ogre4j.IMatrix4 returnValue) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getInverseWorldViewProjMatrix_const(this.object.pointer)), false);
    }

    private native long _getInverseWorldViewProjMatrix_const(long _pointer_);

    /** **/
    public void getInverseTransposeWorldViewProjMatrix(org.ogre4j.IMatrix4 returnValue) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getInverseTransposeWorldViewProjMatrix_const(this.object.pointer)), false);
    }

    private native long _getInverseTransposeWorldViewProjMatrix_const(long _pointer_);

    /** **/
    public void getTransposeWorldViewMatrix(org.ogre4j.IMatrix4 returnValue) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getTransposeWorldViewMatrix_const(this.object.pointer)), false);
    }

    private native long _getTransposeWorldViewMatrix_const(long _pointer_);

    /** **/
    public void getTransposeWorldMatrix(org.ogre4j.IMatrix4 returnValue) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getTransposeWorldMatrix_const(this.object.pointer)), false);
    }

    private native long _getTransposeWorldMatrix_const(long _pointer_);

    /** **/
    public float getTime() {
         return _getTime_const(this.object.pointer);
    }

    private native float _getTime_const(long _pointer_);

    /** **/
    public float getTime_0_X(float x) {
         return _getTime_0_X__Realv_const(this.object.pointer, x);
    }

    private native float _getTime_0_X__Realv_const(long _pointer_, float x);

    /** **/
    public float getCosTime_0_X(float x) {
         return _getCosTime_0_X__Realv_const(this.object.pointer, x);
    }

    private native float _getCosTime_0_X__Realv_const(long _pointer_, float x);

    /** **/
    public float getSinTime_0_X(float x) {
         return _getSinTime_0_X__Realv_const(this.object.pointer, x);
    }

    private native float _getSinTime_0_X__Realv_const(long _pointer_, float x);

    /** **/
    public float getTanTime_0_X(float x) {
         return _getTanTime_0_X__Realv_const(this.object.pointer, x);
    }

    private native float _getTanTime_0_X__Realv_const(long _pointer_, float x);

    /** **/
    public void getTime_0_X_packed(org.ogre4j.IVector4 returnValue, float x) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getTime_0_X_packed__Realv_const(this.object.pointer, x)), false);
    }

    private native long _getTime_0_X_packed__Realv_const(long _pointer_, float x);

    /** **/
    public float getTime_0_1(float x) {
         return _getTime_0_1__Realv_const(this.object.pointer, x);
    }

    private native float _getTime_0_1__Realv_const(long _pointer_, float x);

    /** **/
    public float getCosTime_0_1(float x) {
         return _getCosTime_0_1__Realv_const(this.object.pointer, x);
    }

    private native float _getCosTime_0_1__Realv_const(long _pointer_, float x);

    /** **/
    public float getSinTime_0_1(float x) {
         return _getSinTime_0_1__Realv_const(this.object.pointer, x);
    }

    private native float _getSinTime_0_1__Realv_const(long _pointer_, float x);

    /** **/
    public float getTanTime_0_1(float x) {
         return _getTanTime_0_1__Realv_const(this.object.pointer, x);
    }

    private native float _getTanTime_0_1__Realv_const(long _pointer_, float x);

    /** **/
    public void getTime_0_1_packed(org.ogre4j.IVector4 returnValue, float x) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getTime_0_1_packed__Realv_const(this.object.pointer, x)), false);
    }

    private native long _getTime_0_1_packed__Realv_const(long _pointer_, float x);

    /** **/
    public float getTime_0_2Pi(float x) {
         return _getTime_0_2Pi__Realv_const(this.object.pointer, x);
    }

    private native float _getTime_0_2Pi__Realv_const(long _pointer_, float x);

    /** **/
    public float getCosTime_0_2Pi(float x) {
         return _getCosTime_0_2Pi__Realv_const(this.object.pointer, x);
    }

    private native float _getCosTime_0_2Pi__Realv_const(long _pointer_, float x);

    /** **/
    public float getSinTime_0_2Pi(float x) {
         return _getSinTime_0_2Pi__Realv_const(this.object.pointer, x);
    }

    private native float _getSinTime_0_2Pi__Realv_const(long _pointer_, float x);

    /** **/
    public float getTanTime_0_2Pi(float x) {
         return _getTanTime_0_2Pi__Realv_const(this.object.pointer, x);
    }

    private native float _getTanTime_0_2Pi__Realv_const(long _pointer_, float x);

    /** **/
    public void getTime_0_2Pi_packed(org.ogre4j.IVector4 returnValue, float x) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getTime_0_2Pi_packed__Realv_const(this.object.pointer, x)), false);
    }

    private native long _getTime_0_2Pi_packed__Realv_const(long _pointer_, float x);

    /** **/
    public float getFrameTime() {
         return _getFrameTime_const(this.object.pointer);
    }

    private native float _getFrameTime_const(long _pointer_);

    /** **/
    public float getFPS() {
         return _getFPS_const(this.object.pointer);
    }

    private native float _getFPS_const(long _pointer_);

    /** **/
    public float getViewportWidth() {
         return _getViewportWidth_const(this.object.pointer);
    }

    private native float _getViewportWidth_const(long _pointer_);

    /** **/
    public float getViewportHeight() {
         return _getViewportHeight_const(this.object.pointer);
    }

    private native float _getViewportHeight_const(long _pointer_);

    /** **/
    public float getInverseViewportWidth() {
         return _getInverseViewportWidth_const(this.object.pointer);
    }

    private native float _getInverseViewportWidth_const(long _pointer_);

    /** **/
    public float getInverseViewportHeight() {
         return _getInverseViewportHeight_const(this.object.pointer);
    }

    private native float _getInverseViewportHeight_const(long _pointer_);

    /** **/
    public void getViewDirection(org.ogre4j.IVector3 returnValue) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getViewDirection_const(this.object.pointer)), false);
    }

    private native long _getViewDirection_const(long _pointer_);

    /** **/
    public void getViewSideVector(org.ogre4j.IVector3 returnValue) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getViewSideVector_const(this.object.pointer)), false);
    }

    private native long _getViewSideVector_const(long _pointer_);

    /** **/
    public void getViewUpVector(org.ogre4j.IVector3 returnValue) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getViewUpVector_const(this.object.pointer)), false);
    }

    private native long _getViewUpVector_const(long _pointer_);

    /** **/
    public float getFOV() {
         return _getFOV_const(this.object.pointer);
    }

    private native float _getFOV_const(long _pointer_);

    /** **/
    public float getNearClipDistance() {
         return _getNearClipDistance_const(this.object.pointer);
    }

    private native float _getNearClipDistance_const(long _pointer_);

    /** **/
    public float getFarClipDistance() {
         return _getFarClipDistance_const(this.object.pointer);
    }

    private native float _getFarClipDistance_const(long _pointer_);

    /** **/
    public int getPassNumber() {
         return _getPassNumber_const(this.object.pointer);
    }

    private native int _getPassNumber_const(long _pointer_);

    /** **/
    public void setPassNumber(int passNumber) {
        _setPassNumber__iV(this.object.pointer, passNumber);
    }

    private native void _setPassNumber__iV(long _pointer_, int passNumber);

    /** **/
    public void incPassNumber() {
        _incPassNumber(this.object.pointer);
    }

    private native void _incPassNumber(long _pointer_);

}
