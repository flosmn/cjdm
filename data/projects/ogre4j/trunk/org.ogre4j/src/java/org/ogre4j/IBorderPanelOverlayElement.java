/**
 *  This source file is generated by XBiG (The XSLT Bindings Generator)
 *  For the latest info, see http://sourceforge.net/projects/xbig/
 * 
 *  Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
 *  Also see acknowledgements in Readme.html
 * 
 *  This program is free software; you can redistribute it and/or modify it under
 *  the terms of the GNU Lesser General Public License as published by the Free Software
 *  Foundation; either version 2 of the License, or (at your option) any later
 *  version.
 * 
 *  This program is distributed in the hope that it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 *  FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
 * 
 *  You should have received a copy of the GNU Lesser General Public License along with
 *  this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 *  Place - Suite 330, Boston, MA 02111-1307, USA, or go to
 *  http://www.gnu.org/copyleft/lesser.txt.
 * 
 *  Machine generated file
 */

        

package org.ogre4j;


import org.xbig.base.*;
public interface IBorderPanelOverlayElement extends INativeObject, org.ogre4j.IPanelOverlayElement {

public static interface ICmdBorderBottomLeftUV extends INativeObject, org.ogre4j.IParamCommand {

// this type is ignored
}
public static interface ICmdBorderBottomRightUV extends INativeObject, org.ogre4j.IParamCommand {

// this type is ignored
}
public static interface ICmdBorderBottomUV extends INativeObject, org.ogre4j.IParamCommand {

// this type is ignored
}
public static interface ICmdBorderLeftUV extends INativeObject, org.ogre4j.IParamCommand {

// this type is ignored
}
public static interface ICmdBorderMaterial extends INativeObject, org.ogre4j.IParamCommand {

// this type is ignored
}
public static interface ICmdBorderRightUV extends INativeObject, org.ogre4j.IParamCommand {

// this type is ignored
}
public static interface ICmdBorderSize extends INativeObject, org.ogre4j.IParamCommand {

// this type is ignored
}
public static interface ICmdBorderTopLeftUV extends INativeObject, org.ogre4j.IParamCommand {

// this type is ignored
}
public static interface ICmdBorderTopRightUV extends INativeObject, org.ogre4j.IParamCommand {

// this type is ignored
}
public static interface ICmdBorderTopUV extends INativeObject, org.ogre4j.IParamCommand {

// this type is ignored
}
public static interface ICellUV extends INativeObject {

    /** **/
    public float getu1();

    /** **/
    public void setu1(float _jni_value_);

    /** **/
    public float getv1();

    /** **/
    public void setv1(float _jni_value_);

    /** **/
    public float getu2();

    /** **/
    public void setu2(float _jni_value_);

    /** **/
    public float getv2();

    /** **/
    public void setv2(float _jni_value_);

}
    /** **/
    public void initialise();

    /** **/
    public String getTypeName();

    /** 
    Sets the size of the border. **/
    public void setBorderSize(float size);

    /** 
    Sets the size of the border, with different sizes for vertical and horizontal borders. **/
    public void setBorderSize(float sides, float topAndBottom);

    /** 
    Sets the size of the border separately for all borders. **/
    public void setBorderSize(float left, float right, float top, float bottom);

    /** 
    Gets the size of the left border. **/
    public float getLeftBorderSize();

    /** 
    Gets the size of the right border. **/
    public float getRightBorderSize();

    /** 
    Gets the size of the top border. **/
    public float getTopBorderSize();

    /** 
    Gets the size of the bottom border. **/
    public float getBottomBorderSize();

    /** 
    Sets the texture coordinates for the left edge of the border. **/
    public void setLeftBorderUV(float u1, float v1, float u2, float v2);

    /** 
    Sets the texture coordinates for the right edge of the border. **/
    public void setRightBorderUV(float u1, float v1, float u2, float v2);

    /** 
    Sets the texture coordinates for the top edge of the border. **/
    public void setTopBorderUV(float u1, float v1, float u2, float v2);

    /** 
    Sets the texture coordinates for the bottom edge of the border. **/
    public void setBottomBorderUV(float u1, float v1, float u2, float v2);

    /** 
    Sets the texture coordinates for the top-left corner of the border. **/
    public void setTopLeftBorderUV(float u1, float v1, float u2, float v2);

    /** 
    Sets the texture coordinates for the top-right corner of the border. **/
    public void setTopRightBorderUV(float u1, float v1, float u2, float v2);

    /** 
    Sets the texture coordinates for the bottom-left corner of the border. **/
    public void setBottomLeftBorderUV(float u1, float v1, float u2, float v2);

    /** 
    Sets the texture coordinates for the bottom-right corner of the border. **/
    public void setBottomRightBorderUV(float u1, float v1, float u2, float v2);

    /** **/
    public String getLeftBorderUVString();

    /** **/
    public String getRightBorderUVString();

    /** **/
    public String getTopBorderUVString();

    /** **/
    public String getBottomBorderUVString();

    /** **/
    public String getTopLeftBorderUVString();

    /** **/
    public String getTopRightBorderUVString();

    /** **/
    public String getBottomLeftBorderUVString();

    /** **/
    public String getBottomRightBorderUVString();

    /** 
    Sets the name of the material to use for the borders. **/
    public void setBorderMaterialName(String name);

    /** 
    Gets the name of the material to use for the borders. **/
    public String getBorderMaterialName();

    /** 
    Overridden from **/
    public void _updateRenderQueue(org.ogre4j.IRenderQueue queue);

    /** **/
    public void visitRenderables(org.ogre4j.IRenderable.IVisitor visitor, boolean debugRenderables);

    /** 
    Overridden from **/
    public void setMetricsMode(org.ogre4j.GuiMetricsMode gmm);

    /** 
    Overridden from **/
    public void _update();

}
