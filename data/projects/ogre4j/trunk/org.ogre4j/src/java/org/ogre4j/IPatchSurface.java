/**
 *  This source file is generated by XBiG (The XSLT Bindings Generator)
 *  For the latest info, see http://sourceforge.net/projects/xbig/
 * 
 *  Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
 *  Also see acknowledgements in Readme.html
 * 
 *  This program is free software; you can redistribute it and/or modify it under
 *  the terms of the GNU Lesser General Public License as published by the Free Software
 *  Foundation; either version 2 of the License, or (at your option) any later
 *  version.
 * 
 *  This program is distributed in the hope that it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 *  FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
 * 
 *  You should have received a copy of the GNU Lesser General Public License along with
 *  this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 *  Place - Suite 330, Boston, MA 02111-1307, USA, or go to
 *  http://www.gnu.org/copyleft/lesser.txt.
 * 
 *  Machine generated file
 */

        

package org.ogre4j;


import org.xbig.base.*;
public interface IPatchSurface extends INativeObject, org.ogre4j.IGeometryAllocatedObject {

    /** 
    Sets up the surface by defining it's control points, type and initial subdivision level. **/
    public void defineSurface(VoidPointer controlPointBuffer, org.ogre4j.IVertexDeclaration declaration, int width, int height, org.ogre4j.PatchSurface.PatchSurfaceType pType, int uMaxSubdivisionLevel, int vMaxSubdivisionLevel, org.ogre4j.PatchSurface.VisibleSide visibleSide);

    /** 
    Based on a previous call to defineSurface, establishes the number of vertices required to hold this patch at the maximum detail level. **/
    public int getRequiredVertexCount();

    /** 
    Based on a previous call to defineSurface, establishes the number of indexes required to hold this patch at the maximum detail level. **/
    public int getRequiredIndexCount();

    /** 
    Gets the current index count based on the current subdivision level. **/
    public int getCurrentIndexCount();

    /** **/
    public int getIndexOffset();

    /** **/
    public int getVertexOffset();

    /** 
    Gets the bounds of this patch, only valid after calling defineSurface. **/
    public org.ogre4j.IAxisAlignedBox getBounds();

    /** 
    Gets the radius of the bounding sphere for this patch, only valid after defineSurface has been called. **/
    public float getBoundingSphereRadius();

    /** 
    Tells the system to build the mesh relating to the surface into externally created buffers. **/
    public void build(org.ogre4j.IHardwareVertexBufferSharedPtr destVertexBuffer, int vertexStart, org.ogre4j.IHardwareIndexBufferSharedPtr destIndexBuffer, int indexStart);

    /** 
    Alters the level of subdivision for this surface. **/
    public void setSubdivisionFactor(float factor);

    /** 
    Gets the current level of subdivision. **/
    public float getSubdivisionFactor();

    /** **/
    public VoidPointer getControlPointBuffer();

    /** 
    Convenience method for telling the patch that the control points have been deleted, since once the patch has been built they are not required. **/
    public void notifyControlPointBufferDeallocated();

}
