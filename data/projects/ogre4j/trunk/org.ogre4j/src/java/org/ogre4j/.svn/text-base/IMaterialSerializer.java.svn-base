/**
 *  This source file is generated by XBiG (The XSLT Bindings Generator)
 *  For the latest info, see http://sourceforge.net/projects/xbig/
 * 
 *  Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
 *  Also see acknowledgements in Readme.html
 * 
 *  This program is free software; you can redistribute it and/or modify it under
 *  the terms of the GNU Lesser General Public License as published by the Free Software
 *  Foundation; either version 2 of the License, or (at your option) any later
 *  version.
 * 
 *  This program is distributed in the hope that it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 *  FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
 * 
 *  You should have received a copy of the GNU Lesser General Public License along with
 *  this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 *  Place - Suite 330, Boston, MA 02111-1307, USA, or go to
 *  http://www.gnu.org/copyleft/lesser.txt.
 * 
 *  Machine generated file
 */

        

package org.ogre4j;


import org.xbig.base.*;
public interface IMaterialSerializer extends INativeObject, org.ogre4j.IGeneralAllocatedObject {

public interface IAttribParserList extends INativeObject, org.std.Imap {

// this type is ignored
}
public interface IEffectMap extends INativeObject, org.std.Imultimap< org.ogre4j.TextureUnitState.TextureEffectType, org.ogre4j.ITextureUnitState.ITextureEffect > {

    /** **/
    public void clear();

    /** **/
    public int count(org.ogre4j.TextureUnitState.TextureEffectType key);

    /** **/
    public boolean empty();

    /** **/
    public int erase(org.ogre4j.TextureUnitState.TextureEffectType key);

    /** **/
    public int max_size();

    /** **/
    public int size();

}
public interface IGpuProgramDefinitionContainer extends INativeObject, org.std.Iset< String > {

    /** **/
    public void clear();

    /** **/
    public int count(String key);

    /** **/
    public boolean empty();

    /** **/
    public int erase(String key);

    /** **/
    public int max_size();

    /** **/
    public int size();

}
    /** 
    Queue an in-memory  to the internal buffer for export. **/
    public void queueForExport(org.ogre4j.IMaterialPtr pMat, boolean clearQueued, boolean exportDefaults);

    /** 
    Exports queued material(s) to a named material script file. **/
    public void exportQueued(String filename, boolean includeProgDef, String programFilename);

    /** 
    Exports a single in-memory  to the named material script file. **/
    public void exportMaterial(org.ogre4j.IMaterialPtr pMat, String filename, boolean exportDefaults, boolean includeProgDef, String programFilename);

    /** 
    Returns a string representing the parsed material(s) **/
    public String getQueuedAsString();

    /** 
    Clears the internal buffer **/
    public void clearQueue();

    /** 
    Parses a  script file passed as a stream. **/
    public void parseScript(org.ogre4j.IDataStreamPtr stream, String groupName);

}
