/**
 *  This source file is generated by XBiG (The XSLT Bindings Generator)
 *  For the latest info, see http://sourceforge.net/projects/xbig/
 * 
 *  Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
 *  Also see acknowledgements in Readme.html
 * 
 *  This program is free software; you can redistribute it and/or modify it under
 *  the terms of the GNU Lesser General Public License as published by the Free Software
 *  Foundation; either version 2 of the License, or (at your option) any later
 *  version.
 * 
 *  This program is distributed in the hope that it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 *  FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
 * 
 *  You should have received a copy of the GNU Lesser General Public License along with
 *  this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 *  Place - Suite 330, Boston, MA 02111-1307, USA, or go to
 *  http://www.gnu.org/copyleft/lesser.txt.
 * 
 *  Machine generated file
 */

        

package org.ogre4j;


import org.xbig.base.*;
public enum ParameterType implements INativeEnum < ParameterType > {
    PT_BOOL(ParameterTypeHelper.ENUM_VALUES[0]),
    PT_REAL(ParameterTypeHelper.ENUM_VALUES[1]),
    PT_INT(ParameterTypeHelper.ENUM_VALUES[2]),
    PT_UNSIGNED_INT(ParameterTypeHelper.ENUM_VALUES[3]),
    PT_SHORT(ParameterTypeHelper.ENUM_VALUES[4]),
    PT_UNSIGNED_SHORT(ParameterTypeHelper.ENUM_VALUES[5]),
    PT_LONG(ParameterTypeHelper.ENUM_VALUES[6]),
    PT_UNSIGNED_LONG(ParameterTypeHelper.ENUM_VALUES[7]),
    PT_STRING(ParameterTypeHelper.ENUM_VALUES[8]),
    PT_VECTOR3(ParameterTypeHelper.ENUM_VALUES[9]),
    PT_MATRIX3(ParameterTypeHelper.ENUM_VALUES[10]),
    PT_MATRIX4(ParameterTypeHelper.ENUM_VALUES[11]),
    PT_QUATERNION(ParameterTypeHelper.ENUM_VALUES[12]),
    PT_COLOURVALUE(ParameterTypeHelper.ENUM_VALUES[13]);

    private int value;

    ParameterType(int i) {
        this.value = i;
    }

    public int getValue() {
        return value;
    }

    public ParameterType getEnum(int val) {
        return toEnum(val);
    }

    public static final ParameterType toEnum(int retval) {
    if (retval ==PT_BOOL.value)
        return ParameterType.PT_BOOL;
    else if (retval ==PT_REAL.value)
        return ParameterType.PT_REAL;
    else if (retval ==PT_INT.value)
        return ParameterType.PT_INT;
    else if (retval ==PT_UNSIGNED_INT.value)
        return ParameterType.PT_UNSIGNED_INT;
    else if (retval ==PT_SHORT.value)
        return ParameterType.PT_SHORT;
    else if (retval ==PT_UNSIGNED_SHORT.value)
        return ParameterType.PT_UNSIGNED_SHORT;
    else if (retval ==PT_LONG.value)
        return ParameterType.PT_LONG;
    else if (retval ==PT_UNSIGNED_LONG.value)
        return ParameterType.PT_UNSIGNED_LONG;
    else if (retval ==PT_STRING.value)
        return ParameterType.PT_STRING;
    else if (retval ==PT_VECTOR3.value)
        return ParameterType.PT_VECTOR3;
    else if (retval ==PT_MATRIX3.value)
        return ParameterType.PT_MATRIX3;
    else if (retval ==PT_MATRIX4.value)
        return ParameterType.PT_MATRIX4;
    else if (retval ==PT_QUATERNION.value)
        return ParameterType.PT_QUATERNION;
    else if (retval ==PT_COLOURVALUE.value)
        return ParameterType.PT_COLOURVALUE;
    throw new RuntimeException("wrong number in jni call for an enum");
    }
}

class ParameterTypeHelper{
static { System.loadLibrary("ogre4j");}

				public static final int[] ENUM_VALUES =
				getEnumValues();

			
				private static native int[] getEnumValues();

			
};

