/**
 *  This source file is generated by XBiG (The XSLT Bindings Generator)
 *  For the latest info, see http://sourceforge.net/projects/xbig/
 * 
 *  Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
 *  Also see acknowledgements in Readme.html
 * 
 *  This program is free software; you can redistribute it and/or modify it under
 *  the terms of the GNU Lesser General Public License as published by the Free Software
 *  Foundation; either version 2 of the License, or (at your option) any later
 *  version.
 * 
 *  This program is distributed in the hope that it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 *  FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
 * 
 *  You should have received a copy of the GNU Lesser General Public License along with
 *  this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 *  Place - Suite 330, Boston, MA 02111-1307, USA, or go to
 *  http://www.gnu.org/copyleft/lesser.txt.
 * 
 *  Machine generated file
 */

        

package org.ogre4j;


import org.xbig.base.*;
public interface IConvexBody extends INativeObject {

public interface IPolygonList extends INativeObject, org.std.Ivector< org.ogre4j.IPolygon > {

    /** **/
    public void assign(int num, org.ogre4j.IPolygon val);

    /** **/
    public org.ogre4j.IPolygon at(int loc);

    /** **/
    public org.ogre4j.IPolygon back();

    /** **/
    public int capacity();

    /** **/
    public void clear();

    /** **/
    public boolean empty();

    /** **/
    public org.ogre4j.IPolygon front();

    /** **/
    public int max_size();

    /** **/
    public void pop_back();

    /** **/
    public void push_back(org.ogre4j.IPolygon val);

    /** **/
    public void reserve(int size);

    /** **/
    public int size();

}
    /** 
    Build a new polygon representation from a frustum. **/
    public void define(org.ogre4j.IFrustum frustum);

    /** 
    Build a new polygon representation from an AAB. **/
    public void define(org.ogre4j.IAxisAlignedBox aab);

    /** 
    Clips the body with a frustum. The resulting holes are filled with new polygons. **/
    public void clip(org.ogre4j.IFrustum frustum);

    /** 
    Clips the body with an AAB. The resulting holes are filled with new polygons. **/
    public void clip(org.ogre4j.IAxisAlignedBox aab);

    /** 
    Clips the body with another body. **/
    public void clip(org.ogre4j.IConvexBody body);

    /** 
    Clips the object by the positive half space of a plane **/
    public void clip(org.ogre4j.IPlane pl, boolean keepNegative);

    /** 
    Extends the existing body to incorporate the passed in point as a convex hull. **/
    public void extend(org.ogre4j.IVector3 pt);

    /** 
    Resets the object. **/
    public void reset();

    /** 
    Returns the current number of polygons. **/
    public int getPolygonCount();

    /** 
    Returns the number of vertices for a polygon **/
    public int getVertexCount(int poly);

    /** 
    Returns a polygon. **/
    public org.ogre4j.IPolygon getPolygon(int poly);

    /** 
    Returns a specific vertex of a polygon. **/
    public org.ogre4j.IVector3 getVertex(int poly, int vertex);

    /** 
    Returns the normal of a specified polygon. **/
    public org.ogre4j.IVector3 getNormal(int poly);

    /** 
    Returns an AABB representation. **/
    public void getAABB(org.ogre4j.IAxisAlignedBox returnValue);

    /** 
    Checks if the body has a closed hull. **/
    public boolean hasClosedHull();

    /** 
    Merges all neighboring polygons into one single polygon if they are lay in the same plane. **/
    public void mergePolygons();

    /** 
    Determines if the current object is equal to the compared one. **/
    public boolean operatorEqual(org.ogre4j.IConvexBody rhs);

    /** 
    Determines if the current object is not equal to the compared one. **/
    public boolean operatorNotEqual(org.ogre4j.IConvexBody rhs);

    /** 
     details of this body **/
    public void logInfo();

}
