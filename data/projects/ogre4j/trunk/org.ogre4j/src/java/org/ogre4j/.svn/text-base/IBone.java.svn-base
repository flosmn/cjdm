/**
 *  This source file is generated by XBiG (The XSLT Bindings Generator)
 *  For the latest info, see http://sourceforge.net/projects/xbig/
 * 
 *  Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
 *  Also see acknowledgements in Readme.html
 * 
 *  This program is free software; you can redistribute it and/or modify it under
 *  the terms of the GNU Lesser General Public License as published by the Free Software
 *  Foundation; either version 2 of the License, or (at your option) any later
 *  version.
 * 
 *  This program is distributed in the hope that it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 *  FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
 * 
 *  You should have received a copy of the GNU Lesser General Public License along with
 *  this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 *  Place - Suite 330, Boston, MA 02111-1307, USA, or go to
 *  http://www.gnu.org/copyleft/lesser.txt.
 * 
 *  Machine generated file
 */

        

package org.ogre4j;


import org.xbig.base.*;
public interface IBone extends INativeObject, org.ogre4j.INode {

    /** 
    Creates a new  as a child of this bone. **/
    public org.ogre4j.IBone createChild(int handle, org.ogre4j.IVector3 translate, org.ogre4j.IQuaternion rotate);

    /** 
    Gets the numeric handle for this bone (unique within the skeleton). **/
    public int getHandle();

    /** 
    Sets the current position / orientation to be the 'binding pose' ie the layout in which bones were originally bound to a mesh. **/
    public void setBindingPose();

    /** 
    Resets the position and orientation of this  to the original binding position. **/
    public void reset();

    /** 
    Sets whether or not this bone is manually controlled. **/
    public void setManuallyControlled(boolean manuallyControlled);

    /** 
    Getter for mManuallyControlled Flag **/
    public boolean isManuallyControlled();

    /** 
    Gets the transform which takes bone space to current from the binding pose. **/
    public void _getOffsetTransform(org.ogre4j.IMatrix4 m);

    /** 
    Gets the inverted binding pose scale. **/
    public org.ogre4j.IVector3 _getBindingPoseInverseScale();

    /** 
    Gets the inverted binding pose position. **/
    public org.ogre4j.IVector3 _getBindingPoseInversePosition();

    /** 
    Gets the inverted binding pose orientation. **/
    public org.ogre4j.IQuaternion _getBindingPoseInverseOrientation();

    /** **/
    public void needUpdate(boolean forceParentUpdate);

}
