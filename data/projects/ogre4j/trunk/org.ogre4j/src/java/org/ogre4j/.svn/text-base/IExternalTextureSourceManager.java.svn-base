/**
 *  This source file is generated by XBiG (The XSLT Bindings Generator)
 *  For the latest info, see http://sourceforge.net/projects/xbig/
 * 
 *  Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
 *  Also see acknowledgements in Readme.html
 * 
 *  This program is free software; you can redistribute it and/or modify it under
 *  the terms of the GNU Lesser General Public License as published by the Free Software
 *  Foundation; either version 2 of the License, or (at your option) any later
 *  version.
 * 
 *  This program is distributed in the hope that it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 *  FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
 * 
 *  You should have received a copy of the GNU Lesser General Public License along with
 *  this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 *  Place - Suite 330, Boston, MA 02111-1307, USA, or go to
 *  http://www.gnu.org/copyleft/lesser.txt.
 * 
 *  Machine generated file
 */

        

package org.ogre4j;


import org.xbig.base.*;
public interface IExternalTextureSourceManager extends INativeObject, org.ogre4j.IResourceAllocatedObject, org.ogre4j.ISingleton< org.ogre4j.IExternalTextureSourceManager > {

public interface ITextureSystemList extends INativeObject, org.std.Imap< String, org.ogre4j.IExternalTextureSource > {

    /** **/
    public void clear();

    /** **/
    public int count(String key);

    /** **/
    public boolean empty();

    /** **/
    public int erase(String key);

    /** **/
    public int max_size();

    /** **/
    public int size();

    /** **/
    public org.ogre4j.IExternalTextureSource get(String key);

    /** **/
    public void insert(String key, org.ogre4j.IExternalTextureSource value);

}
    /** 
    Sets active plugin (ie. "video", "effect", "generic", etc..) **/
    public void setCurrentPlugIn(String sTexturePlugInType);

    /** 
    Returns currently selected plugin, may be null if none selected **/
    public org.ogre4j.IExternalTextureSource getCurrentPlugIn();

    /** 
    Calls the destroy method of all registered plugins... Only the owner plugin should perform the destroy action. **/
    public void destroyAdvancedTexture(String sTextureName, String groupName);

    /** 
    Returns the plugin which reistered itself with a specific name (eg. "video"), or null if specified plugin not found **/
    public org.ogre4j.IExternalTextureSource getExternalTextureSource(String sTexturePlugInType);

    /** 
    Called from plugin to register itself **/
    public void setExternalTextureSource(String sTexturePlugInType, org.ogre4j.IExternalTextureSource pTextureSystem);

}
