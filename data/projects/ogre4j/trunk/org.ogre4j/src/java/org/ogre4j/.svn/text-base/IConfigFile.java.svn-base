/**
 *  This source file is generated by XBiG (The XSLT Bindings Generator)
 *  For the latest info, see http://sourceforge.net/projects/xbig/
 * 
 *  Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
 *  Also see acknowledgements in Readme.html
 * 
 *  This program is free software; you can redistribute it and/or modify it under
 *  the terms of the GNU Lesser General Public License as published by the Free Software
 *  Foundation; either version 2 of the License, or (at your option) any later
 *  version.
 * 
 *  This program is distributed in the hope that it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 *  FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
 * 
 *  You should have received a copy of the GNU Lesser General Public License along with
 *  this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 *  Place - Suite 330, Boston, MA 02111-1307, USA, or go to
 *  http://www.gnu.org/copyleft/lesser.txt.
 * 
 *  Machine generated file
 */

        

package org.ogre4j;


import org.xbig.base.*;
public interface IConfigFile extends INativeObject, org.ogre4j.IGeneralAllocatedObject {

public interface ISettingsMultiMap extends INativeObject, org.std.Imultimap< String, String > {

    /** **/
    public void clear();

    /** **/
    public int count(String key);

    /** **/
    public boolean empty();

    /** **/
    public int erase(String key);

    /** **/
    public int max_size();

    /** **/
    public int size();

}
public interface ISettingsIterator extends INativeObject, org.ogre4j.IMapIterator< org.ogre4j.IConfigFile.ISettingsMultiMap > {

    /** **/
    public boolean hasMoreElements();

    /** **/
    public String getNext();

    /** **/
    public String peekNextValue();

    /** **/
    public String peekNextKey();

    /** **/
    public org.ogre4j.IConfigFile.ISettingsIterator operatorAssignment(org.ogre4j.IConfigFile.ISettingsIterator rhs);

    /** **/
    public StringPointer peekNextValuePtr();

    /** **/
    public void moveNext();

}
public interface ISettingsBySection extends INativeObject, org.std.Imap< String, org.ogre4j.IConfigFile.ISettingsMultiMap > {

    /** **/
    public void clear();

    /** **/
    public int count(String key);

    /** **/
    public boolean empty();

    /** **/
    public int erase(String key);

    /** **/
    public int max_size();

    /** **/
    public int size();

    /** **/
    public org.ogre4j.IConfigFile.ISettingsMultiMap get(String key);

    /** **/
    public void insert(String key, org.ogre4j.IConfigFile.ISettingsMultiMap value);

}
public interface ISectionIterator extends INativeObject, org.ogre4j.IMapIterator< org.ogre4j.IConfigFile.ISettingsBySection > {

    /** **/
    public boolean hasMoreElements();

    /** **/
    public org.ogre4j.IConfigFile.ISettingsMultiMap getNext();

    /** **/
    public org.ogre4j.IConfigFile.ISettingsMultiMap peekNextValue();

    /** **/
    public String peekNextKey();

    /** **/
    public org.ogre4j.IConfigFile.ISectionIterator operatorAssignment(org.ogre4j.IConfigFile.ISectionIterator rhs);

    /** **/
    public NativeObjectPointer<org.ogre4j.IConfigFile.ISettingsMultiMap> peekNextValuePtr();

    /** **/
    public void moveNext();

}
    /** **/
    public void load(String filename, String separators, boolean trimWhitespace);

    /** **/
    public void load(String filename, String resourceGroup, String separators, boolean trimWhitespace);

    /** **/
    public void load(org.ogre4j.IDataStreamPtr stream, String separators, boolean trimWhitespace);

    /** **/
    public void loadDirect(String filename, String separators, boolean trimWhitespace);

    /** **/
    public void loadFromResourceSystem(String filename, String resourceGroup, String separators, boolean trimWhitespace);

    /** 
    Gets the first setting from the file with the named key. **/
    public String getSetting(String key, String section, String defaultValue);

    /** 
    Gets all settings from the file with the named key. **/
    public void getMultiSetting(org.ogre4j.IStringVector returnValue, String key, String section);

    /** 
    Get an iterator over all the available sections in the config file **/
    public void getSectionIterator(org.ogre4j.IConfigFile.ISectionIterator returnValue);

    /** 
    Get an iterator over all the available settings in a section **/
    public void getSettingsIterator(org.ogre4j.IConfigFile.ISettingsIterator returnValue, String section);

    /** 
    Clear the settings **/
    public void clear();

}
