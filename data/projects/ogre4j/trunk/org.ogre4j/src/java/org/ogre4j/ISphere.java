/**
 *  This source file is generated by XBiG (The XSLT Bindings Generator)
 *  For the latest info, see http://sourceforge.net/projects/xbig/
 * 
 *  Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
 *  Also see acknowledgements in Readme.html
 * 
 *  This program is free software; you can redistribute it and/or modify it under
 *  the terms of the GNU Lesser General Public License as published by the Free Software
 *  Foundation; either version 2 of the License, or (at your option) any later
 *  version.
 * 
 *  This program is distributed in the hope that it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 *  FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
 * 
 *  You should have received a copy of the GNU Lesser General Public License along with
 *  this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 *  Place - Suite 330, Boston, MA 02111-1307, USA, or go to
 *  http://www.gnu.org/copyleft/lesser.txt.
 * 
 *  Machine generated file
 */

        

package org.ogre4j;


import org.xbig.base.*;
public interface ISphere extends INativeObject {

    /** 
    Returns the radius of the sphere. **/
    public float getRadius();

    /** 
    Sets the radius of the sphere. **/
    public void setRadius(float radius);

    /** 
    Returns the center point of the sphere. **/
    public org.ogre4j.IVector3 getCenter();

    /** 
    Sets the center point of the sphere. **/
    public void setCenter(org.ogre4j.IVector3 center);

    /** 
    Returns whether or not this sphere intersects another sphere. **/
    public boolean intersects(org.ogre4j.ISphere s);

    /** 
    Returns whether or not this sphere intersects a box. **/
    public boolean intersects(org.ogre4j.IAxisAlignedBox box);

    /** 
    Returns whether or not this sphere intersects a plane. **/
    public boolean intersects(org.ogre4j.IPlane plane);

    /** 
    Returns whether or not this sphere intersects a point. **/
    public boolean intersects(org.ogre4j.IVector3 v);

}
