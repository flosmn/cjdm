/**
 *  This source file is generated by XBiG (The XSLT Bindings Generator)
 *  For the latest info, see http://sourceforge.net/projects/xbig/
 * 
 *  Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
 *  Also see acknowledgements in Readme.html
 * 
 *  This program is free software; you can redistribute it and/or modify it under
 *  the terms of the GNU Lesser General Public License as published by the Free Software
 *  Foundation; either version 2 of the License, or (at your option) any later
 *  version.
 * 
 *  This program is distributed in the hope that it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 *  FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
 * 
 *  You should have received a copy of the GNU Lesser General Public License along with
 *  this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 *  Place - Suite 330, Boston, MA 02111-1307, USA, or go to
 *  http://www.gnu.org/copyleft/lesser.txt.
 * 
 *  Machine generated file
 */

        

package org.ogre4j;


import org.xbig.base.*;
public class Billboard extends org.xbig.base.NativeObject implements org.ogre4j.IBillboard {
static { System.loadLibrary("ogre4j");}
 
        
	/**
	 * 
	 * This constructor is public for internal useage only!
	 * Do not use it!
	 * 
	 */
	public Billboard(org.xbig.base.InstancePointer p) {
		super(p);
	}

	/**
	 * 
	 * Creates a Java wrapper object for an existing C++ object.
	 * If remote is set to 'true' this object cannot be deleted in Java.
	 * 
	 */
	protected Billboard(org.xbig.base.InstancePointer p, boolean remote) {
		super(p, remote);
	}

    /**
     * Allows creation of Java objects without C++ objects.
     * 
     * @see org.xbig.base.WithoutNativeObject
     * @see org.xbig.base.INativeObject#disconnectFromNativeObject()
     */
	public Billboard(org.xbig.base.WithoutNativeObject val) {
		super(val);
	}

	public void delete() {
		if (this.remote) {
	       throw new RuntimeException("can't dispose object created by native library");
	    }

		if(!this.deleted) {
		    __delete(object.pointer);
		    this.deleted = true;
		   	this.object.pointer = 0;
		}
	}

	public void finalize() {
		if(!this.remote && !this.deleted) {
			delete();
		}
	}
	
			
	private final native void __delete(long _pointer_);	



          /** 
    Default constructor. **/
    public Billboard() {
         super( new org.xbig.base.InstancePointer(__createBillboard()), false);
    }

    private native static long __createBillboard();

    /** 
    Normal constructor as called by . **/
    public Billboard(org.ogre4j.IVector3 position, org.ogre4j.IBillboardSet owner, org.ogre4j.IColourValue colour) {
         super( new org.xbig.base.InstancePointer(__createBillboard__Vector3RBillboardSetpColourValueR( position.getInstancePointer().pointer,  owner.getInstancePointer().pointer,  colour.getInstancePointer().pointer)), false);
    }

    private native static long __createBillboard__Vector3RBillboardSetpColourValueR(long position, long owner, long colour);

    /** 
    Get the rotation of the billboard. **/
    public org.ogre4j.IRadian getRotation() {
         return new org.ogre4j.Radian(new InstancePointer(_getRotation_const(this.object.pointer)));
    }

    private native long _getRotation_const(long _pointer_);

    /** 
    Set the rotation of the billboard. **/
    public void setRotation(org.ogre4j.IRadian rotation) {
        _setRotation__RadianR(this.object.pointer, rotation.getInstancePointer().pointer);
    }

    private native void _setRotation__RadianR(long _pointer_, long rotation);

    /** 
    Set the position of the billboard. **/
    public void setPosition(org.ogre4j.IVector3 position) {
        _setPosition__Vector3R(this.object.pointer, position.getInstancePointer().pointer);
    }

    private native void _setPosition__Vector3R(long _pointer_, long position);

    /** 
    Set the position of the billboard. **/
    public void setPosition(float x, float y, float z) {
        _setPosition__RealvRealvRealv(this.object.pointer, x,  y,  z);
    }

    private native void _setPosition__RealvRealvRealv(long _pointer_, float x, float y, float z);

    /** 
    Get the position of the billboard. **/
    public org.ogre4j.IVector3 getPosition() {
         return new org.ogre4j.Vector3(new InstancePointer(_getPosition_const(this.object.pointer)));
    }

    private native long _getPosition_const(long _pointer_);

    /** 
    Sets the width and height for this billboard. **/
    public void setDimensions(float width, float height) {
        _setDimensions__RealvRealv(this.object.pointer, width,  height);
    }

    private native void _setDimensions__RealvRealv(long _pointer_, float width, float height);

    /** 
    Resets this  to use the parent BillboardSet's dimensions instead of it's own. **/
    public void resetDimensions() {
        _resetDimensions(this.object.pointer);
    }

    private native void _resetDimensions(long _pointer_);

    /** 
    Sets the colour of this billboard. **/
    public void setColour(org.ogre4j.IColourValue colour) {
        _setColour__ColourValueR(this.object.pointer, colour.getInstancePointer().pointer);
    }

    private native void _setColour__ColourValueR(long _pointer_, long colour);

    /** 
    Gets the colour of this billboard. **/
    public org.ogre4j.IColourValue getColour() {
         return new org.ogre4j.ColourValue(new InstancePointer(_getColour_const(this.object.pointer)));
    }

    private native long _getColour_const(long _pointer_);

    /** 
    Returns true if this billboard deviates from the BillboardSet's default dimensions (i.e. if the  method has been called for this instance). **/
    public boolean hasOwnDimensions() {
         return _hasOwnDimensions_const(this.object.pointer);
    }

    private native boolean _hasOwnDimensions_const(long _pointer_);

    /** 
    Retrieves the billboard's personal width, if hasOwnDimensions is true. **/
    public float getOwnWidth() {
         return _getOwnWidth_const(this.object.pointer);
    }

    private native float _getOwnWidth_const(long _pointer_);

    /** 
    Retrieves the billboard's personal width, if hasOwnDimensions is true. **/
    public float getOwnHeight() {
         return _getOwnHeight_const(this.object.pointer);
    }

    private native float _getOwnHeight_const(long _pointer_);

    /** 
    Internal method for notifying the billboard of it's owner. **/
    public void _notifyOwner(org.ogre4j.IBillboardSet owner) {
        __notifyOwner__BillboardSetp(this.object.pointer, owner.getInstancePointer().pointer);
    }

    private native void __notifyOwner__BillboardSetp(long _pointer_, long owner);

    /** 
    Returns true if this billboard use individual texture coordinate rect (i.e. if the  method has been called for this instance), or returns false if use texture coordinates defined in the parent BillboardSet's texture coordinates array (i.e. if the  method has been called for this instance). **/
    public boolean isUseTexcoordRect() {
         return _isUseTexcoordRect_const(this.object.pointer);
    }

    private native boolean _isUseTexcoordRect_const(long _pointer_);

    /** 
     sets which texture coordinate rect this billboard will use when rendering. The parent billboard set may contain more than one, in which case a billboard can be textured with different pieces of a larger texture sheet very efficiently. **/
    public void setTexcoordIndex(int texcoordIndex) {
        _setTexcoordIndex__uint16v(this.object.pointer, texcoordIndex);
    }

    private native void _setTexcoordIndex__uint16v(long _pointer_, int texcoordIndex);

    /** 
     returns the previous value set by . The default value is 0, which is always a valid texture coordinate set. **/
    public int getTexcoordIndex() {
         return _getTexcoordIndex_const(this.object.pointer);
    }

    private native int _getTexcoordIndex_const(long _pointer_);

    /** 
     sets the individual texture coordinate rect of this billboard will use when rendering. The parent billboard set may contain more than one, in which case a billboard can be textured with different pieces of a larger texture sheet very efficiently. **/
    public void setTexcoordRect(org.ogre4j.IFloatRect texcoordRect) {
        _setTexcoordRect__FloatRectR(this.object.pointer, texcoordRect.getInstancePointer().pointer);
    }

    private native void _setTexcoordRect__FloatRectR(long _pointer_, long texcoordRect);

    /** 
     sets the individual texture coordinate rect of this billboard will use when rendering. The parent billboard set may contain more than one, in which case a billboard can be textured with different pieces of a larger texture sheet very efficiently. **/
    public void setTexcoordRect(float u0, float v0, float u1, float v1) {
        _setTexcoordRect__RealvRealvRealvRealv(this.object.pointer, u0,  v0,  u1,  v1);
    }

    private native void _setTexcoordRect__RealvRealvRealvRealv(long _pointer_, float u0, float v0, float u1, float v1);

    /** 
     returns the previous value set by . **/
    public org.ogre4j.IFloatRect getTexcoordRect() {
         return new org.ogre4j.FloatRect(new InstancePointer(_getTexcoordRect_const(this.object.pointer)));
    }

    private native long _getTexcoordRect_const(long _pointer_);

    /** **/
    public void getmPosition(org.ogre4j.IVector3 returnValue) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getmPosition(this.object.pointer)), false);
    }

    private native long _getmPosition(long _pointer_);

    /** **/
    public void setmPosition(org.ogre4j.IVector3 _jni_value_) {
        _setmPosition(this.object.pointer, _jni_value_.getInstancePointer().pointer);
    }

    private native void _setmPosition(long _pointer_, long _jni_value_);

    /** **/
    public void getmDirection(org.ogre4j.IVector3 returnValue) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getmDirection(this.object.pointer)), false);
    }

    private native long _getmDirection(long _pointer_);

    /** **/
    public void setmDirection(org.ogre4j.IVector3 _jni_value_) {
        _setmDirection(this.object.pointer, _jni_value_.getInstancePointer().pointer);
    }

    private native void _setmDirection(long _pointer_, long _jni_value_);

    /** **/
    public org.ogre4j.IBillboardSet getmParentSet() {
         return new org.ogre4j.BillboardSet(new InstancePointer(_getmParentSet(this.object.pointer)));
    }

    private native long _getmParentSet(long _pointer_);

    /** **/
    public void setmParentSet(org.ogre4j.IBillboardSet _jni_value_) {
        _setmParentSet(this.object.pointer, _jni_value_.getInstancePointer().pointer);
    }

    private native void _setmParentSet(long _pointer_, long _jni_value_);

    /** **/
    public void getmColour(org.ogre4j.IColourValue returnValue) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getmColour(this.object.pointer)), false);
    }

    private native long _getmColour(long _pointer_);

    /** **/
    public void setmColour(org.ogre4j.IColourValue _jni_value_) {
        _setmColour(this.object.pointer, _jni_value_.getInstancePointer().pointer);
    }

    private native void _setmColour(long _pointer_, long _jni_value_);

    /** **/
    public void getmRotation(org.ogre4j.IRadian returnValue) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getmRotation(this.object.pointer)), false);
    }

    private native long _getmRotation(long _pointer_);

    /** **/
    public void setmRotation(org.ogre4j.IRadian _jni_value_) {
        _setmRotation(this.object.pointer, _jni_value_.getInstancePointer().pointer);
    }

    private native void _setmRotation(long _pointer_, long _jni_value_);

}
