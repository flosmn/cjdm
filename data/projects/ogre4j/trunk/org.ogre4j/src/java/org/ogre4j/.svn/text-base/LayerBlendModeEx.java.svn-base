/**
 *  This source file is generated by XBiG (The XSLT Bindings Generator)
 *  For the latest info, see http://sourceforge.net/projects/xbig/
 * 
 *  Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
 *  Also see acknowledgements in Readme.html
 * 
 *  This program is free software; you can redistribute it and/or modify it under
 *  the terms of the GNU Lesser General Public License as published by the Free Software
 *  Foundation; either version 2 of the License, or (at your option) any later
 *  version.
 * 
 *  This program is distributed in the hope that it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 *  FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
 * 
 *  You should have received a copy of the GNU Lesser General Public License along with
 *  this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 *  Place - Suite 330, Boston, MA 02111-1307, USA, or go to
 *  http://www.gnu.org/copyleft/lesser.txt.
 * 
 *  Machine generated file
 */

        

package org.ogre4j;


import org.xbig.base.*;
public class LayerBlendModeEx extends org.xbig.base.NativeObject implements org.ogre4j.ILayerBlendModeEx {
static { System.loadLibrary("ogre4j");}
 
        
	/**
	 * 
	 * This constructor is public for internal useage only!
	 * Do not use it!
	 * 
	 */
	public LayerBlendModeEx(org.xbig.base.InstancePointer p) {
		super(p);
	}

	/**
	 * 
	 * Creates a Java wrapper object for an existing C++ object.
	 * If remote is set to 'true' this object cannot be deleted in Java.
	 * 
	 */
	protected LayerBlendModeEx(org.xbig.base.InstancePointer p, boolean remote) {
		super(p, remote);
	}

    /**
     * Allows creation of Java objects without C++ objects.
     * 
     * @see org.xbig.base.WithoutNativeObject
     * @see org.xbig.base.INativeObject#disconnectFromNativeObject()
     */
	public LayerBlendModeEx(org.xbig.base.WithoutNativeObject val) {
		super(val);
	}

	public void delete() {
		if (this.remote) {
	       throw new RuntimeException("can't dispose object created by native library");
	    }

		if(!this.deleted) {
		    __delete(object.pointer);
		    this.deleted = true;
		   	this.object.pointer = 0;
		}
	}

	public void finalize() {
		if(!this.remote && !this.deleted) {
			delete();
		}
	}
	
			
	private final native void __delete(long _pointer_);	



          /** **/
    public boolean operatorEqual(org.ogre4j.ILayerBlendModeEx rhs) {
         return _operatorEqual__LayerBlendModeExR_const(this.object.pointer, rhs.getInstancePointer().pointer);
    }

    private native boolean _operatorEqual__LayerBlendModeExR_const(long _pointer_, long rhs);

    /** **/
    public boolean operatorNotEqual(org.ogre4j.ILayerBlendModeEx rhs) {
         return _operatorNotEqual__LayerBlendModeExR_const(this.object.pointer, rhs.getInstancePointer().pointer);
    }

    private native boolean _operatorNotEqual__LayerBlendModeExR_const(long _pointer_, long rhs);

    /** **/
    public LayerBlendModeEx() {
         super( new org.xbig.base.InstancePointer(__createLayerBlendModeEx()), false);
    }

    private native static long __createLayerBlendModeEx();

    /** **/
    public org.ogre4j.LayerBlendType getblendType() {
         return org.ogre4j.LayerBlendType.toEnum(_getblendType(this.object.pointer));
    }

    private native int _getblendType(long _pointer_);

    /** **/
    public void setblendType(org.ogre4j.LayerBlendType _jni_value_) {
        _setblendType(this.object.pointer, _jni_value_.getValue());
    }

    private native void _setblendType(long _pointer_, int _jni_value_);

    /** **/
    public org.ogre4j.LayerBlendOperationEx getoperation() {
         return org.ogre4j.LayerBlendOperationEx.toEnum(_getoperation(this.object.pointer));
    }

    private native int _getoperation(long _pointer_);

    /** **/
    public void setoperation(org.ogre4j.LayerBlendOperationEx _jni_value_) {
        _setoperation(this.object.pointer, _jni_value_.getValue());
    }

    private native void _setoperation(long _pointer_, int _jni_value_);

    /** **/
    public org.ogre4j.LayerBlendSource getsource1() {
         return org.ogre4j.LayerBlendSource.toEnum(_getsource1(this.object.pointer));
    }

    private native int _getsource1(long _pointer_);

    /** **/
    public void setsource1(org.ogre4j.LayerBlendSource _jni_value_) {
        _setsource1(this.object.pointer, _jni_value_.getValue());
    }

    private native void _setsource1(long _pointer_, int _jni_value_);

    /** **/
    public org.ogre4j.LayerBlendSource getsource2() {
         return org.ogre4j.LayerBlendSource.toEnum(_getsource2(this.object.pointer));
    }

    private native int _getsource2(long _pointer_);

    /** **/
    public void setsource2(org.ogre4j.LayerBlendSource _jni_value_) {
        _setsource2(this.object.pointer, _jni_value_.getValue());
    }

    private native void _setsource2(long _pointer_, int _jni_value_);

    /** **/
    public void getcolourArg1(org.ogre4j.IColourValue returnValue) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getcolourArg1(this.object.pointer)), false);
    }

    private native long _getcolourArg1(long _pointer_);

    /** **/
    public void setcolourArg1(org.ogre4j.IColourValue _jni_value_) {
        _setcolourArg1(this.object.pointer, _jni_value_.getInstancePointer().pointer);
    }

    private native void _setcolourArg1(long _pointer_, long _jni_value_);

    /** **/
    public void getcolourArg2(org.ogre4j.IColourValue returnValue) {
          returnValue.delete();
  returnValue.setInstancePointer(new InstancePointer(_getcolourArg2(this.object.pointer)), false);
    }

    private native long _getcolourArg2(long _pointer_);

    /** **/
    public void setcolourArg2(org.ogre4j.IColourValue _jni_value_) {
        _setcolourArg2(this.object.pointer, _jni_value_.getInstancePointer().pointer);
    }

    private native void _setcolourArg2(long _pointer_, long _jni_value_);

    /** **/
    public float getalphaArg1() {
         return _getalphaArg1(this.object.pointer);
    }

    private native float _getalphaArg1(long _pointer_);

    /** **/
    public void setalphaArg1(float _jni_value_) {
        _setalphaArg1(this.object.pointer, _jni_value_);
    }

    private native void _setalphaArg1(long _pointer_, float _jni_value_);

    /** **/
    public float getalphaArg2() {
         return _getalphaArg2(this.object.pointer);
    }

    private native float _getalphaArg2(long _pointer_);

    /** **/
    public void setalphaArg2(float _jni_value_) {
        _setalphaArg2(this.object.pointer, _jni_value_);
    }

    private native void _setalphaArg2(long _pointer_, float _jni_value_);

    /** **/
    public float getfactor() {
         return _getfactor(this.object.pointer);
    }

    private native float _getfactor(long _pointer_);

    /** **/
    public void setfactor(float _jni_value_) {
        _setfactor(this.object.pointer, _jni_value_);
    }

    private native void _setfactor(long _pointer_, float _jni_value_);

}
