/**
 *  This source file is generated by XBiG (The XSLT Bindings Generator)
 *  For the latest info, see http://sourceforge.net/projects/xbig/
 * 
 *  Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
 *  Also see acknowledgements in Readme.html
 * 
 *  This program is free software; you can redistribute it and/or modify it under
 *  the terms of the GNU Lesser General Public License as published by the Free Software
 *  Foundation; either version 2 of the License, or (at your option) any later
 *  version.
 * 
 *  This program is distributed in the hope that it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 *  FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
 * 
 *  You should have received a copy of the GNU Lesser General Public License along with
 *  this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 *  Place - Suite 330, Boston, MA 02111-1307, USA, or go to
 *  http://www.gnu.org/copyleft/lesser.txt.
 * 
 *  Machine generated file
 */

        

package org.ogre4j;


import org.xbig.base.*;
public interface IRenderSystemCapabilitiesSerializer extends INativeObject, org.ogre4j.IRenderSysAllocatedObject {

public interface IKeywordTypeMap extends INativeObject, org.std.Imap< String, org.ogre4j.RenderSystemCapabilitiesSerializer.CapabilityKeywordType > {

    /** **/
    public void clear();

    /** **/
    public int count(String key);

    /** **/
    public boolean empty();

    /** **/
    public int erase(String key);

    /** **/
    public int max_size();

    /** **/
    public int size();

    /** **/
    public org.ogre4j.RenderSystemCapabilitiesSerializer.CapabilityKeywordType get(String key);

    /** **/
    public void insert(String key, org.ogre4j.RenderSystemCapabilitiesSerializer.CapabilityKeywordType value);

}
public interface ISetStringMethodDispatchTable extends INativeObject/*, org.std.Imap< String, void(RenderSystemCapabilities::*) >*/ {

    /** **/
    public void clear();

    /** **/
    public int count(String key);

    /** **/
    public boolean empty();

    /** **/
    public int erase(String key);

    /** **/
    public int max_size();

    /** **/
    public int size();

//    /** **/
//    public void(RenderSystemCapabilities::*) get(String key);
//
//    /** **/
//    public void insert(String key, void(RenderSystemCapabilities::*) value);

}
public interface ISetIntMethodDispatchTable extends INativeObject/*, org.std.Imap< String, void(RenderSystemCapabilities::*) >*/ {

    /** **/
    public void clear();

    /** **/
    public int count(String key);

    /** **/
    public boolean empty();

    /** **/
    public int erase(String key);

    /** **/
    public int max_size();

    /** **/
    public int size();

//    /** **/
//    public void(RenderSystemCapabilities::*) get(String key);
//
//    /** **/
//    public void insert(String key, void(RenderSystemCapabilities::*) value);

}
public interface ISetBoolMethodDispatchTable extends INativeObject/*, org.std.Imap< String, void(RenderSystemCapabilities::*) >*/ {

    /** **/
    public void clear();

    /** **/
    public int count(String key);

    /** **/
    public boolean empty();

    /** **/
    public int erase(String key);

    /** **/
    public int max_size();

    /** **/
    public int size();

//    /** **/
//    public void(RenderSystemCapabilities::*) get(String key);
//
//    /** **/
//    public void insert(String key, void(RenderSystemCapabilities::*) value);

}
public interface ISetRealMethodDispatchTable extends INativeObject/*, org.std.Imap< String, void(RenderSystemCapabilities::*) >*/ {

    /** **/
    public void clear();

    /** **/
    public int count(String key);

    /** **/
    public boolean empty();

    /** **/
    public int erase(String key);

    /** **/
    public int max_size();

    /** **/
    public int size();

//    /** **/
//    public void(RenderSystemCapabilities::*) get(String key);
//
//    /** **/
//    public void insert(String key, void(RenderSystemCapabilities::*) value);

}
public interface ICapabilitiesMap extends INativeObject, org.std.Imap< String, org.ogre4j.Capabilities > {

    /** **/
    public void clear();

    /** **/
    public int count(String key);

    /** **/
    public boolean empty();

    /** **/
    public int erase(String key);

    /** **/
    public int max_size();

    /** **/
    public int size();

    /** **/
    public org.ogre4j.Capabilities get(String key);

    /** **/
    public void insert(String key, org.ogre4j.Capabilities value);

}
public interface ICapabilitiesLinesList extends INativeObject, org.std.Ivector< org.std.Ipair< String, Integer > > {

    /** **/
    public void assign(int num, org.std.Ipair< String, Integer > val);

    /** **/
    public void at(org.std.Ipair< String, Integer > returnValue, int loc);

    /** **/
    public void back(org.std.Ipair< String, Integer > returnValue);

    /** **/
    public int capacity();

    /** **/
    public void clear();

    /** **/
    public boolean empty();

    /** **/
    public void front(org.std.Ipair< String, Integer > returnValue);

    /** **/
    public int max_size();

    /** **/
    public void pop_back();

    /** **/
    public void push_back(org.std.Ipair< String, Integer > val);

    /** **/
    public void reserve(int size);

    /** **/
    public int size();

}
    /** 
    Writes a  object to a data stream **/
    public void writeScript(org.ogre4j.IRenderSystemCapabilities caps, String name, String filename);

    /** 
    Parses a  script file passed as a stream. Adds it to **/
    public void parseScript(org.ogre4j.IDataStreamPtr stream);

}
