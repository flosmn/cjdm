/**
 *  This source file is generated by XBiG (The XSLT Bindings Generator)
 *  For the latest info, see http://sourceforge.net/projects/xbig/
 * 
 *  Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
 *  Also see acknowledgements in Readme.html
 * 
 *  This program is free software; you can redistribute it and/or modify it under
 *  the terms of the GNU Lesser General Public License as published by the Free Software
 *  Foundation; either version 2 of the License, or (at your option) any later
 *  version.
 * 
 *  This program is distributed in the hope that it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 *  FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
 * 
 *  You should have received a copy of the GNU Lesser General Public License along with
 *  this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 *  Place - Suite 330, Boston, MA 02111-1307, USA, or go to
 *  http://www.gnu.org/copyleft/lesser.txt.
 * 
 *  Machine generated file
 */

        

package org.ogre4j;


import org.xbig.base.*;
public interface IGpuProgramManager extends INativeObject, org.ogre4j.IResourceManager, org.ogre4j.ISingleton< org.ogre4j.IGpuProgramManager > {

public interface ISyntaxCodes extends INativeObject, org.std.Iset< String > {

    /** **/
    public void clear();

    /** **/
    public int count(String key);

    /** **/
    public boolean empty();

    /** **/
    public int erase(String key);

    /** **/
    public int max_size();

    /** **/
    public int size();

}
    /** 
    Loads a GPU program from a file of assembly. **/
    public void load(org.ogre4j.IGpuProgramPtr returnValue, String name, String groupName, String filename, org.ogre4j.GpuProgramType gptype, String syntaxCode);

    /** 
    Loads a GPU program from a string of assembly code. **/
    public void loadFromString(org.ogre4j.IGpuProgramPtr returnValue, String name, String groupName, String code, org.ogre4j.GpuProgramType gptype, String syntaxCode);

    /** 
    Returns the syntaxes that this manager supports. **/
    public org.ogre4j.IGpuProgramManager.ISyntaxCodes getSupportedSyntax();

    /** 
    Returns whether a given syntax code (e.g. "ps_1_3", "fp20", "arbvp1") is supported. **/
    public boolean isSyntaxSupported(String syntaxCode);

    /** 
    Creates a new  instance which can be used to bind parameters to your programs. **/
    public void createParameters(org.ogre4j.IGpuProgramParametersSharedPtr returnValue);

    /** 
    Create a new, unloaded  from a file of assembly. **/
    public void createProgram(org.ogre4j.IGpuProgramPtr returnValue, String name, String groupName, String filename, org.ogre4j.GpuProgramType gptype, String syntaxCode);

    /** 
    Create a GPU program from a string of assembly code. **/
    public void createProgramFromString(org.ogre4j.IGpuProgramPtr returnValue, String name, String groupName, String code, org.ogre4j.GpuProgramType gptype, String syntaxCode);

    /** 
    General create method, using specific create parameters instead of name / value pairs. **/
    public void create(org.ogre4j.IResourcePtr returnValue, String name, String group, org.ogre4j.GpuProgramType gptype, String syntaxCode, boolean isManual, org.ogre4j.IManualResourceLoader loader);

    /** 
    Overrides the standard  getByName method. **/
    public void getByName(org.ogre4j.IResourcePtr returnValue, String name, boolean preferHighLevelPrograms);

}
