/**
 *  This source file is generated by XBiG (The XSLT Bindings Generator)
 *  For the latest info, see http://sourceforge.net/projects/xbig/
 * 
 *  Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
 *  Also see acknowledgements in Readme.html
 * 
 *  This program is free software; you can redistribute it and/or modify it under
 *  the terms of the GNU Lesser General Public License as published by the Free Software
 *  Foundation; either version 2 of the License, or (at your option) any later
 *  version.
 * 
 *  This program is distributed in the hope that it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 *  FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
 * 
 *  You should have received a copy of the GNU Lesser General Public License along with
 *  this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 *  Place - Suite 330, Boston, MA 02111-1307, USA, or go to
 *  http://www.gnu.org/copyleft/lesser.txt.
 * 
 *  Machine generated file
 */

        

package org.ogre4j;


import org.xbig.base.*;
public interface ILog extends INativeObject, org.ogre4j.IGeneralAllocatedObject {

public static interface IStream extends INativeObject {

public static interface IFlush extends INativeObject {

}
    /** **/
    public org.ogre4j.ILog.IStream operatorLeftShift(org.ogre4j.ILog.IStream.IFlush v);

}
public interface ImtLogListener extends INativeObject, org.std.Ivector< org.ogre4j.ILogListener > {

    /** **/
    public void assign(int num, org.ogre4j.ILogListener val);

    /** **/
    public org.ogre4j.ILogListener at(int loc);

    /** **/
    public org.ogre4j.ILogListener back();

    /** **/
    public int capacity();

    /** **/
    public void clear();

    /** **/
    public boolean empty();

    /** **/
    public org.ogre4j.ILogListener front();

    /** **/
    public int max_size();

    /** **/
    public void pop_back();

    /** **/
    public void push_back(org.ogre4j.ILogListener val);

    /** **/
    public void reserve(int size);

    /** **/
    public int size();

}
    /** **/
    public String getName();

    /** **/
    public boolean isDebugOutputEnabled();

    /** **/
    public boolean isFileOutputSuppressed();

    /** 
     a message to the debugger and to log file (the default is "<code>OGRE.log</code>"), **/
    public void logMessage(String message, org.ogre4j.LogMessageLevel lml, boolean maskDebug);

    /** 
    Get a stream object targetting this log. **/
    public void stream(org.ogre4j.ILog.IStream returnValue, org.ogre4j.LogMessageLevel lml, boolean maskDebug);

    /** 
    **/
    public void setDebugOutputEnabled(boolean debugOutput);

    /** 
    **/
    public void setLogDetail(org.ogre4j.LoggingLevel ll);

    /** 
    Gets the level of the log detail. **/
    public org.ogre4j.LoggingLevel getLogDetail();

    /** 
    **/
    public void addListener(org.ogre4j.ILogListener listener);

    /** 
    **/
    public void removeListener(org.ogre4j.ILogListener listener);

}
