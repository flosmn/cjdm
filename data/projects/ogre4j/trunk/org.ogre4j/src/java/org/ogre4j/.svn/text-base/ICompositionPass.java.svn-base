/**
 *  This source file is generated by XBiG (The XSLT Bindings Generator)
 *  For the latest info, see http://sourceforge.net/projects/xbig/
 * 
 *  Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
 *  Also see acknowledgements in Readme.html
 * 
 *  This program is free software; you can redistribute it and/or modify it under
 *  the terms of the GNU Lesser General Public License as published by the Free Software
 *  Foundation; either version 2 of the License, or (at your option) any later
 *  version.
 * 
 *  This program is distributed in the hope that it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 *  FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
 * 
 *  You should have received a copy of the GNU Lesser General Public License along with
 *  this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 *  Place - Suite 330, Boston, MA 02111-1307, USA, or go to
 *  http://www.gnu.org/copyleft/lesser.txt.
 * 
 *  Machine generated file
 */

        

package org.ogre4j;


import org.xbig.base.*;
public interface ICompositionPass extends INativeObject, org.ogre4j.IResourceAllocatedObject {

public static interface IInputTex extends INativeObject {

    /** **/
    public String getname();

    /** **/
    public void setname(String _jni_value_);

    /** **/
    public int getmrtIndex();

    /** **/
    public void setmrtIndex(int _jni_value_);

}
    /** 
    Set the type of composition pass **/
    public void setType(org.ogre4j.CompositionPass.PassType type);

    /** 
    Get the type of composition pass **/
    public org.ogre4j.CompositionPass.PassType getType();

    /** 
    Set an identifier for this pass. This identifier can be used to "listen in" on this pass with an . **/
    public void setIdentifier(long id);

    /** 
    Get the identifier for this pass **/
    public long getIdentifier();

    /** 
    Set the material used by this pass **/
    public void setMaterial(org.ogre4j.IMaterialPtr mat);

    /** 
    Set the material used by this pass **/
    public void setMaterialName(String name);

    /** 
    Get the material used by this pass **/
    public org.ogre4j.IMaterialPtr getMaterial();

    /** 
    Set the first render queue to be rendered in this pass (inclusive) **/
    public void setFirstRenderQueue(short id);

    /** 
    Get the first render queue to be rendered in this pass (inclusive) **/
    public short getFirstRenderQueue();

    /** 
    Set the last render queue to be rendered in this pass (inclusive) **/
    public void setLastRenderQueue(short id);

    /** 
    Get the last render queue to be rendered in this pass (inclusive) **/
    public short getLastRenderQueue();

    /** 
    Set the viewport clear buffers (defaults to FBT_COLOUR|FBT_DEPTH) **/
    public void setClearBuffers(long val);

    /** 
    Get the viewport clear buffers. **/
    public long getClearBuffers();

    /** 
    Set the viewport clear colour (defaults to 0,0,0,0) **/
    public void setClearColour(org.ogre4j.IColourValue val);

    /** 
    Get the viewport clear colour (defaults to 0,0,0,0) **/
    public org.ogre4j.IColourValue getClearColour();

    /** 
    Set the viewport clear depth (defaults to 1.0) **/
    public void setClearDepth(float depth);

    /** 
    Get the viewport clear depth (defaults to 1.0) **/
    public float getClearDepth();

    /** 
    Set the viewport clear stencil value (defaults to 0) **/
    public void setClearStencil(long value);

    /** 
    Get the viewport clear stencil value (defaults to 0) **/
    public long getClearStencil();

    /** 
    Set stencil check on or off. **/
    public void setStencilCheck(boolean value);

    /** 
    Get stencil check enable. **/
    public boolean getStencilCheck();

    /** 
    Set stencil compare function. **/
    public void setStencilFunc(org.ogre4j.CompareFunction value);

    /** 
    Get stencil compare function. **/
    public org.ogre4j.CompareFunction getStencilFunc();

    /** 
    Set stencil reference value. **/
    public void setStencilRefValue(long value);

    /** 
    Get stencil reference value. **/
    public long getStencilRefValue();

    /** 
    Set stencil mask. **/
    public void setStencilMask(long value);

    /** 
    Get stencil mask. **/
    public long getStencilMask();

    /** 
    Set stencil fail operation. **/
    public void setStencilFailOp(org.ogre4j.StencilOperation value);

    /** 
    Get stencil fail operation. **/
    public org.ogre4j.StencilOperation getStencilFailOp();

    /** 
    Set stencil depth fail operation. **/
    public void setStencilDepthFailOp(org.ogre4j.StencilOperation value);

    /** 
    Get stencil depth fail operation. **/
    public org.ogre4j.StencilOperation getStencilDepthFailOp();

    /** 
    Set stencil pass operation. **/
    public void setStencilPassOp(org.ogre4j.StencilOperation value);

    /** 
    Get stencil pass operation. **/
    public org.ogre4j.StencilOperation getStencilPassOp();

    /** 
    Set two sided stencil operation. **/
    public void setStencilTwoSidedOperation(boolean value);

    /** 
    Get two sided stencil operation. **/
    public boolean getStencilTwoSidedOperation();

    /** 
    Set an input local texture. An empty string clears the input. **/
    public void setInput(int id, String input, int mrtIndex);

    /** 
    Get the value of an input. **/
    public org.ogre4j.ICompositionPass.IInputTex getInput(int id);

    /** 
    Get the number of inputs used. **/
    public int getNumInputs();

    /** 
    Clear all inputs. **/
    public void clearAllInputs();

    /** 
    Get parent object **/
    public org.ogre4j.ICompositionTargetPass getParent();

    /** 
    Determine if this target pass is supported on the current rendering device. **/
    public boolean _isSupported();

    /** 
    Set quad normalised positions [-1;1]x[-1;1] **/
    public void setQuadCorners(float left, float top, float right, float bottom);

    /** 
    Get quad normalised positions [-1;1]x[-1;1] **/
    public boolean getQuadCorners(FloatPointer left, FloatPointer top, FloatPointer right, FloatPointer bottom);

}
