/**
 *  This source file is generated by XBiG (The XSLT Bindings Generator)
 *  For the latest info, see http://sourceforge.net/projects/xbig/
 * 
 *  Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
 *  Also see acknowledgements in Readme.html
 * 
 *  This program is free software; you can redistribute it and/or modify it under
 *  the terms of the GNU Lesser General Public License as published by the Free Software
 *  Foundation; either version 2 of the License, or (at your option) any later
 *  version.
 * 
 *  This program is distributed in the hope that it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 *  FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
 * 
 *  You should have received a copy of the GNU Lesser General Public License along with
 *  this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 *  Place - Suite 330, Boston, MA 02111-1307, USA, or go to
 *  http://www.gnu.org/copyleft/lesser.txt.
 * 
 *  Machine generated file
 */

        

package org.ogre4j;


import org.xbig.base.*;
public interface IArchive extends INativeObject, org.ogre4j.IGeneralAllocatedObject {

    /** **/
    public String getName();

    /** **/
    public boolean isCaseSensitive();

    /** 
    Loads the archive. **/
    public void load();

    /** 
    Unloads the archive. **/
    public void unload();

    /** 
    Open a stream on a given file. **/
    public void open(org.ogre4j.IDataStreamPtr returnValue, String filename);

    /** 
    List all file names in the archive. **/
    public void list(org.ogre4j.IStringVectorPtr returnValue, boolean recursive, boolean dirs);

    /** 
    List all files in the archive with accompanying information. **/
    public void listFileInfo(org.ogre4j.IFileInfoListPtr returnValue, boolean recursive, boolean dirs);

    /** 
    Find all file or directory names matching a given pattern in this archive. **/
    public void find(org.ogre4j.IStringVectorPtr returnValue, String pattern, boolean recursive, boolean dirs);

    /** 
    Find out if the named file exists (note: fully qualified filename required) **/
    public boolean exists(String filename);

    /** 
    Retrieve the modification time of a given file **/
    public long getModifiedTime(String filename);

    /** 
    Find all files or directories matching a given pattern in this archive and get some detailed information about them. **/
    public void findFileInfo(org.ogre4j.IFileInfoListPtr returnValue, String pattern, boolean recursive, boolean dirs);

    /** **/
    public String getType();

}
