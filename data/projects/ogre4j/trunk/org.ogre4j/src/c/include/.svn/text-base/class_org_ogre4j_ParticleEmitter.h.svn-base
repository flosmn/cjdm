///////////////////////////////////////////////////////////////////////////////
/// This source file is generated by XBiG (The XSLT Bindings Generator)
/// For the latest info, see http://sourceforge.net/projects/xbig/
///
/// Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
/// Also see acknowledgements in Readme.html
///
/// This program is free software; you can redistribute it and/or modify it under
/// the terms of the GNU Lesser General Public License as published by the Free Software
/// Foundation; either version 2 of the License, or (at your option) any later
/// version.
///
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
/// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
///
/// You should have received a copy of the GNU Lesser General Public License along with
/// this program; if not, write to the Free Software Foundation, Inc., 59 Temple
/// Place - Suite 330, Boston, MA 02111-1307, USA, or go to
/// http://www.gnu.org/copyleft/lesser.txt.
///
/// Machine generated file
///////////////////////////////////////////////////////////////////////////////



#ifdef WIN32
	// disable warnings
	#pragma warning (disable : 4267) // conversion from 'size_t' to 'jint'
#else

#endif


#ifndef __Included_org_ogre4j_ParticleEmitter__
#define __Included_org_ogre4j_ParticleEmitter__


#include "jni_base.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setPosition()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleEmitter::setPosition
 * Signature:  (Ogre_Vector3)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setPosition_1_1Vector3R (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong pos
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getPosition()
 * Type:       virtual method
 * Definition: virtual const Vector3& Ogre::ParticleEmitter::getPosition
 * Signature:  ()Ogre_Vector3
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleEmitter__1getPosition_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setDirection()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleEmitter::setDirection
 * Signature:  (Ogre_Vector3)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setDirection_1_1Vector3R (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong direction
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getDirection()
 * Type:       virtual method
 * Definition: virtual const Vector3& Ogre::ParticleEmitter::getDirection
 * Signature:  ()Ogre_Vector3
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleEmitter__1getDirection_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setAngle()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleEmitter::setAngle
 * Signature:  (Ogre_Radian)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setAngle_1_1RadianR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong angle
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getAngle()
 * Type:       virtual method
 * Definition: virtual const Radian& Ogre::ParticleEmitter::getAngle
 * Signature:  ()Ogre_Radian
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleEmitter__1getAngle_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setParticleVelocity()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleEmitter::setParticleVelocity
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setParticleVelocity_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat speed
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setParticleVelocity()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleEmitter::setParticleVelocity
 * Signature:  (floatfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setParticleVelocity_1_1RealvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat _min, 
  jfloat _max
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setMinParticleVelocity()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleEmitter::setMinParticleVelocity
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setMinParticleVelocity_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat _min
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setMaxParticleVelocity()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleEmitter::setMaxParticleVelocity
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setMaxParticleVelocity_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat _max
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getParticleVelocity()
 * Type:       virtual method
 * Definition: virtual Real Ogre::ParticleEmitter::getParticleVelocity
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_ParticleEmitter__1getParticleVelocity_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getMinParticleVelocity()
 * Type:       virtual method
 * Definition: virtual Real Ogre::ParticleEmitter::getMinParticleVelocity
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_ParticleEmitter__1getMinParticleVelocity_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getMaxParticleVelocity()
 * Type:       virtual method
 * Definition: virtual Real Ogre::ParticleEmitter::getMaxParticleVelocity
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_ParticleEmitter__1getMaxParticleVelocity_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setEmissionRate()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleEmitter::setEmissionRate
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setEmissionRate_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat particlesPerSecond
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getEmissionRate()
 * Type:       virtual method
 * Definition: virtual Real Ogre::ParticleEmitter::getEmissionRate
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_ParticleEmitter__1getEmissionRate_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setTimeToLive()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleEmitter::setTimeToLive
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setTimeToLive_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat ttl
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setTimeToLive()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleEmitter::setTimeToLive
 * Signature:  (floatfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setTimeToLive_1_1RealvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat minTtl, 
  jfloat maxTtl
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setMinTimeToLive()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleEmitter::setMinTimeToLive
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setMinTimeToLive_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat _min
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setMaxTimeToLive()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleEmitter::setMaxTimeToLive
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setMaxTimeToLive_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat _max
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getTimeToLive()
 * Type:       virtual method
 * Definition: virtual Real Ogre::ParticleEmitter::getTimeToLive
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_ParticleEmitter__1getTimeToLive_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getMinTimeToLive()
 * Type:       virtual method
 * Definition: virtual Real Ogre::ParticleEmitter::getMinTimeToLive
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_ParticleEmitter__1getMinTimeToLive_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getMaxTimeToLive()
 * Type:       virtual method
 * Definition: virtual Real Ogre::ParticleEmitter::getMaxTimeToLive
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_ParticleEmitter__1getMaxTimeToLive_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setColour()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleEmitter::setColour
 * Signature:  (Ogre_ColourValue)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setColour_1_1ColourValueR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong colour
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setColour()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleEmitter::setColour
 * Signature:  (Ogre_ColourValueOgre_ColourValue)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setColour_1_1ColourValueRColourValueR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong colourStart, 
  jlong colourEnd
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setColourRangeStart()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleEmitter::setColourRangeStart
 * Signature:  (Ogre_ColourValue)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setColourRangeStart_1_1ColourValueR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong colour
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setColourRangeEnd()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleEmitter::setColourRangeEnd
 * Signature:  (Ogre_ColourValue)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setColourRangeEnd_1_1ColourValueR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong colour
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getColour()
 * Type:       virtual method
 * Definition: virtual const ColourValue& Ogre::ParticleEmitter::getColour
 * Signature:  ()Ogre_ColourValue
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleEmitter__1getColour_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getColourRangeStart()
 * Type:       virtual method
 * Definition: virtual const ColourValue& Ogre::ParticleEmitter::getColourRangeStart
 * Signature:  ()Ogre_ColourValue
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleEmitter__1getColourRangeStart_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getColourRangeEnd()
 * Type:       virtual method
 * Definition: virtual const ColourValue& Ogre::ParticleEmitter::getColourRangeEnd
 * Signature:  ()Ogre_ColourValue
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleEmitter__1getColourRangeEnd_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     _getEmissionCount()
 * Type:       pure virtual method
 * Definition: virtual unsigned short Ogre::ParticleEmitter::_getEmissionCount
 * Signature:  (float)S
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_ParticleEmitter__1_1getEmissionCount_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat timeElapsed
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     _initParticle()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleEmitter::_initParticle
 * Signature:  (Ogre_Particle)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1_1initParticle_1_1Particlep (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong pParticle
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getType()
 * Type:       non-virtual method
 * Definition: const String& Ogre::ParticleEmitter::getType
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_ParticleEmitter__1getType_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setEnabled()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleEmitter::setEnabled
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setEnabled_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean enabled
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getEnabled()
 * Type:       virtual method
 * Definition: virtual bool Ogre::ParticleEmitter::getEnabled
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_ParticleEmitter__1getEnabled_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setStartTime()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleEmitter::setStartTime
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setStartTime_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat startTime
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getStartTime()
 * Type:       virtual method
 * Definition: virtual Real Ogre::ParticleEmitter::getStartTime
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_ParticleEmitter__1getStartTime_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setDuration()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleEmitter::setDuration
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setDuration_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat duration
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getDuration()
 * Type:       virtual method
 * Definition: virtual Real Ogre::ParticleEmitter::getDuration
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_ParticleEmitter__1getDuration_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setDuration()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleEmitter::setDuration
 * Signature:  (floatfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setDuration_1_1RealvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat _min, 
  jfloat _max
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setMinDuration()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleEmitter::setMinDuration
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setMinDuration_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat _min
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setMaxDuration()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleEmitter::setMaxDuration
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setMaxDuration_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat _max
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getMinDuration()
 * Type:       virtual method
 * Definition: virtual Real Ogre::ParticleEmitter::getMinDuration
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_ParticleEmitter__1getMinDuration_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getMaxDuration()
 * Type:       virtual method
 * Definition: virtual Real Ogre::ParticleEmitter::getMaxDuration
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_ParticleEmitter__1getMaxDuration_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setRepeatDelay()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleEmitter::setRepeatDelay
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setRepeatDelay_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat duration
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getRepeatDelay()
 * Type:       virtual method
 * Definition: virtual Real Ogre::ParticleEmitter::getRepeatDelay
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_ParticleEmitter__1getRepeatDelay_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setRepeatDelay()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleEmitter::setRepeatDelay
 * Signature:  (floatfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setRepeatDelay_1_1RealvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat _min, 
  jfloat _max
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setMinRepeatDelay()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleEmitter::setMinRepeatDelay
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setMinRepeatDelay_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat _min
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setMaxRepeatDelay()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleEmitter::setMaxRepeatDelay
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setMaxRepeatDelay_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat _max
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getMinRepeatDelay()
 * Type:       virtual method
 * Definition: virtual Real Ogre::ParticleEmitter::getMinRepeatDelay
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_ParticleEmitter__1getMinRepeatDelay_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getMaxRepeatDelay()
 * Type:       virtual method
 * Definition: virtual Real Ogre::ParticleEmitter::getMaxRepeatDelay
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_ParticleEmitter__1getMaxRepeatDelay_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getName()
 * Type:       non-virtual method
 * Definition: const String& Ogre::ParticleEmitter::getName
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_ParticleEmitter__1getName_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setName()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleEmitter::setName
 * Signature:  (std_string)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setName_1_1StringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring newName
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getEmittedEmitter()
 * Type:       non-virtual method
 * Definition: const String& Ogre::ParticleEmitter::getEmittedEmitter
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_ParticleEmitter__1getEmittedEmitter_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setEmittedEmitter()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleEmitter::setEmittedEmitter
 * Signature:  (std_string)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setEmittedEmitter_1_1StringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring emittedEmitter
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     isEmitted()
 * Type:       virtual method
 * Definition: virtual bool Ogre::ParticleEmitter::isEmitted
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_ParticleEmitter__1isEmitted_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setEmitted()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleEmitter::setEmitted
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setEmitted_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean emitted
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getParamDictionary()
 * Type:       non-virtual method
 * Definition: ParamDictionary* Ogre::StringInterface::getParamDictionary
 * Signature:  ()Ogre_ParamDictionary
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleEmitter__1getParamDictionary (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getParamDictionary_const()
 * Type:       non-virtual method
 * Definition: const ParamDictionary* Ogre::StringInterface::getParamDictionary
 * Signature:  ()Ogre_ParamDictionary
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleEmitter__1getParamDictionary_1const_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getParameters()
 * Type:       non-virtual method
 * Definition: const ParameterList& Ogre::StringInterface::getParameters
 * Signature:  ()Ogre_ParameterList
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleEmitter__1getParameters_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setParameter()
 * Type:       virtual method
 * Definition: virtual bool Ogre::StringInterface::setParameter
 * Signature:  (std_stringstd_string)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_ParticleEmitter__1setParameter_1_1StringRStringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name, 
  jstring value
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setParameterList()
 * Type:       virtual method
 * Definition: virtual void Ogre::StringInterface::setParameterList
 * Signature:  (Ogre_NameValuePairList)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setParameterList_1_1NameValuePairListR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong paramList
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getParameter()
 * Type:       virtual method
 * Definition: virtual String Ogre::StringInterface::getParameter
 * Signature:  (std_string)std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_ParticleEmitter__1getParameter_1_1StringR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     copyParametersTo()
 * Type:       virtual method
 * Definition: virtual void Ogre::StringInterface::copyParametersTo
 * Signature:  (Ogre_StringInterface)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1copyParametersTo_1_1StringInterfacep_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong dest
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     cleanupDictionary()
 * Type:       static method
 * Definition: static void Ogre::StringInterface::cleanupDictionary
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1cleanupDictionary (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setDimensions()
 * Type:       non-virtual method
 * Definition: void Ogre::Particle::setDimensions
 * Signature:  (floatfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setDimensions_1_1RealvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat width, 
  jfloat height
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     hasOwnDimensions()
 * Type:       non-virtual method
 * Definition: bool Ogre::Particle::hasOwnDimensions
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_ParticleEmitter__1hasOwnDimensions_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getOwnWidth()
 * Type:       non-virtual method
 * Definition: Real Ogre::Particle::getOwnWidth
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_ParticleEmitter__1getOwnWidth_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getOwnHeight()
 * Type:       non-virtual method
 * Definition: Real Ogre::Particle::getOwnHeight
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_ParticleEmitter__1getOwnHeight_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setRotation()
 * Type:       non-virtual method
 * Definition: void Ogre::Particle::setRotation
 * Signature:  (Ogre_Radian)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setRotation_1_1RadianR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong rad
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getRotation()
 * Type:       non-virtual method
 * Definition: const Radian& Ogre::Particle::getRotation
 * Signature:  ()Ogre_Radian
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleEmitter__1getRotation_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     _notifyOwner()
 * Type:       non-virtual method
 * Definition: void Ogre::Particle::_notifyOwner
 * Signature:  (Ogre_ParticleSystem)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1_1notifyOwner_1_1ParticleSystemp (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong owner
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     _notifyVisualData()
 * Type:       non-virtual method
 * Definition: void Ogre::Particle::_notifyVisualData
 * Signature:  (Ogre_ParticleVisualData)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1_1notifyVisualData_1_1ParticleVisualDatap (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong vis
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getVisualData()
 * Type:       non-virtual method
 * Definition: ParticleVisualData* Ogre::Particle::getVisualData
 * Signature:  ()Ogre_ParticleVisualData
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleEmitter__1getVisualData_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     resetDimensions()
 * Type:       non-virtual method
 * Definition: void Ogre::Particle::resetDimensions
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1resetDimensions (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     __delete()
 * Type:       destructor
 * Definition: Ogre::ParticleEmitter::__delete
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1_1delete (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getmOwnDimensions()
 * Type:       getter for public attribute
 * Definition: bool Ogre::Particle::mOwnDimensions
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_ParticleEmitter__1getmOwnDimensions (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setmOwnDimensions()
 * Type:       setter for public attribute
 * Definition: bool Ogre::Particle::mOwnDimensions
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setmOwnDimensions (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean _jni_value_
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getmWidth()
 * Type:       getter for public attribute
 * Definition: Real Ogre::Particle::mWidth
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_ParticleEmitter__1getmWidth (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setmWidth()
 * Type:       setter for public attribute
 * Definition: Real Ogre::Particle::mWidth
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setmWidth (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat _jni_value_
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getmHeight()
 * Type:       getter for public attribute
 * Definition: Real Ogre::Particle::mHeight
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_ParticleEmitter__1getmHeight (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setmHeight()
 * Type:       setter for public attribute
 * Definition: Real Ogre::Particle::mHeight
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setmHeight (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat _jni_value_
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getrotation()
 * Type:       getter for public attribute
 * Definition: Radian Ogre::Particle::rotation
 * Signature:  ()Ogre_Radian
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleEmitter__1getrotation (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setrotation()
 * Type:       setter for public attribute
 * Definition: Radian Ogre::Particle::rotation
 * Signature:  (Ogre_Radian)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setrotation (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong _jni_value_
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getposition()
 * Type:       getter for public attribute
 * Definition: Vector3 Ogre::Particle::position
 * Signature:  ()Ogre_Vector3
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleEmitter__1getposition (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setposition()
 * Type:       setter for public attribute
 * Definition: Vector3 Ogre::Particle::position
 * Signature:  (Ogre_Vector3)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setposition (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong _jni_value_
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getdirection()
 * Type:       getter for public attribute
 * Definition: Vector3 Ogre::Particle::direction
 * Signature:  ()Ogre_Vector3
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleEmitter__1getdirection (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setdirection()
 * Type:       setter for public attribute
 * Definition: Vector3 Ogre::Particle::direction
 * Signature:  (Ogre_Vector3)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setdirection (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong _jni_value_
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getcolour()
 * Type:       getter for public attribute
 * Definition: ColourValue Ogre::Particle::colour
 * Signature:  ()Ogre_ColourValue
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleEmitter__1getcolour (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setcolour()
 * Type:       setter for public attribute
 * Definition: ColourValue Ogre::Particle::colour
 * Signature:  (Ogre_ColourValue)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setcolour (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong _jni_value_
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     gettimeToLive()
 * Type:       getter for public attribute
 * Definition: Real Ogre::Particle::timeToLive
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_ParticleEmitter__1gettimeToLive (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     settimeToLive()
 * Type:       setter for public attribute
 * Definition: Real Ogre::Particle::timeToLive
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1settimeToLive (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat _jni_value_
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     gettotalTimeToLive()
 * Type:       getter for public attribute
 * Definition: Real Ogre::Particle::totalTimeToLive
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_ParticleEmitter__1gettotalTimeToLive (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     settotalTimeToLive()
 * Type:       setter for public attribute
 * Definition: Real Ogre::Particle::totalTimeToLive
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1settotalTimeToLive (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat _jni_value_
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getrotationSpeed()
 * Type:       getter for public attribute
 * Definition: Radian Ogre::Particle::rotationSpeed
 * Signature:  ()Ogre_Radian
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleEmitter__1getrotationSpeed (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setrotationSpeed()
 * Type:       setter for public attribute
 * Definition: Radian Ogre::Particle::rotationSpeed
 * Signature:  (Ogre_Radian)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setrotationSpeed (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong _jni_value_
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     getparticleType()
 * Type:       getter for public attribute
 * Definition: ParticleType Ogre::Particle::particleType
 * Signature:  ()Ogre_Particle_ParticleType
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_ParticleEmitter__1getparticleType (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleEmitter
 * Method:     setparticleType()
 * Type:       setter for public attribute
 * Definition: ParticleType Ogre::Particle::particleType
 * Signature:  (Ogre_Particle_ParticleType)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleEmitter__1setparticleType (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint _jni_value_
);

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif /*__Included_org_ogre4j_ParticleEmitter__*/
