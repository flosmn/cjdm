///////////////////////////////////////////////////////////////////////////////
/// This source file is generated by XBiG (The XSLT Bindings Generator)
/// For the latest info, see http://sourceforge.net/projects/xbig/
///
/// Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
/// Also see acknowledgements in Readme.html
///
/// This program is free software; you can redistribute it and/or modify it under
/// the terms of the GNU Lesser General Public License as published by the Free Software
/// Foundation; either version 2 of the License, or (at your option) any later
/// version.
///
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
/// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
///
/// You should have received a copy of the GNU Lesser General Public License along with
/// this program; if not, write to the Free Software Foundation, Inc., 59 Temple
/// Place - Suite 330, Boston, MA 02111-1307, USA, or go to
/// http://www.gnu.org/copyleft/lesser.txt.
///
/// Machine generated file
///////////////////////////////////////////////////////////////////////////////



#ifdef WIN32
	// disable warnings
	#pragma warning (disable : 4267) // conversion from 'size_t' to 'jint'
#else

#endif


#ifndef __Included_org_ogre4j_ParticleSystemManager__
#define __Included_org_ogre4j_ParticleSystemManager__


#include "jni_base.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/*
 * Class:      org.ogre4j.ParticleSystemManager
 * Method:     ParticleSystemManager()
 * Type:       constructor
 * Definition: Ogre::ParticleSystemManager::ParticleSystemManager
 * Signature:  ()V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystemManager__1_1createParticleSystemManager (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystemManager
 * Method:     addEmitterFactory()
 * Type:       non-virtual method
 * Definition: void Ogre::ParticleSystemManager::addEmitterFactory
 * Signature:  (Ogre_ParticleEmitterFactory)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystemManager__1addEmitterFactory_1_1ParticleEmitterFactoryp (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong factory
);

/*
 * Class:      org.ogre4j.ParticleSystemManager
 * Method:     addAffectorFactory()
 * Type:       non-virtual method
 * Definition: void Ogre::ParticleSystemManager::addAffectorFactory
 * Signature:  (Ogre_ParticleAffectorFactory)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystemManager__1addAffectorFactory_1_1ParticleAffectorFactoryp (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong factory
);

/*
 * Class:      org.ogre4j.ParticleSystemManager
 * Method:     addRendererFactory()
 * Type:       non-virtual method
 * Definition: void Ogre::ParticleSystemManager::addRendererFactory
 * Signature:  (Ogre_ParticleSystemRendererFactory)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystemManager__1addRendererFactory_1_1ParticleSystemRendererFactoryp (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong factory
);

/*
 * Class:      org.ogre4j.ParticleSystemManager
 * Method:     addTemplate()
 * Type:       non-virtual method
 * Definition: void Ogre::ParticleSystemManager::addTemplate
 * Signature:  (std_stringOgre_ParticleSystem)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystemManager__1addTemplate_1_1StringRParticleSystemp (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name, 
  jlong sysTemplate
);

/*
 * Class:      org.ogre4j.ParticleSystemManager
 * Method:     removeTemplate()
 * Type:       non-virtual method
 * Definition: void Ogre::ParticleSystemManager::removeTemplate
 * Signature:  (std_stringZ)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystemManager__1removeTemplate_1_1StringRbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name, 
  jboolean deleteTemplate
);

/*
 * Class:      org.ogre4j.ParticleSystemManager
 * Method:     removeAllTemplates()
 * Type:       non-virtual method
 * Definition: void Ogre::ParticleSystemManager::removeAllTemplates
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystemManager__1removeAllTemplates_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean deleteTemplate
);

/*
 * Class:      org.ogre4j.ParticleSystemManager
 * Method:     createTemplate()
 * Type:       non-virtual method
 * Definition: ParticleSystem* Ogre::ParticleSystemManager::createTemplate
 * Signature:  (std_stringstd_string)Ogre_ParticleSystem
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystemManager__1createTemplate_1_1StringRStringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name, 
  jstring resourceGroup
);

/*
 * Class:      org.ogre4j.ParticleSystemManager
 * Method:     getTemplate()
 * Type:       non-virtual method
 * Definition: ParticleSystem* Ogre::ParticleSystemManager::getTemplate
 * Signature:  (std_string)Ogre_ParticleSystem
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystemManager__1getTemplate_1_1StringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name
);

/*
 * Class:      org.ogre4j.ParticleSystemManager
 * Method:     _createEmitter()
 * Type:       non-virtual method
 * Definition: ParticleEmitter* Ogre::ParticleSystemManager::_createEmitter
 * Signature:  (std_stringOgre_ParticleSystem)Ogre_ParticleEmitter
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystemManager__1_1createEmitter_1_1StringRParticleSystemp (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring emitterType, 
  jlong psys
);

/*
 * Class:      org.ogre4j.ParticleSystemManager
 * Method:     _destroyEmitter()
 * Type:       non-virtual method
 * Definition: void Ogre::ParticleSystemManager::_destroyEmitter
 * Signature:  (Ogre_ParticleEmitter)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystemManager__1_1destroyEmitter_1_1ParticleEmitterp (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong emitter
);

/*
 * Class:      org.ogre4j.ParticleSystemManager
 * Method:     _createAffector()
 * Type:       non-virtual method
 * Definition: ParticleAffector* Ogre::ParticleSystemManager::_createAffector
 * Signature:  (std_stringOgre_ParticleSystem)Ogre_ParticleAffector
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystemManager__1_1createAffector_1_1StringRParticleSystemp (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring affectorType, 
  jlong psys
);

/*
 * Class:      org.ogre4j.ParticleSystemManager
 * Method:     _destroyAffector()
 * Type:       non-virtual method
 * Definition: void Ogre::ParticleSystemManager::_destroyAffector
 * Signature:  (Ogre_ParticleAffector)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystemManager__1_1destroyAffector_1_1ParticleAffectorp (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong affector
);

/*
 * Class:      org.ogre4j.ParticleSystemManager
 * Method:     _createRenderer()
 * Type:       non-virtual method
 * Definition: ParticleSystemRenderer* Ogre::ParticleSystemManager::_createRenderer
 * Signature:  (std_string)Ogre_ParticleSystemRenderer
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystemManager__1_1createRenderer_1_1StringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring rendererType
);

/*
 * Class:      org.ogre4j.ParticleSystemManager
 * Method:     _destroyRenderer()
 * Type:       non-virtual method
 * Definition: void Ogre::ParticleSystemManager::_destroyRenderer
 * Signature:  (Ogre_ParticleSystemRenderer)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystemManager__1_1destroyRenderer_1_1ParticleSystemRendererp (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong renderer
);

/*
 * Class:      org.ogre4j.ParticleSystemManager
 * Method:     _initialise()
 * Type:       non-virtual method
 * Definition: void Ogre::ParticleSystemManager::_initialise
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystemManager__1_1initialise (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystemManager
 * Method:     getScriptPatterns()
 * Type:       virtual method
 * Definition: const StringVector& Ogre::ParticleSystemManager::getScriptPatterns
 * Signature:  ()Ogre_StringVector
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystemManager__1getScriptPatterns_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystemManager
 * Method:     parseScript()
 * Type:       virtual method
 * Definition: void Ogre::ParticleSystemManager::parseScript
 * Signature:  (Ogre_DataStreamPtrstd_string)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystemManager__1parseScript_1_1DataStreamPtrrStringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong stream, 
  jstring groupName
);

/*
 * Class:      org.ogre4j.ParticleSystemManager
 * Method:     getLoadingOrder()
 * Type:       virtual method
 * Definition: Real Ogre::ParticleSystemManager::getLoadingOrder
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_ParticleSystemManager__1getLoadingOrder_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystemManager
 * Method:     getAffectorFactoryIterator()
 * Type:       non-virtual method
 * Definition: ParticleAffectorFactoryIterator Ogre::ParticleSystemManager::getAffectorFactoryIterator
 * Signature:  ()Ogre_ParticleSystemManager_ParticleAffectorFactoryIterator
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystemManager__1getAffectorFactoryIterator (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystemManager
 * Method:     getEmitterFactoryIterator()
 * Type:       non-virtual method
 * Definition: ParticleEmitterFactoryIterator Ogre::ParticleSystemManager::getEmitterFactoryIterator
 * Signature:  ()Ogre_ParticleSystemManager_ParticleEmitterFactoryIterator
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystemManager__1getEmitterFactoryIterator (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystemManager
 * Method:     getRendererFactoryIterator()
 * Type:       non-virtual method
 * Definition: ParticleRendererFactoryIterator Ogre::ParticleSystemManager::getRendererFactoryIterator
 * Signature:  ()Ogre_ParticleSystemManager_ParticleRendererFactoryIterator
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystemManager__1getRendererFactoryIterator (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystemManager
 * Method:     getTemplateIterator()
 * Type:       non-virtual method
 * Definition: ParticleSystemTemplateIterator Ogre::ParticleSystemManager::getTemplateIterator
 * Signature:  ()Ogre_ParticleSystemManager_ParticleSystemTemplateIterator
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystemManager__1getTemplateIterator (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystemManager
 * Method:     _getFactory()
 * Type:       non-virtual method
 * Definition: ParticleSystemFactory* Ogre::ParticleSystemManager::_getFactory
 * Signature:  ()Ogre_ParticleSystemFactory
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystemManager__1_1getFactory (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystemManager
 * Method:     getSingleton()
 * Type:       static method
 * Definition: static ParticleSystemManager& Ogre::ParticleSystemManager::getSingleton
 * Signature:  ()Ogre_ParticleSystemManager
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystemManager__1getSingleton (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystemManager
 * Method:     getSingletonPtr()
 * Type:       static method
 * Definition: static ParticleSystemManager* Ogre::ParticleSystemManager::getSingletonPtr
 * Signature:  ()Ogre_ParticleSystemManager
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystemManager__1getSingletonPtr (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystemManager
 * Method:     __delete()
 * Type:       destructor
 * Definition: Ogre::ParticleSystemManager::__delete
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystemManager__1_1delete (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif /*__Included_org_ogre4j_ParticleSystemManager__*/
