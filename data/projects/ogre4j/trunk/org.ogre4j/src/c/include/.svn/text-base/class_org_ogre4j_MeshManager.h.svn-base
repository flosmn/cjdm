///////////////////////////////////////////////////////////////////////////////
/// This source file is generated by XBiG (The XSLT Bindings Generator)
/// For the latest info, see http://sourceforge.net/projects/xbig/
///
/// Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
/// Also see acknowledgements in Readme.html
///
/// This program is free software; you can redistribute it and/or modify it under
/// the terms of the GNU Lesser General Public License as published by the Free Software
/// Foundation; either version 2 of the License, or (at your option) any later
/// version.
///
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
/// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
///
/// You should have received a copy of the GNU Lesser General Public License along with
/// this program; if not, write to the Free Software Foundation, Inc., 59 Temple
/// Place - Suite 330, Boston, MA 02111-1307, USA, or go to
/// http://www.gnu.org/copyleft/lesser.txt.
///
/// Machine generated file
///////////////////////////////////////////////////////////////////////////////



#ifdef WIN32
	// disable warnings
	#pragma warning (disable : 4267) // conversion from 'size_t' to 'jint'
#else

#endif


#ifndef __Included_org_ogre4j_MeshManager__
#define __Included_org_ogre4j_MeshManager__


#include "jni_base.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     MeshManager()
 * Type:       constructor
 * Definition: Ogre::MeshManager::MeshManager
 * Signature:  ()V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_MeshManager__1_1createMeshManager (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     _initialise()
 * Type:       non-virtual method
 * Definition: void Ogre::MeshManager::_initialise
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_MeshManager__1_1initialise (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     createOrRetrieve()
 * Type:       non-virtual method
 * Definition: ResourceCreateOrRetrieveResult Ogre::MeshManager::createOrRetrieve
 * Signature:  (std_stringstd_stringZOgre_ManualResourceLoaderOgre_NameValuePairListOgre_HardwareBuffer_UsageOgre_HardwareBuffer_UsageZZ)Ogre_ResourceManager_ResourceCreateOrRetrieveResult
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_MeshManager__1createOrRetrieve_1_1StringRStringRbvManualResourceLoaderpNameValuePairListPHardwareBuffer_1UsagevHardwareBuffer_1Usagevbvbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name, 
  jstring group, 
  jboolean isManual, 
  jlong loader, 
  jlong params, 
  jint vertexBufferUsage, 
  jint indexBufferUsage, 
  jboolean vertexBufferShadowed, 
  jboolean indexBufferShadowed
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     prepare()
 * Type:       non-virtual method
 * Definition: MeshPtr Ogre::MeshManager::prepare
 * Signature:  (std_stringstd_stringOgre_HardwareBuffer_UsageOgre_HardwareBuffer_UsageZZ)Ogre_MeshPtr
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_MeshManager__1prepare_1_1StringRStringRHardwareBuffer_1UsagevHardwareBuffer_1Usagevbvbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring filename, 
  jstring groupName, 
  jint vertexBufferUsage, 
  jint indexBufferUsage, 
  jboolean vertexBufferShadowed, 
  jboolean indexBufferShadowed
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     load()
 * Type:       non-virtual method
 * Definition: MeshPtr Ogre::MeshManager::load
 * Signature:  (std_stringstd_stringOgre_HardwareBuffer_UsageOgre_HardwareBuffer_UsageZZ)Ogre_MeshPtr
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_MeshManager__1load_1_1StringRStringRHardwareBuffer_1UsagevHardwareBuffer_1Usagevbvbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring filename, 
  jstring groupName, 
  jint vertexBufferUsage, 
  jint indexBufferUsage, 
  jboolean vertexBufferShadowed, 
  jboolean indexBufferShadowed
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     createManual()
 * Type:       non-virtual method
 * Definition: MeshPtr Ogre::MeshManager::createManual
 * Signature:  (std_stringstd_stringOgre_ManualResourceLoader)Ogre_MeshPtr
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_MeshManager__1createManual_1_1StringRStringRManualResourceLoaderp (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name, 
  jstring groupName, 
  jlong loader
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     createPlane()
 * Type:       non-virtual method
 * Definition: MeshPtr Ogre::MeshManager::createPlane
 * Signature:  (std_stringstd_stringOgre_PlanefloatfloatIIZIfloatfloatOgre_Vector3Ogre_HardwareBuffer_UsageOgre_HardwareBuffer_UsageZZ)Ogre_MeshPtr
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_MeshManager__1createPlane_1_1StringRStringRPlaneRRealvRealvivivbvivRealvRealvVector3RHardwareBuffer_1UsagevHardwareBuffer_1Usagevbvbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name, 
  jstring groupName, 
  jlong plane, 
  jfloat width, 
  jfloat height, 
  jint xsegments, 
  jint ysegments, 
  jboolean normals, 
  jint numTexCoordSets, 
  jfloat uTile, 
  jfloat vTile, 
  jlong upVector, 
  jint vertexBufferUsage, 
  jint indexBufferUsage, 
  jboolean vertexShadowBuffer, 
  jboolean indexShadowBuffer
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     createCurvedIllusionPlane()
 * Type:       non-virtual method
 * Definition: MeshPtr Ogre::MeshManager::createCurvedIllusionPlane
 * Signature:  (std_stringstd_stringOgre_PlanefloatfloatfloatIIZIfloatfloatOgre_Vector3Ogre_QuaternionOgre_HardwareBuffer_UsageOgre_HardwareBuffer_UsageZZI)Ogre_MeshPtr
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_MeshManager__1createCurvedIllusionPlane_1_1StringRStringRPlaneRRealvRealvRealvivivbvivRealvRealvVector3RQuaternionRHardwareBuffer_1UsagevHardwareBuffer_1Usagevbvbviv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name, 
  jstring groupName, 
  jlong plane, 
  jfloat width, 
  jfloat height, 
  jfloat curvature, 
  jint xsegments, 
  jint ysegments, 
  jboolean normals, 
  jint numTexCoordSets, 
  jfloat uTile, 
  jfloat vTile, 
  jlong upVector, 
  jlong orientation, 
  jint vertexBufferUsage, 
  jint indexBufferUsage, 
  jboolean vertexShadowBuffer, 
  jboolean indexShadowBuffer, 
  jint ySegmentsToKeep
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     createCurvedPlane()
 * Type:       non-virtual method
 * Definition: MeshPtr Ogre::MeshManager::createCurvedPlane
 * Signature:  (std_stringstd_stringOgre_PlanefloatfloatfloatIIZIfloatfloatOgre_Vector3Ogre_HardwareBuffer_UsageOgre_HardwareBuffer_UsageZZ)Ogre_MeshPtr
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_MeshManager__1createCurvedPlane_1_1StringRStringRPlaneRRealvRealvRealvivivbvivRealvRealvVector3RHardwareBuffer_1UsagevHardwareBuffer_1Usagevbvbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name, 
  jstring groupName, 
  jlong plane, 
  jfloat width, 
  jfloat height, 
  jfloat bow, 
  jint xsegments, 
  jint ysegments, 
  jboolean normals, 
  jint numTexCoordSets, 
  jfloat xTile, 
  jfloat yTile, 
  jlong upVector, 
  jint vertexBufferUsage, 
  jint indexBufferUsage, 
  jboolean vertexShadowBuffer, 
  jboolean indexShadowBuffer
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     createBezierPatch()
 * Type:       non-virtual method
 * Definition: PatchMeshPtr Ogre::MeshManager::createBezierPatch
 * Signature:  (std_stringstd_stringVOgre_VertexDeclarationIIIIOgre_PatchSurface_VisibleSideOgre_HardwareBuffer_UsageOgre_HardwareBuffer_UsageZZ)Ogre_PatchMeshPtr
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_MeshManager__1createBezierPatch_1_1StringRStringRvpVertexDeclarationpivivivivPatchSurface_1VisibleSidevHardwareBuffer_1UsagevHardwareBuffer_1Usagevbvbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name, 
  jstring groupName, 
  jlong controlPointBuffer, 
  jlong declaration, 
  jint width, 
  jint height, 
  jint uMaxSubdivisionLevel, 
  jint vMaxSubdivisionLevel, 
  jint visibleSide, 
  jint vbUsage, 
  jint ibUsage, 
  jboolean vbUseShadow, 
  jboolean ibUseShadow
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     setPrepareAllMeshesForShadowVolumes()
 * Type:       non-virtual method
 * Definition: void Ogre::MeshManager::setPrepareAllMeshesForShadowVolumes
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_MeshManager__1setPrepareAllMeshesForShadowVolumes_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean enable
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     getPrepareAllMeshesForShadowVolumes()
 * Type:       non-virtual method
 * Definition: bool Ogre::MeshManager::getPrepareAllMeshesForShadowVolumes
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_MeshManager__1getPrepareAllMeshesForShadowVolumes (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     getBoundsPaddingFactor()
 * Type:       non-virtual method
 * Definition: Real Ogre::MeshManager::getBoundsPaddingFactor
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_MeshManager__1getBoundsPaddingFactor (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     setBoundsPaddingFactor()
 * Type:       non-virtual method
 * Definition: void Ogre::MeshManager::setBoundsPaddingFactor
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_MeshManager__1setBoundsPaddingFactor_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat paddingFactor
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     setListener()
 * Type:       non-virtual method
 * Definition: void Ogre::MeshManager::setListener
 * Signature:  (Ogre_MeshSerializerListener)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_MeshManager__1setListener_1_1MeshSerializerListenerp (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong listener
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     getListener()
 * Type:       non-virtual method
 * Definition: MeshSerializerListener* Ogre::MeshManager::getListener
 * Signature:  ()Ogre_MeshSerializerListener
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_MeshManager__1getListener (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     loadResource()
 * Type:       virtual method
 * Definition: void Ogre::MeshManager::loadResource
 * Signature:  (Ogre_Resource)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_MeshManager__1loadResource_1_1Resourcep (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong res
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     getSingleton()
 * Type:       static method
 * Definition: static MeshManager& Ogre::MeshManager::getSingleton
 * Signature:  ()Ogre_MeshManager
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_MeshManager__1getSingleton (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     getSingletonPtr()
 * Type:       static method
 * Definition: static MeshManager* Ogre::MeshManager::getSingletonPtr
 * Signature:  ()Ogre_MeshManager
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_MeshManager__1getSingletonPtr (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     create()
 * Type:       virtual method
 * Definition: virtual ResourcePtr Ogre::ResourceManager::create
 * Signature:  (std_stringstd_stringZOgre_ManualResourceLoaderOgre_NameValuePairList)Ogre_ResourcePtr
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_MeshManager__1create_1_1StringRStringRbvManualResourceLoaderpNameValuePairListP (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name, 
  jstring group, 
  jboolean isManual, 
  jlong loader, 
  jlong createParams
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     createOrRetrieve()
 * Type:       virtual method
 * Definition: virtual ResourceCreateOrRetrieveResult Ogre::ResourceManager::createOrRetrieve
 * Signature:  (std_stringstd_stringZOgre_ManualResourceLoaderOgre_NameValuePairList)Ogre_ResourceManager_ResourceCreateOrRetrieveResult
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_MeshManager__1createOrRetrieve_1_1StringRStringRbvManualResourceLoaderpNameValuePairListP (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name, 
  jstring group, 
  jboolean isManual, 
  jlong loader, 
  jlong createParams
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     setMemoryBudget()
 * Type:       virtual method
 * Definition: virtual void Ogre::ResourceManager::setMemoryBudget
 * Signature:  (I)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_MeshManager__1setMemoryBudget_1_1iv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint bytes
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     getMemoryBudget()
 * Type:       virtual method
 * Definition: virtual size_t Ogre::ResourceManager::getMemoryBudget
 * Signature:  ()I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_MeshManager__1getMemoryBudget_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     getMemoryUsage()
 * Type:       virtual method
 * Definition: virtual size_t Ogre::ResourceManager::getMemoryUsage
 * Signature:  ()I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_MeshManager__1getMemoryUsage_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     unload()
 * Type:       virtual method
 * Definition: virtual void Ogre::ResourceManager::unload
 * Signature:  (std_string)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_MeshManager__1unload_1_1StringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     unload()
 * Type:       virtual method
 * Definition: virtual void Ogre::ResourceManager::unload
 * Signature:  (unsigned_long)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_MeshManager__1unload_1_1ResourceHandlev (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong handle
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     unloadAll()
 * Type:       virtual method
 * Definition: virtual void Ogre::ResourceManager::unloadAll
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_MeshManager__1unloadAll_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean reloadableOnly
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     reloadAll()
 * Type:       virtual method
 * Definition: virtual void Ogre::ResourceManager::reloadAll
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_MeshManager__1reloadAll_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean reloadableOnly
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     unloadUnreferencedResources()
 * Type:       virtual method
 * Definition: virtual void Ogre::ResourceManager::unloadUnreferencedResources
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_MeshManager__1unloadUnreferencedResources_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean reloadableOnly
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     reloadUnreferencedResources()
 * Type:       virtual method
 * Definition: virtual void Ogre::ResourceManager::reloadUnreferencedResources
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_MeshManager__1reloadUnreferencedResources_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean reloadableOnly
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     remove()
 * Type:       virtual method
 * Definition: virtual void Ogre::ResourceManager::remove
 * Signature:  (Ogre_ResourcePtr)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_MeshManager__1remove_1_1ResourcePtrr (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong r
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     remove()
 * Type:       virtual method
 * Definition: virtual void Ogre::ResourceManager::remove
 * Signature:  (std_string)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_MeshManager__1remove_1_1StringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     remove()
 * Type:       virtual method
 * Definition: virtual void Ogre::ResourceManager::remove
 * Signature:  (unsigned_long)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_MeshManager__1remove_1_1ResourceHandlev (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong handle
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     removeAll()
 * Type:       virtual method
 * Definition: virtual void Ogre::ResourceManager::removeAll
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_MeshManager__1removeAll (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     getByName()
 * Type:       virtual method
 * Definition: virtual ResourcePtr Ogre::ResourceManager::getByName
 * Signature:  (std_string)Ogre_ResourcePtr
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_MeshManager__1getByName_1_1StringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     getByHandle()
 * Type:       virtual method
 * Definition: virtual ResourcePtr Ogre::ResourceManager::getByHandle
 * Signature:  (unsigned_long)Ogre_ResourcePtr
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_MeshManager__1getByHandle_1_1ResourceHandlev (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong handle
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     resourceExists()
 * Type:       virtual method
 * Definition: virtual bool Ogre::ResourceManager::resourceExists
 * Signature:  (std_string)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_MeshManager__1resourceExists_1_1StringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     resourceExists()
 * Type:       virtual method
 * Definition: virtual bool Ogre::ResourceManager::resourceExists
 * Signature:  (unsigned_long)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_MeshManager__1resourceExists_1_1ResourceHandlev (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong handle
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     _notifyResourceTouched()
 * Type:       virtual method
 * Definition: virtual void Ogre::ResourceManager::_notifyResourceTouched
 * Signature:  (Ogre_Resource)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_MeshManager__1_1notifyResourceTouched_1_1Resourcep (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong res
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     _notifyResourceLoaded()
 * Type:       virtual method
 * Definition: virtual void Ogre::ResourceManager::_notifyResourceLoaded
 * Signature:  (Ogre_Resource)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_MeshManager__1_1notifyResourceLoaded_1_1Resourcep (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong res
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     _notifyResourceUnloaded()
 * Type:       virtual method
 * Definition: virtual void Ogre::ResourceManager::_notifyResourceUnloaded
 * Signature:  (Ogre_Resource)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_MeshManager__1_1notifyResourceUnloaded_1_1Resourcep (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong res
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     prepare()
 * Type:       virtual method
 * Definition: virtual ResourcePtr Ogre::ResourceManager::prepare
 * Signature:  (std_stringstd_stringZOgre_ManualResourceLoaderOgre_NameValuePairList)Ogre_ResourcePtr
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_MeshManager__1prepare_1_1StringRStringRbvManualResourceLoaderpNameValuePairListP (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name, 
  jstring group, 
  jboolean isManual, 
  jlong loader, 
  jlong loadParams
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     load()
 * Type:       virtual method
 * Definition: virtual ResourcePtr Ogre::ResourceManager::load
 * Signature:  (std_stringstd_stringZOgre_ManualResourceLoaderOgre_NameValuePairList)Ogre_ResourcePtr
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_MeshManager__1load_1_1StringRStringRbvManualResourceLoaderpNameValuePairListP (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name, 
  jstring group, 
  jboolean isManual, 
  jlong loader, 
  jlong loadParams
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     getScriptPatterns()
 * Type:       virtual method
 * Definition: virtual const StringVector& Ogre::ResourceManager::getScriptPatterns
 * Signature:  ()Ogre_StringVector
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_MeshManager__1getScriptPatterns_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     parseScript()
 * Type:       virtual method
 * Definition: virtual void Ogre::ResourceManager::parseScript
 * Signature:  (Ogre_DataStreamPtrstd_string)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_MeshManager__1parseScript_1_1DataStreamPtrrStringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong stream, 
  jstring groupName
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     getLoadingOrder()
 * Type:       virtual method
 * Definition: virtual Real Ogre::ResourceManager::getLoadingOrder
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_MeshManager__1getLoadingOrder_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     getResourceType()
 * Type:       non-virtual method
 * Definition: const String& Ogre::ResourceManager::getResourceType
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_MeshManager__1getResourceType_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     setVerbose()
 * Type:       virtual method
 * Definition: virtual void Ogre::ResourceManager::setVerbose
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_MeshManager__1setVerbose_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean v
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     getVerbose()
 * Type:       virtual method
 * Definition: virtual bool Ogre::ResourceManager::getVerbose
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_MeshManager__1getVerbose (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     getResourceIterator()
 * Type:       non-virtual method
 * Definition: ResourceMapIterator Ogre::ResourceManager::getResourceIterator
 * Signature:  ()Ogre_ResourceManager_ResourceMapIterator
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_MeshManager__1getResourceIterator (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     prepareResource()
 * Type:       virtual method
 * Definition: virtual void Ogre::ManualResourceLoader::prepareResource
 * Signature:  (Ogre_Resource)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_MeshManager__1prepareResource_1_1Resourcep (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong resource
);

/*
 * Class:      org.ogre4j.MeshManager
 * Method:     __delete()
 * Type:       destructor
 * Definition: Ogre::MeshManager::__delete
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_MeshManager__1_1delete (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif /*__Included_org_ogre4j_MeshManager__*/
