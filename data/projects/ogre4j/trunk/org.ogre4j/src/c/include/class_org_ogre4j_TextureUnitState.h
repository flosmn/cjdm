///////////////////////////////////////////////////////////////////////////////
/// This source file is generated by XBiG (The XSLT Bindings Generator)
/// For the latest info, see http://sourceforge.net/projects/xbig/
///
/// Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
/// Also see acknowledgements in Readme.html
///
/// This program is free software; you can redistribute it and/or modify it under
/// the terms of the GNU Lesser General Public License as published by the Free Software
/// Foundation; either version 2 of the License, or (at your option) any later
/// version.
///
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
/// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
///
/// You should have received a copy of the GNU Lesser General Public License along with
/// this program; if not, write to the Free Software Foundation, Inc., 59 Temple
/// Place - Suite 330, Boston, MA 02111-1307, USA, or go to
/// http://www.gnu.org/copyleft/lesser.txt.
///
/// Machine generated file
///////////////////////////////////////////////////////////////////////////////



#ifdef WIN32
	// disable warnings
	#pragma warning (disable : 4267) // conversion from 'size_t' to 'jint'
#else

#endif


#ifndef __Included_org_ogre4j_TextureUnitState__
#define __Included_org_ogre4j_TextureUnitState__


#include "jni_base.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     TextureUnitState()
 * Type:       constructor
 * Definition: Ogre::TextureUnitState::TextureUnitState
 * Signature:  (Ogre_Pass)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_TextureUnitState__1_1createTextureUnitState_1_1Passp (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong parent
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     TextureUnitState()
 * Type:       constructor
 * Definition: Ogre::TextureUnitState::TextureUnitState
 * Signature:  (Ogre_PassOgre_TextureUnitState)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_TextureUnitState__1_1createTextureUnitState_1_1PasspTextureUnitStateR (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong parent, 
  jlong oth
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     operator=()
 * Type:       non-virtual method
 * Definition: TextureUnitState& Ogre::TextureUnitState::operator=
 * Signature:  (Ogre_TextureUnitState)Ogre_TextureUnitState
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_TextureUnitState__1operatorAssignment_1_1TextureUnitStateR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong oth
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     TextureUnitState()
 * Type:       constructor
 * Definition: Ogre::TextureUnitState::TextureUnitState
 * Signature:  (Ogre_Passstd_stringI)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_TextureUnitState__1_1createTextureUnitState_1_1PasspStringRIv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong parent, 
  jstring texName, 
  jlong texCoordSet
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     getTextureName()
 * Type:       non-virtual method
 * Definition: const String& Ogre::TextureUnitState::getTextureName
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_TextureUnitState__1getTextureName_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setTextureName()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setTextureName
 * Signature:  (std_stringOgre_TextureType)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setTextureName_1_1StringRTextureTypev (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name, 
  jint ttype
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setCubicTextureName()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setCubicTextureName
 * Signature:  (std_stringZ)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setCubicTextureName_1_1StringRbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name, 
  jboolean forUVW
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setAnimatedTextureName()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setAnimatedTextureName
 * Signature:  (std_stringIfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setAnimatedTextureName_1_1StringRIvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name, 
  jlong numFrames, 
  jfloat duration
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     getTextureDimensions()
 * Type:       non-virtual method
 * Definition: std::pair< size_t, size_t > Ogre::TextureUnitState::getTextureDimensions
 * Signature:  (I)std_pair__size_t__size_t__
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_TextureUnitState__1getTextureDimensions_1_1Iv_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong frame
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setCurrentFrame()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setCurrentFrame
 * Signature:  (I)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setCurrentFrame_1_1Iv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong frameNumber
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     getCurrentFrame()
 * Type:       non-virtual method
 * Definition: unsigned int Ogre::TextureUnitState::getCurrentFrame
 * Signature:  ()I
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_TextureUnitState__1getCurrentFrame_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     getFrameTextureName()
 * Type:       non-virtual method
 * Definition: const String& Ogre::TextureUnitState::getFrameTextureName
 * Signature:  (I)std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_TextureUnitState__1getFrameTextureName_1_1Iv_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong frameNumber
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setFrameTextureName()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setFrameTextureName
 * Signature:  (std_stringI)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setFrameTextureName_1_1StringRIv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name, 
  jlong frameNumber
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     addFrameTextureName()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::addFrameTextureName
 * Signature:  (std_string)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1addFrameTextureName_1_1StringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     deleteFrameTextureName()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::deleteFrameTextureName
 * Signature:  (I)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1deleteFrameTextureName_1_1iV (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint frameNumber
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     getNumFrames()
 * Type:       non-virtual method
 * Definition: unsigned int Ogre::TextureUnitState::getNumFrames
 * Signature:  ()I
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_TextureUnitState__1getNumFrames_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setBindingType()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setBindingType
 * Signature:  (Ogre_TextureUnitState_BindingType)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setBindingType_1_1BindingTypev (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint bt
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     getBindingType()
 * Type:       non-virtual method
 * Definition: BindingType Ogre::TextureUnitState::getBindingType
 * Signature:  ()Ogre_TextureUnitState_BindingType
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_TextureUnitState__1getBindingType_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setContentType()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setContentType
 * Signature:  (Ogre_TextureUnitState_ContentType)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setContentType_1_1ContentTypev (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint ct
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     getContentType()
 * Type:       non-virtual method
 * Definition: ContentType Ogre::TextureUnitState::getContentType
 * Signature:  ()Ogre_TextureUnitState_ContentType
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_TextureUnitState__1getContentType_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     isCubic()
 * Type:       non-virtual method
 * Definition: bool Ogre::TextureUnitState::isCubic
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_TextureUnitState__1isCubic_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     is3D()
 * Type:       non-virtual method
 * Definition: bool Ogre::TextureUnitState::is3D
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_TextureUnitState__1is3D_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     getTextureType()
 * Type:       non-virtual method
 * Definition: TextureType Ogre::TextureUnitState::getTextureType
 * Signature:  ()Ogre_TextureType
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_TextureUnitState__1getTextureType_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setDesiredFormat()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setDesiredFormat
 * Signature:  (Ogre_PixelFormat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setDesiredFormat_1_1PixelFormatv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint desiredFormat
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     getDesiredFormat()
 * Type:       non-virtual method
 * Definition: PixelFormat Ogre::TextureUnitState::getDesiredFormat
 * Signature:  ()Ogre_PixelFormat
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_TextureUnitState__1getDesiredFormat_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setNumMipmaps()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setNumMipmaps
 * Signature:  (I)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setNumMipmaps_1_1iv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint numMipmaps
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     getNumMipmaps()
 * Type:       non-virtual method
 * Definition: int Ogre::TextureUnitState::getNumMipmaps
 * Signature:  ()I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_TextureUnitState__1getNumMipmaps_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setIsAlpha()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setIsAlpha
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setIsAlpha_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean isAlpha
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     getIsAlpha()
 * Type:       non-virtual method
 * Definition: bool Ogre::TextureUnitState::getIsAlpha
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_TextureUnitState__1getIsAlpha_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setHardwareGammaEnabled()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setHardwareGammaEnabled
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setHardwareGammaEnabled_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean enabled
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     isHardwareGammaEnabled()
 * Type:       non-virtual method
 * Definition: bool Ogre::TextureUnitState::isHardwareGammaEnabled
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_TextureUnitState__1isHardwareGammaEnabled_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     getTextureCoordSet()
 * Type:       non-virtual method
 * Definition: unsigned int Ogre::TextureUnitState::getTextureCoordSet
 * Signature:  ()I
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_TextureUnitState__1getTextureCoordSet_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setTextureCoordSet()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setTextureCoordSet
 * Signature:  (I)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setTextureCoordSet_1_1Iv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong set
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setTextureTransform()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setTextureTransform
 * Signature:  (Ogre_Matrix4)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setTextureTransform_1_1Matrix4R (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong xform
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     getTextureTransform()
 * Type:       non-virtual method
 * Definition: const Matrix4& Ogre::TextureUnitState::getTextureTransform
 * Signature:  ()Ogre_Matrix4
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_TextureUnitState__1getTextureTransform_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setTextureScroll()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setTextureScroll
 * Signature:  (floatfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setTextureScroll_1_1RealvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat u, 
  jfloat v
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setTextureUScroll()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setTextureUScroll
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setTextureUScroll_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat value
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     getTextureUScroll()
 * Type:       non-virtual method
 * Definition: Real Ogre::TextureUnitState::getTextureUScroll
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_TextureUnitState__1getTextureUScroll_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setTextureVScroll()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setTextureVScroll
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setTextureVScroll_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat value
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     getTextureVScroll()
 * Type:       non-virtual method
 * Definition: Real Ogre::TextureUnitState::getTextureVScroll
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_TextureUnitState__1getTextureVScroll_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setTextureUScale()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setTextureUScale
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setTextureUScale_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat value
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     getTextureUScale()
 * Type:       non-virtual method
 * Definition: Real Ogre::TextureUnitState::getTextureUScale
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_TextureUnitState__1getTextureUScale_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setTextureVScale()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setTextureVScale
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setTextureVScale_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat value
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     getTextureVScale()
 * Type:       non-virtual method
 * Definition: Real Ogre::TextureUnitState::getTextureVScale
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_TextureUnitState__1getTextureVScale_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setTextureScale()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setTextureScale
 * Signature:  (floatfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setTextureScale_1_1RealvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat uScale, 
  jfloat vScale
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setTextureRotate()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setTextureRotate
 * Signature:  (Ogre_Radian)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setTextureRotate_1_1RadianR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong angle
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     getTextureRotate()
 * Type:       non-virtual method
 * Definition: const Radian& Ogre::TextureUnitState::getTextureRotate
 * Signature:  ()Ogre_Radian
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_TextureUnitState__1getTextureRotate_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     getTextureAddressingMode()
 * Type:       non-virtual method
 * Definition: const UVWAddressingMode& Ogre::TextureUnitState::getTextureAddressingMode
 * Signature:  ()Ogre_TextureUnitState_UVWAddressingMode
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_TextureUnitState__1getTextureAddressingMode_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setTextureAddressingMode()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setTextureAddressingMode
 * Signature:  (Ogre_TextureUnitState_TextureAddressingMode)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setTextureAddressingMode_1_1TextureAddressingModev (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint tam
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setTextureAddressingMode()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setTextureAddressingMode
 * Signature:  (Ogre_TextureUnitState_TextureAddressingModeOgre_TextureUnitState_TextureAddressingModeOgre_TextureUnitState_TextureAddressingMode)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setTextureAddressingMode_1_1TextureAddressingModevTextureAddressingModevTextureAddressingModev (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint u, 
  jint v, 
  jint w
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setTextureAddressingMode()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setTextureAddressingMode
 * Signature:  (Ogre_TextureUnitState_UVWAddressingMode)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setTextureAddressingMode_1_1UVWAddressingModeR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong uvw
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setTextureBorderColour()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setTextureBorderColour
 * Signature:  (Ogre_ColourValue)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setTextureBorderColour_1_1ColourValueR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong colour
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     getTextureBorderColour()
 * Type:       non-virtual method
 * Definition: const ColourValue& Ogre::TextureUnitState::getTextureBorderColour
 * Signature:  ()Ogre_ColourValue
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_TextureUnitState__1getTextureBorderColour_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setColourOperationEx()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setColourOperationEx
 * Signature:  (Ogre_LayerBlendOperationExOgre_LayerBlendSourceOgre_LayerBlendSourceOgre_ColourValueOgre_ColourValuefloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setColourOperationEx_1_1LayerBlendOperationExvLayerBlendSourcevLayerBlendSourcevColourValueRColourValueRRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint op, 
  jint source1, 
  jint source2, 
  jlong arg1, 
  jlong arg2, 
  jfloat manualBlend
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setColourOperation()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setColourOperation
 * Signature:  (Ogre_LayerBlendOperation)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setColourOperation_1_1LayerBlendOperationV (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint op
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setColourOpMultipassFallback()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setColourOpMultipassFallback
 * Signature:  (Ogre_SceneBlendFactorOgre_SceneBlendFactor)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setColourOpMultipassFallback_1_1SceneBlendFactorVSceneBlendFactorV (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint sourceFactor, 
  jint destFactor
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     getColourBlendMode()
 * Type:       non-virtual method
 * Definition: const LayerBlendModeEx& Ogre::TextureUnitState::getColourBlendMode
 * Signature:  ()Ogre_LayerBlendModeEx
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_TextureUnitState__1getColourBlendMode_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     getAlphaBlendMode()
 * Type:       non-virtual method
 * Definition: const LayerBlendModeEx& Ogre::TextureUnitState::getAlphaBlendMode
 * Signature:  ()Ogre_LayerBlendModeEx
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_TextureUnitState__1getAlphaBlendMode_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     getColourBlendFallbackSrc()
 * Type:       non-virtual method
 * Definition: SceneBlendFactor Ogre::TextureUnitState::getColourBlendFallbackSrc
 * Signature:  ()Ogre_SceneBlendFactor
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_TextureUnitState__1getColourBlendFallbackSrc_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     getColourBlendFallbackDest()
 * Type:       non-virtual method
 * Definition: SceneBlendFactor Ogre::TextureUnitState::getColourBlendFallbackDest
 * Signature:  ()Ogre_SceneBlendFactor
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_TextureUnitState__1getColourBlendFallbackDest_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setAlphaOperation()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setAlphaOperation
 * Signature:  (Ogre_LayerBlendOperationExOgre_LayerBlendSourceOgre_LayerBlendSourcefloatfloatfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setAlphaOperation_1_1LayerBlendOperationExvLayerBlendSourcevLayerBlendSourcevRealvRealvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint op, 
  jint source1, 
  jint source2, 
  jfloat arg1, 
  jfloat arg2, 
  jfloat manualBlend
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     addEffect()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::addEffect
 * Signature:  (Ogre_TextureUnitState_TextureEffect)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1addEffect_1_1TextureEffectr (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong effect
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setEnvironmentMap()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setEnvironmentMap
 * Signature:  (ZOgre_TextureUnitState_EnvMapType)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setEnvironmentMap_1_1bvEnvMapTypev (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean enable, 
  jint envMapType
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setScrollAnimation()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setScrollAnimation
 * Signature:  (floatfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setScrollAnimation_1_1RealvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat uSpeed, 
  jfloat vSpeed
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setRotateAnimation()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setRotateAnimation
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setRotateAnimation_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat speed
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setTransformAnimation()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setTransformAnimation
 * Signature:  (Ogre_TextureUnitState_TextureTransformTypeOgre_WaveformTypefloatfloatfloatfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setTransformAnimation_1_1TextureTransformTypeVWaveformTypeVRealvRealvRealvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint ttype, 
  jint waveType, 
  jfloat base, 
  jfloat frequency, 
  jfloat phase, 
  jfloat amplitude
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setProjectiveTexturing()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setProjectiveTexturing
 * Signature:  (ZOgre_Frustum)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setProjectiveTexturing_1_1bvFrustumP (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean enabled, 
  jlong projectionSettings
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     removeAllEffects()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::removeAllEffects
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1removeAllEffects (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     removeEffect()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::removeEffect
 * Signature:  (Ogre_TextureUnitState_TextureEffectType)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1removeEffect_1_1TextureEffectTypeV (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint type
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     isBlank()
 * Type:       non-virtual method
 * Definition: bool Ogre::TextureUnitState::isBlank
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_TextureUnitState__1isBlank_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setBlank()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setBlank
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setBlank (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     isTextureLoadFailing()
 * Type:       non-virtual method
 * Definition: bool Ogre::TextureUnitState::isTextureLoadFailing
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_TextureUnitState__1isTextureLoadFailing_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     retryTextureLoad()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::retryTextureLoad
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1retryTextureLoad (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     getEffects()
 * Type:       non-virtual method
 * Definition: const EffectMap& Ogre::TextureUnitState::getEffects
 * Signature:  ()Ogre_TextureUnitState_EffectMap
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_TextureUnitState__1getEffects_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     getAnimationDuration()
 * Type:       non-virtual method
 * Definition: Real Ogre::TextureUnitState::getAnimationDuration
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_TextureUnitState__1getAnimationDuration_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setTextureFiltering()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setTextureFiltering
 * Signature:  (Ogre_TextureFilterOptions)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setTextureFiltering_1_1TextureFilterOptionsv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint filterType
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setTextureFiltering()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setTextureFiltering
 * Signature:  (Ogre_FilterTypeOgre_FilterOptions)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setTextureFiltering_1_1FilterTypevFilterOptionsv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint ftype, 
  jint opts
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setTextureFiltering()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setTextureFiltering
 * Signature:  (Ogre_FilterOptionsOgre_FilterOptionsOgre_FilterOptions)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setTextureFiltering_1_1FilterOptionsvFilterOptionsvFilterOptionsv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint minFilter, 
  jint magFilter, 
  jint mipFilter
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     getTextureFiltering()
 * Type:       non-virtual method
 * Definition: FilterOptions Ogre::TextureUnitState::getTextureFiltering
 * Signature:  (Ogre_FilterType)Ogre_FilterOptions
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_TextureUnitState__1getTextureFiltering_1_1FilterTypev_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint ftpye
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setTextureAnisotropy()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setTextureAnisotropy
 * Signature:  (I)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setTextureAnisotropy_1_1Iv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong maxAniso
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     getTextureAnisotropy()
 * Type:       non-virtual method
 * Definition: unsigned int Ogre::TextureUnitState::getTextureAnisotropy
 * Signature:  ()I
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_TextureUnitState__1getTextureAnisotropy_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setTextureMipmapBias()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setTextureMipmapBias
 * Signature:  (F)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setTextureMipmapBias_1_1Fv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat bias
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     getTextureMipmapBias()
 * Type:       non-virtual method
 * Definition: float Ogre::TextureUnitState::getTextureMipmapBias
 * Signature:  ()F
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_TextureUnitState__1getTextureMipmapBias_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     getParent()
 * Type:       non-virtual method
 * Definition: Pass* Ogre::TextureUnitState::getParent
 * Signature:  ()Ogre_Pass
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_TextureUnitState__1getParent_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     _prepare()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::_prepare
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1_1prepare (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     _unprepare()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::_unprepare
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1_1unprepare (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     _load()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::_load
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1_1load (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     _unload()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::_unload
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1_1unload (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     hasViewRelativeTextureCoordinateGeneration()
 * Type:       non-virtual method
 * Definition: bool Ogre::TextureUnitState::hasViewRelativeTextureCoordinateGeneration
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_TextureUnitState__1hasViewRelativeTextureCoordinateGeneration_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     isLoaded()
 * Type:       non-virtual method
 * Definition: bool Ogre::TextureUnitState::isLoaded
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_TextureUnitState__1isLoaded_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     _notifyNeedsRecompile()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::_notifyNeedsRecompile
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1_1notifyNeedsRecompile (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setName()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setName
 * Signature:  (std_string)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setName_1_1StringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     getName()
 * Type:       non-virtual method
 * Definition: const String& Ogre::TextureUnitState::getName
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_TextureUnitState__1getName_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     setTextureNameAlias()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::setTextureNameAlias
 * Signature:  (std_string)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1setTextureNameAlias_1_1StringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     getTextureNameAlias()
 * Type:       non-virtual method
 * Definition: const String& Ogre::TextureUnitState::getTextureNameAlias
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_TextureUnitState__1getTextureNameAlias_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     applyTextureAliases()
 * Type:       non-virtual method
 * Definition: bool Ogre::TextureUnitState::applyTextureAliases
 * Signature:  (Ogre_AliasTextureNamePairListZ)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_TextureUnitState__1applyTextureAliases_1_1AliasTextureNamePairListRbV (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong aliasList, 
  jboolean apply
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     _notifyParent()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::_notifyParent
 * Signature:  (Ogre_Pass)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1_1notifyParent_1_1Passp (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong parent
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     _getTexturePtr()
 * Type:       non-virtual method
 * Definition: const TexturePtr& Ogre::TextureUnitState::_getTexturePtr
 * Signature:  ()Ogre_TexturePtr
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_TextureUnitState__1_1getTexturePtr_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     _getTexturePtr()
 * Type:       non-virtual method
 * Definition: const TexturePtr& Ogre::TextureUnitState::_getTexturePtr
 * Signature:  (I)Ogre_TexturePtr
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_TextureUnitState__1_1getTexturePtr_1_1iv_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint frame
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     _setTexturePtr()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::_setTexturePtr
 * Signature:  (Ogre_TexturePtr)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1_1setTexturePtr_1_1TexturePtrR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong texptr
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     _setTexturePtr()
 * Type:       non-virtual method
 * Definition: void Ogre::TextureUnitState::_setTexturePtr
 * Signature:  (Ogre_TexturePtrI)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1_1setTexturePtr_1_1TexturePtrRiv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong texptr, 
  jint frame
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     _getAnimController()
 * Type:       non-virtual method
 * Definition: Controller<Real>* Ogre::TextureUnitState::_getAnimController
 * Signature:  ()Controller__Real__
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_TextureUnitState__1_1getAnimController_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.TextureUnitState
 * Method:     __delete()
 * Type:       destructor
 * Definition: Ogre::TextureUnitState::__delete
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState__1_1delete (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif /*__Included_org_ogre4j_TextureUnitState__*/
