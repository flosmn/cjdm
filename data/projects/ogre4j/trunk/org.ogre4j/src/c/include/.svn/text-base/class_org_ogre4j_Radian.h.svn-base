///////////////////////////////////////////////////////////////////////////////
/// This source file is generated by XBiG (The XSLT Bindings Generator)
/// For the latest info, see http://sourceforge.net/projects/xbig/
///
/// Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
/// Also see acknowledgements in Readme.html
///
/// This program is free software; you can redistribute it and/or modify it under
/// the terms of the GNU Lesser General Public License as published by the Free Software
/// Foundation; either version 2 of the License, or (at your option) any later
/// version.
///
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
/// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
///
/// You should have received a copy of the GNU Lesser General Public License along with
/// this program; if not, write to the Free Software Foundation, Inc., 59 Temple
/// Place - Suite 330, Boston, MA 02111-1307, USA, or go to
/// http://www.gnu.org/copyleft/lesser.txt.
///
/// Machine generated file
///////////////////////////////////////////////////////////////////////////////



#ifdef WIN32
	// disable warnings
	#pragma warning (disable : 4267) // conversion from 'size_t' to 'jint'
#else

#endif


#ifndef __Included_org_ogre4j_Radian__
#define __Included_org_ogre4j_Radian__


#include "jni_base.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/*
 * Class:      org.ogre4j.Radian
 * Method:     Radian()
 * Type:       constructor
 * Definition: Ogre::Radian::Radian
 * Signature:  (float)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Radian__1_1createRadian_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jfloat r
);

/*
 * Class:      org.ogre4j.Radian
 * Method:     Radian()
 * Type:       constructor
 * Definition: Ogre::Radian::Radian
 * Signature:  (Ogre_Degree)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Radian__1_1createRadian_1_1DegreeR (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong d
);

/*
 * Class:      org.ogre4j.Radian
 * Method:     operator=()
 * Type:       non-virtual method
 * Definition: Radian& Ogre::Radian::operator=
 * Signature:  (float)Ogre_Radian
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Radian__1operatorAssignment_1_1RealR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat f
);

/*
 * Class:      org.ogre4j.Radian
 * Method:     operator=()
 * Type:       non-virtual method
 * Definition: Radian& Ogre::Radian::operator=
 * Signature:  (Ogre_Radian)Ogre_Radian
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Radian__1operatorAssignment_1_1RadianR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong r
);

/*
 * Class:      org.ogre4j.Radian
 * Method:     operator=()
 * Type:       non-virtual method
 * Definition: Radian & Ogre::Radian::operator=
 * Signature:  (Ogre_Degree)Ogre_Radian
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Radian__1operatorAssignment_1_1DegreeR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong d
);

/*
 * Class:      org.ogre4j.Radian
 * Method:     valueDegrees()
 * Type:       non-virtual method
 * Definition: Real Ogre::Radian::valueDegrees
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_Radian__1valueDegrees_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.Radian
 * Method:     valueRadians()
 * Type:       non-virtual method
 * Definition: Real Ogre::Radian::valueRadians
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_Radian__1valueRadians_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.Radian
 * Method:     valueAngleUnits()
 * Type:       non-virtual method
 * Definition: Real Ogre::Radian::valueAngleUnits
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_Radian__1valueAngleUnits_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.Radian
 * Method:     operator+()
 * Type:       non-virtual method
 * Definition: const Radian& Ogre::Radian::operator+
 * Signature:  ()Ogre_Radian
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Radian__1operatorAddition_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.Radian
 * Method:     operator+()
 * Type:       non-virtual method
 * Definition: Radian Ogre::Radian::operator+
 * Signature:  (Ogre_Radian)Ogre_Radian
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Radian__1operatorAddition_1_1RadianR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong r
);

/*
 * Class:      org.ogre4j.Radian
 * Method:     operator+()
 * Type:       non-virtual method
 * Definition: Radian Ogre::Radian::operator+
 * Signature:  (Ogre_Degree)Ogre_Radian
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Radian__1operatorAddition_1_1DegreeR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong d
);

/*
 * Class:      org.ogre4j.Radian
 * Method:     operator+=()
 * Type:       non-virtual method
 * Definition: Radian& Ogre::Radian::operator+=
 * Signature:  (Ogre_Radian)Ogre_Radian
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Radian__1operatorIncrementAndAssign_1_1RadianR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong r
);

/*
 * Class:      org.ogre4j.Radian
 * Method:     operator+=()
 * Type:       non-virtual method
 * Definition: Radian & Ogre::Radian::operator+=
 * Signature:  (Ogre_Degree)Ogre_Radian
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Radian__1operatorIncrementAndAssign_1_1DegreeR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong d
);

/*
 * Class:      org.ogre4j.Radian
 * Method:     operator-()
 * Type:       non-virtual method
 * Definition: Radian Ogre::Radian::operator-
 * Signature:  ()Ogre_Radian
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Radian__1operatorSubtraction_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.Radian
 * Method:     operator-()
 * Type:       non-virtual method
 * Definition: Radian Ogre::Radian::operator-
 * Signature:  (Ogre_Radian)Ogre_Radian
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Radian__1operatorSubtraction_1_1RadianR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong r
);

/*
 * Class:      org.ogre4j.Radian
 * Method:     operator-()
 * Type:       non-virtual method
 * Definition: Radian Ogre::Radian::operator-
 * Signature:  (Ogre_Degree)Ogre_Radian
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Radian__1operatorSubtraction_1_1DegreeR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong d
);

/*
 * Class:      org.ogre4j.Radian
 * Method:     operator-=()
 * Type:       non-virtual method
 * Definition: Radian& Ogre::Radian::operator-=
 * Signature:  (Ogre_Radian)Ogre_Radian
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Radian__1operatorDecrementAndAssign_1_1RadianR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong r
);

/*
 * Class:      org.ogre4j.Radian
 * Method:     operator-=()
 * Type:       non-virtual method
 * Definition: Radian & Ogre::Radian::operator-=
 * Signature:  (Ogre_Degree)Ogre_Radian
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Radian__1operatorDecrementAndAssign_1_1DegreeR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong d
);

/*
 * Class:      org.ogre4j.Radian
 * Method:     operator *()
 * Type:       non-virtual method
 * Definition: Radian Ogre::Radian::operator *
 * Signature:  (float)Ogre_Radian
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Radian__1operatorMultiplication_1_1Realv_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat f
);

/*
 * Class:      org.ogre4j.Radian
 * Method:     operator *()
 * Type:       non-virtual method
 * Definition: Radian Ogre::Radian::operator *
 * Signature:  (Ogre_Radian)Ogre_Radian
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Radian__1operatorMultiplication_1_1RadianR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong f
);

/*
 * Class:      org.ogre4j.Radian
 * Method:     operator *=()
 * Type:       non-virtual method
 * Definition: Radian& Ogre::Radian::operator *=
 * Signature:  (float)Ogre_Radian
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Radian__1operatorMultiplyAndAssign_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat f
);

/*
 * Class:      org.ogre4j.Radian
 * Method:     operator/()
 * Type:       non-virtual method
 * Definition: Radian Ogre::Radian::operator/
 * Signature:  (float)Ogre_Radian
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Radian__1operatorDivision_1_1Realv_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat f
);

/*
 * Class:      org.ogre4j.Radian
 * Method:     operator/=()
 * Type:       non-virtual method
 * Definition: Radian& Ogre::Radian::operator/=
 * Signature:  (float)Ogre_Radian
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Radian__1operatorDivideAndAssign_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat f
);

/*
 * Class:      org.ogre4j.Radian
 * Method:     operator<()
 * Type:       non-virtual method
 * Definition: bool Ogre::Radian::operator<
 * Signature:  (Ogre_Radian)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_Radian__1operatorLessThan_1_1RadianR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong r
);

/*
 * Class:      org.ogre4j.Radian
 * Method:     operator<=()
 * Type:       non-virtual method
 * Definition: bool Ogre::Radian::operator<=
 * Signature:  (Ogre_Radian)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_Radian__1operatorLessThanOrEqual_1_1RadianR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong r
);

/*
 * Class:      org.ogre4j.Radian
 * Method:     operator==()
 * Type:       non-virtual method
 * Definition: bool Ogre::Radian::operator==
 * Signature:  (Ogre_Radian)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_Radian__1operatorEqual_1_1RadianR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong r
);

/*
 * Class:      org.ogre4j.Radian
 * Method:     operator!=()
 * Type:       non-virtual method
 * Definition: bool Ogre::Radian::operator!=
 * Signature:  (Ogre_Radian)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_Radian__1operatorNotEqual_1_1RadianR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong r
);

/*
 * Class:      org.ogre4j.Radian
 * Method:     operator>=()
 * Type:       non-virtual method
 * Definition: bool Ogre::Radian::operator>=
 * Signature:  (Ogre_Radian)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_Radian__1operatorGreaterThanOrEqual_1_1RadianR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong r
);

/*
 * Class:      org.ogre4j.Radian
 * Method:     operator>()
 * Type:       non-virtual method
 * Definition: bool Ogre::Radian::operator>
 * Signature:  (Ogre_Radian)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_Radian__1operatorGreaterThan_1_1RadianR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong r
);

/*
 * Class:      org.ogre4j.Radian
 * Method:     __delete()
 * Type:       destructor
 * Definition: Ogre::Radian::__delete
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_Radian__1_1delete (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif /*__Included_org_ogre4j_Radian__*/
