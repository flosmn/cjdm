///////////////////////////////////////////////////////////////////////////////
/// This source file is generated by XBiG (The XSLT Bindings Generator)
/// For the latest info, see http://sourceforge.net/projects/xbig/
///
/// Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
/// Also see acknowledgements in Readme.html
///
/// This program is free software; you can redistribute it and/or modify it under
/// the terms of the GNU Lesser General Public License as published by the Free Software
/// Foundation; either version 2 of the License, or (at your option) any later
/// version.
///
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
/// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
///
/// You should have received a copy of the GNU Lesser General Public License along with
/// this program; if not, write to the Free Software Foundation, Inc., 59 Temple
/// Place - Suite 330, Boston, MA 02111-1307, USA, or go to
/// http://www.gnu.org/copyleft/lesser.txt.
///
/// Machine generated file
///////////////////////////////////////////////////////////////////////////////



#ifdef WIN32
	// disable warnings
	#pragma warning (disable : 4267) // conversion from 'size_t' to 'jint'
#else

#endif


#ifndef __Included_org_ogre4j_GlobalUtility__
#define __Included_org_ogre4j_GlobalUtility__


#include "jni_base.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/*
 * Class:      org.ogre4j.GlobalUtility
 * Method:     asm_arccos()
 * Type:       static method
 * Definition: static float Ogre::asm_arccos
 * Signature:  (F)F
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_GlobalUtility__1asm_1arccos_1_1Fv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jfloat r
);

/*
 * Class:      org.ogre4j.GlobalUtility
 * Method:     asm_arcsin()
 * Type:       static method
 * Definition: static float Ogre::asm_arcsin
 * Signature:  (F)F
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_GlobalUtility__1asm_1arcsin_1_1Fv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jfloat r
);

/*
 * Class:      org.ogre4j.GlobalUtility
 * Method:     asm_arctan()
 * Type:       static method
 * Definition: static float Ogre::asm_arctan
 * Signature:  (F)F
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_GlobalUtility__1asm_1arctan_1_1Fv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jfloat r
);

/*
 * Class:      org.ogre4j.GlobalUtility
 * Method:     asm_sin()
 * Type:       static method
 * Definition: static float Ogre::asm_sin
 * Signature:  (F)F
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_GlobalUtility__1asm_1sin_1_1Fv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jfloat r
);

/*
 * Class:      org.ogre4j.GlobalUtility
 * Method:     asm_cos()
 * Type:       static method
 * Definition: static float Ogre::asm_cos
 * Signature:  (F)F
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_GlobalUtility__1asm_1cos_1_1Fv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jfloat r
);

/*
 * Class:      org.ogre4j.GlobalUtility
 * Method:     asm_tan()
 * Type:       static method
 * Definition: static float Ogre::asm_tan
 * Signature:  (F)F
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_GlobalUtility__1asm_1tan_1_1Fv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jfloat r
);

/*
 * Class:      org.ogre4j.GlobalUtility
 * Method:     asm_sqrt()
 * Type:       static method
 * Definition: static float Ogre::asm_sqrt
 * Signature:  (F)F
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_GlobalUtility__1asm_1sqrt_1_1Fv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jfloat r
);

/*
 * Class:      org.ogre4j.GlobalUtility
 * Method:     asm_rsq()
 * Type:       static method
 * Definition: static float Ogre::asm_rsq
 * Signature:  (F)F
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_GlobalUtility__1asm_1rsq_1_1Fv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jfloat r
);

/*
 * Class:      org.ogre4j.GlobalUtility
 * Method:     apx_rsq()
 * Type:       static method
 * Definition: static float Ogre::apx_rsq
 * Signature:  (F)F
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_GlobalUtility__1apx_1rsq_1_1Fv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jfloat r
);

/*
 * Class:      org.ogre4j.GlobalUtility
 * Method:     asm_rand()
 * Type:       static method
 * Definition: static __inline float Ogre::asm_rand
 * Signature:  ()F
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_GlobalUtility__1asm_1rand (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.GlobalUtility
 * Method:     asm_rand_max()
 * Type:       static method
 * Definition: static __inline float Ogre::asm_rand_max
 * Signature:  ()F
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_GlobalUtility__1asm_1rand_1max (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.GlobalUtility
 * Method:     asm_ln()
 * Type:       static method
 * Definition: static float Ogre::asm_ln
 * Signature:  (F)F
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_GlobalUtility__1asm_1ln_1_1Fv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jfloat r
);

/*
 * Class:      org.ogre4j.GlobalUtility
 * Method:     findCommandLineOpts()
 * Type:       static method
 * Definition: static int Ogre::findCommandLineOpts
 * Signature:  (ICOgre_UnaryOptionListOgre_BinaryOptionList)I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_GlobalUtility__1findCommandLineOpts_1_1ivcpUnaryOptionListrBinaryOptionListr (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jint numargs, 
  jlong argv, 
  jlong unaryOptList, 
  jlong binOptList
);

/*
 * Class:      org.ogre4j.GlobalUtility
 * Method:     operator *()
 * Type:       static method
 * Definition: static Radian Ogre::operator *
 * Signature:  (floatOgre_Radian)Ogre_Radian
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_GlobalUtility__1operatorMultiplication_1_1RealvRadianR (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jfloat a, 
  jlong b
);

/*
 * Class:      org.ogre4j.GlobalUtility
 * Method:     operator/()
 * Type:       static method
 * Definition: static Radian Ogre::operator/
 * Signature:  (floatOgre_Radian)Ogre_Radian
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_GlobalUtility__1operatorDivision_1_1RealvRadianR (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jfloat a, 
  jlong b
);

/*
 * Class:      org.ogre4j.GlobalUtility
 * Method:     operator *()
 * Type:       static method
 * Definition: static Degree Ogre::operator *
 * Signature:  (floatOgre_Degree)Ogre_Degree
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_GlobalUtility__1operatorMultiplication_1_1RealvDegreeR (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jfloat a, 
  jlong b
);

/*
 * Class:      org.ogre4j.GlobalUtility
 * Method:     operator/()
 * Type:       static method
 * Definition: static Degree Ogre::operator/
 * Signature:  (floatOgre_Degree)Ogre_Degree
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_GlobalUtility__1operatorDivision_1_1RealvDegreeR (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jfloat a, 
  jlong b
);

/*
 * Class:      org.ogre4j.GlobalUtility
 * Method:     operator *()
 * Type:       static method
 * Definition: static Vector4 Ogre::operator *
 * Signature:  (Ogre_Vector4Ogre_Matrix4)Ogre_Vector4
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_GlobalUtility__1operatorMultiplication_1_1Vector4RMatrix4R (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong v, 
  jlong mat
);

/*
 * Class:      org.ogre4j.GlobalUtility
 * Method:     intersect()
 * Type:       static method
 * Definition: static Rectangle Ogre::intersect
 * Signature:  (Ogre_RectangleOgre_Rectangle)Ogre_Rectangle
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_GlobalUtility__1intersect_1_1RectangleRRectangleR (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong lhs, 
  jlong rhs
);

/*
 * Class:      org.ogre4j.GlobalUtility
 * Method:     operator==()
 * Type:       static method
 * Definition: static bool Ogre::operator==
 * Signature:  (Ogre_ShadowTextureConfigOgre_ShadowTextureConfig)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_GlobalUtility__1operatorEqual_1_1ShadowTextureConfigRShadowTextureConfigR (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong lhs, 
  jlong rhs
);

/*
 * Class:      org.ogre4j.GlobalUtility
 * Method:     operator!=()
 * Type:       static method
 * Definition: static bool Ogre::operator!=
 * Signature:  (Ogre_ShadowTextureConfigOgre_ShadowTextureConfig)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_GlobalUtility__1operatorNotEqual_1_1ShadowTextureConfigRShadowTextureConfigR (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong lhs, 
  jlong rhs
);

/*
 * Class:      org.ogre4j.GlobalUtility
 * Method:     operator-()
 * Type:       static method
 * Definition: static UTFString::size_type Ogre::operator-
 * Signature:  (Ogre_UTFString__const_fwd_iteratorOgre_UTFString__const_fwd_iterator)size_t
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_GlobalUtility__1operatorSubtraction_1_1UTFString_1_1const_1fwd_1iteratorRUTFString_1_1const_1fwd_1iteratorR (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong left, 
  jlong right
);

/*
 * Class:      org.ogre4j.GlobalUtility
 * Method:     operator==()
 * Type:       static method
 * Definition: static bool Ogre::operator==
 * Signature:  (Ogre_UTFString__const_fwd_iteratorOgre_UTFString__const_fwd_iterator)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_GlobalUtility__1operatorEqual_1_1UTFString_1_1const_1fwd_1iteratorRUTFString_1_1const_1fwd_1iteratorR (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong left, 
  jlong right
);

/*
 * Class:      org.ogre4j.GlobalUtility
 * Method:     operator!=()
 * Type:       static method
 * Definition: static bool Ogre::operator!=
 * Signature:  (Ogre_UTFString__const_fwd_iteratorOgre_UTFString__const_fwd_iterator)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_GlobalUtility__1operatorNotEqual_1_1UTFString_1_1const_1fwd_1iteratorRUTFString_1_1const_1fwd_1iteratorR (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong left, 
  jlong right
);

/*
 * Class:      org.ogre4j.GlobalUtility
 * Method:     operator<()
 * Type:       static method
 * Definition: static bool Ogre::operator<
 * Signature:  (Ogre_UTFString__const_fwd_iteratorOgre_UTFString__const_fwd_iterator)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_GlobalUtility__1operatorLessThan_1_1UTFString_1_1const_1fwd_1iteratorRUTFString_1_1const_1fwd_1iteratorR (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong left, 
  jlong right
);

/*
 * Class:      org.ogre4j.GlobalUtility
 * Method:     operator<=()
 * Type:       static method
 * Definition: static bool Ogre::operator<=
 * Signature:  (Ogre_UTFString__const_fwd_iteratorOgre_UTFString__const_fwd_iterator)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_GlobalUtility__1operatorLessThanOrEqual_1_1UTFString_1_1const_1fwd_1iteratorRUTFString_1_1const_1fwd_1iteratorR (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong left, 
  jlong right
);

/*
 * Class:      org.ogre4j.GlobalUtility
 * Method:     operator>()
 * Type:       static method
 * Definition: static bool Ogre::operator>
 * Signature:  (Ogre_UTFString__const_fwd_iteratorOgre_UTFString__const_fwd_iterator)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_GlobalUtility__1operatorGreaterThan_1_1UTFString_1_1const_1fwd_1iteratorRUTFString_1_1const_1fwd_1iteratorR (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong left, 
  jlong right
);

/*
 * Class:      org.ogre4j.GlobalUtility
 * Method:     operator>=()
 * Type:       static method
 * Definition: static bool Ogre::operator>=
 * Signature:  (Ogre_UTFString__const_fwd_iteratorOgre_UTFString__const_fwd_iterator)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_GlobalUtility__1operatorGreaterThanOrEqual_1_1UTFString_1_1const_1fwd_1iteratorRUTFString_1_1const_1fwd_1iteratorR (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong left, 
  jlong right
);

/*
 * Class:      org.ogre4j.GlobalUtility
 * Method:     operator-()
 * Type:       static method
 * Definition: static UTFString::size_type Ogre::operator-
 * Signature:  (Ogre_UTFString__const_rev_iteratorOgre_UTFString__const_rev_iterator)size_t
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_GlobalUtility__1operatorSubtraction_1_1UTFString_1_1const_1rev_1iteratorRUTFString_1_1const_1rev_1iteratorR (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong left, 
  jlong right
);

/*
 * Class:      org.ogre4j.GlobalUtility
 * Method:     operator==()
 * Type:       static method
 * Definition: static bool Ogre::operator==
 * Signature:  (Ogre_UTFString__const_rev_iteratorOgre_UTFString__const_rev_iterator)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_GlobalUtility__1operatorEqual_1_1UTFString_1_1const_1rev_1iteratorRUTFString_1_1const_1rev_1iteratorR (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong left, 
  jlong right
);

/*
 * Class:      org.ogre4j.GlobalUtility
 * Method:     operator!=()
 * Type:       static method
 * Definition: static bool Ogre::operator!=
 * Signature:  (Ogre_UTFString__const_rev_iteratorOgre_UTFString__const_rev_iterator)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_GlobalUtility__1operatorNotEqual_1_1UTFString_1_1const_1rev_1iteratorRUTFString_1_1const_1rev_1iteratorR (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong left, 
  jlong right
);

/*
 * Class:      org.ogre4j.GlobalUtility
 * Method:     operator<()
 * Type:       static method
 * Definition: static bool Ogre::operator<
 * Signature:  (Ogre_UTFString__const_rev_iteratorOgre_UTFString__const_rev_iterator)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_GlobalUtility__1operatorLessThan_1_1UTFString_1_1const_1rev_1iteratorRUTFString_1_1const_1rev_1iteratorR (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong left, 
  jlong right
);

/*
 * Class:      org.ogre4j.GlobalUtility
 * Method:     operator<=()
 * Type:       static method
 * Definition: static bool Ogre::operator<=
 * Signature:  (Ogre_UTFString__const_rev_iteratorOgre_UTFString__const_rev_iterator)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_GlobalUtility__1operatorLessThanOrEqual_1_1UTFString_1_1const_1rev_1iteratorRUTFString_1_1const_1rev_1iteratorR (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong left, 
  jlong right
);

/*
 * Class:      org.ogre4j.GlobalUtility
 * Method:     operator>()
 * Type:       static method
 * Definition: static bool Ogre::operator>
 * Signature:  (Ogre_UTFString__const_rev_iteratorOgre_UTFString__const_rev_iterator)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_GlobalUtility__1operatorGreaterThan_1_1UTFString_1_1const_1rev_1iteratorRUTFString_1_1const_1rev_1iteratorR (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong left, 
  jlong right
);

/*
 * Class:      org.ogre4j.GlobalUtility
 * Method:     operator>=()
 * Type:       static method
 * Definition: static bool Ogre::operator>=
 * Signature:  (Ogre_UTFString__const_rev_iteratorOgre_UTFString__const_rev_iterator)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_GlobalUtility__1operatorGreaterThanOrEqual_1_1UTFString_1_1const_1rev_1iteratorRUTFString_1_1const_1rev_1iteratorR (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong left, 
  jlong right
);

/*
 * Class:      org.ogre4j.GlobalUtility
 * Method:     getpi()
 * Type:       getter for public attribute
 * Definition: static const float Ogre::pi
 * Signature:  ()F
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_GlobalUtility__1getpi (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.GlobalUtility
 * Method:     gethalf_pi()
 * Type:       getter for public attribute
 * Definition: static const float Ogre::half_pi
 * Signature:  ()F
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_GlobalUtility__1gethalf_1pi (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.GlobalUtility
 * Method:     getRENDER_QUEUE_COUNT()
 * Type:       getter for public attribute
 * Definition: static const size_t Ogre::RENDER_QUEUE_COUNT
 * Signature:  ()I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_GlobalUtility__1getRENDER_1QUEUE_1COUNT (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);;;

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif /*__Included_org_ogre4j_GlobalUtility__*/
