///////////////////////////////////////////////////////////////////////////////
/// This source file is generated by XBiG (The XSLT Bindings Generator)
/// For the latest info, see http://sourceforge.net/projects/xbig/
///
/// Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
/// Also see acknowledgements in Readme.html
///
/// This program is free software; you can redistribute it and/or modify it under
/// the terms of the GNU Lesser General Public License as published by the Free Software
/// Foundation; either version 2 of the License, or (at your option) any later
/// version.
///
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
/// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
///
/// You should have received a copy of the GNU Lesser General Public License along with
/// this program; if not, write to the Free Software Foundation, Inc., 59 Temple
/// Place - Suite 330, Boston, MA 02111-1307, USA, or go to
/// http://www.gnu.org/copyleft/lesser.txt.
///
/// Machine generated file
///////////////////////////////////////////////////////////////////////////////



#ifdef WIN32
	// disable warnings
	#pragma warning (disable : 4267) // conversion from 'size_t' to 'jint'
#else

#endif


#ifndef __Included_org_ogre4j_AnimationState__
#define __Included_org_ogre4j_AnimationState__


#include "jni_base.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/*
 * Class:      org.ogre4j.AnimationState
 * Method:     AnimationState()
 * Type:       constructor
 * Definition: Ogre::AnimationState::AnimationState
 * Signature:  (std_stringOgre_AnimationStateSetfloatfloatfloatZ)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_AnimationState__1_1createAnimationState_1_1StringRAnimationStateSetpRealvRealvRealvbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jstring animName, 
  jlong parent, 
  jfloat timePos, 
  jfloat length, 
  jfloat weight, 
  jboolean enabled
);

/*
 * Class:      org.ogre4j.AnimationState
 * Method:     AnimationState()
 * Type:       constructor
 * Definition: Ogre::AnimationState::AnimationState
 * Signature:  (Ogre_AnimationStateSetOgre_AnimationState)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_AnimationState__1_1createAnimationState_1_1AnimationStateSetpAnimationStateR (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong parent, 
  jlong rhs
);

/*
 * Class:      org.ogre4j.AnimationState
 * Method:     getAnimationName()
 * Type:       non-virtual method
 * Definition: const String& Ogre::AnimationState::getAnimationName
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_AnimationState__1getAnimationName_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.AnimationState
 * Method:     getTimePosition()
 * Type:       non-virtual method
 * Definition: Real Ogre::AnimationState::getTimePosition
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_AnimationState__1getTimePosition_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.AnimationState
 * Method:     setTimePosition()
 * Type:       non-virtual method
 * Definition: void Ogre::AnimationState::setTimePosition
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimationState__1setTimePosition_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat timePos
);

/*
 * Class:      org.ogre4j.AnimationState
 * Method:     getLength()
 * Type:       non-virtual method
 * Definition: Real Ogre::AnimationState::getLength
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_AnimationState__1getLength_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.AnimationState
 * Method:     setLength()
 * Type:       non-virtual method
 * Definition: void Ogre::AnimationState::setLength
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimationState__1setLength_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat len
);

/*
 * Class:      org.ogre4j.AnimationState
 * Method:     getWeight()
 * Type:       non-virtual method
 * Definition: Real Ogre::AnimationState::getWeight
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_AnimationState__1getWeight_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.AnimationState
 * Method:     setWeight()
 * Type:       non-virtual method
 * Definition: void Ogre::AnimationState::setWeight
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimationState__1setWeight_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat weight
);

/*
 * Class:      org.ogre4j.AnimationState
 * Method:     addTime()
 * Type:       non-virtual method
 * Definition: void Ogre::AnimationState::addTime
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimationState__1addTime_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat offset
);

/*
 * Class:      org.ogre4j.AnimationState
 * Method:     hasEnded()
 * Type:       non-virtual method
 * Definition: bool Ogre::AnimationState::hasEnded
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_AnimationState__1hasEnded_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.AnimationState
 * Method:     getEnabled()
 * Type:       non-virtual method
 * Definition: bool Ogre::AnimationState::getEnabled
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_AnimationState__1getEnabled_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.AnimationState
 * Method:     setEnabled()
 * Type:       non-virtual method
 * Definition: void Ogre::AnimationState::setEnabled
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimationState__1setEnabled_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean enabled
);

/*
 * Class:      org.ogre4j.AnimationState
 * Method:     operator==()
 * Type:       non-virtual method
 * Definition: bool Ogre::AnimationState::operator==
 * Signature:  (Ogre_AnimationState)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_AnimationState__1operatorEqual_1_1AnimationStateR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong rhs
);

/*
 * Class:      org.ogre4j.AnimationState
 * Method:     operator!=()
 * Type:       non-virtual method
 * Definition: bool Ogre::AnimationState::operator!=
 * Signature:  (Ogre_AnimationState)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_AnimationState__1operatorNotEqual_1_1AnimationStateR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong rhs
);

/*
 * Class:      org.ogre4j.AnimationState
 * Method:     setLoop()
 * Type:       non-virtual method
 * Definition: void Ogre::AnimationState::setLoop
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimationState__1setLoop_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean loop
);

/*
 * Class:      org.ogre4j.AnimationState
 * Method:     getLoop()
 * Type:       non-virtual method
 * Definition: bool Ogre::AnimationState::getLoop
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_AnimationState__1getLoop_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.AnimationState
 * Method:     copyStateFrom()
 * Type:       non-virtual method
 * Definition: void Ogre::AnimationState::copyStateFrom
 * Signature:  (Ogre_AnimationState)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimationState__1copyStateFrom_1_1AnimationStateR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong animState
);

/*
 * Class:      org.ogre4j.AnimationState
 * Method:     getParent()
 * Type:       non-virtual method
 * Definition: AnimationStateSet* Ogre::AnimationState::getParent
 * Signature:  ()Ogre_AnimationStateSet
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_AnimationState__1getParent_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.AnimationState
 * Method:     createBlendMask()
 * Type:       non-virtual method
 * Definition: void Ogre::AnimationState::createBlendMask
 * Signature:  (IF)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimationState__1createBlendMask_1_1ivFv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint blendMaskSizeHint, 
  jfloat initialWeight
);

/*
 * Class:      org.ogre4j.AnimationState
 * Method:     destroyBlendMask()
 * Type:       non-virtual method
 * Definition: void Ogre::AnimationState::destroyBlendMask
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimationState__1destroyBlendMask (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.AnimationState
 * Method:     _setBlendMaskData()
 * Type:       non-virtual method
 * Definition: void Ogre::AnimationState::_setBlendMaskData
 * Signature:  (F)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimationState__1_1setBlendMaskData_1_1FP (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong blendMaskData
);

/*
 * Class:      org.ogre4j.AnimationState
 * Method:     _setBlendMask()
 * Type:       non-virtual method
 * Definition: void Ogre::AnimationState::_setBlendMask
 * Signature:  (Ogre_AnimationState_BoneBlendMask)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimationState__1_1setBlendMask_1_1BoneBlendMaskP (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong blendMask
);

/*
 * Class:      org.ogre4j.AnimationState
 * Method:     getBlendMask()
 * Type:       non-virtual method
 * Definition: const BoneBlendMask* Ogre::AnimationState::getBlendMask
 * Signature:  ()Ogre_AnimationState_BoneBlendMask
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_AnimationState__1getBlendMask_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.AnimationState
 * Method:     hasBlendMask()
 * Type:       non-virtual method
 * Definition: bool Ogre::AnimationState::hasBlendMask
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_AnimationState__1hasBlendMask_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.AnimationState
 * Method:     setBlendMaskEntry()
 * Type:       non-virtual method
 * Definition: void Ogre::AnimationState::setBlendMaskEntry
 * Signature:  (IF)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimationState__1setBlendMaskEntry_1_1ivFv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint boneHandle, 
  jfloat weight
);

/*
 * Class:      org.ogre4j.AnimationState
 * Method:     getBlendMaskEntry()
 * Type:       non-virtual method
 * Definition: float Ogre::AnimationState::getBlendMaskEntry
 * Signature:  (I)F
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_AnimationState__1getBlendMaskEntry_1_1iv_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint boneHandle
);

/*
 * Class:      org.ogre4j.AnimationState
 * Method:     __delete()
 * Type:       destructor
 * Definition: Ogre::AnimationState::__delete
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimationState__1_1delete (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif /*__Included_org_ogre4j_AnimationState__*/
