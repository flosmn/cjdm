///////////////////////////////////////////////////////////////////////////////
/// This source file is generated by XBiG (The XSLT Bindings Generator)
/// For the latest info, see http://sourceforge.net/projects/xbig/
///
/// Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
/// Also see acknowledgements in Readme.html
///
/// This program is free software; you can redistribute it and/or modify it under
/// the terms of the GNU Lesser General Public License as published by the Free Software
/// Foundation; either version 2 of the License, or (at your option) any later
/// version.
///
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
/// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
///
/// You should have received a copy of the GNU Lesser General Public License along with
/// this program; if not, write to the Free Software Foundation, Inc., 59 Temple
/// Place - Suite 330, Boston, MA 02111-1307, USA, or go to
/// http://www.gnu.org/copyleft/lesser.txt.
///
/// Machine generated file
///////////////////////////////////////////////////////////////////////////////



#ifdef WIN32
	// disable warnings
	#pragma warning (disable : 4267) // conversion from 'size_t' to 'jint'
#else

#endif


#ifndef __Included_org_ogre4j_AxisAlignedBox__
#define __Included_org_ogre4j_AxisAlignedBox__


#include "jni_base.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     AxisAlignedBox()
 * Type:       constructor
 * Definition: Ogre::AxisAlignedBox::AxisAlignedBox
 * Signature:  ()V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_AxisAlignedBox__1_1createAxisAlignedBox (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     AxisAlignedBox()
 * Type:       constructor
 * Definition: Ogre::AxisAlignedBox::AxisAlignedBox
 * Signature:  (Ogre_AxisAlignedBox_Extent)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_AxisAlignedBox__1_1createAxisAlignedBox_1_1Extentv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jint e
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     AxisAlignedBox()
 * Type:       constructor
 * Definition: Ogre::AxisAlignedBox::AxisAlignedBox
 * Signature:  (Ogre_AxisAlignedBox)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_AxisAlignedBox__1_1createAxisAlignedBox_1_1AxisAlignedBoxR (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong rkBox
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     AxisAlignedBox()
 * Type:       constructor
 * Definition: Ogre::AxisAlignedBox::AxisAlignedBox
 * Signature:  (Ogre_Vector3Ogre_Vector3)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_AxisAlignedBox__1_1createAxisAlignedBox_1_1Vector3RVector3R (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong _min, 
  jlong _max
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     AxisAlignedBox()
 * Type:       constructor
 * Definition: Ogre::AxisAlignedBox::AxisAlignedBox
 * Signature:  (floatfloatfloatfloatfloatfloat)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_AxisAlignedBox__1_1createAxisAlignedBox_1_1RealvRealvRealvRealvRealvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jfloat mx, 
  jfloat my, 
  jfloat mz, 
  jfloat Mx, 
  jfloat My, 
  jfloat Mz
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     operator=()
 * Type:       non-virtual method
 * Definition: AxisAlignedBox& Ogre::AxisAlignedBox::operator=
 * Signature:  (Ogre_AxisAlignedBox)Ogre_AxisAlignedBox
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_AxisAlignedBox__1operatorAssignment_1_1AxisAlignedBoxR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong rhs
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     getMinimum_const()
 * Type:       non-virtual method
 * Definition: const Vector3& Ogre::AxisAlignedBox::getMinimum
 * Signature:  ()Ogre_Vector3
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_AxisAlignedBox__1getMinimum_1const_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     getMinimum()
 * Type:       non-virtual method
 * Definition: Vector3& Ogre::AxisAlignedBox::getMinimum
 * Signature:  ()Ogre_Vector3
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_AxisAlignedBox__1getMinimum (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     getMaximum_const()
 * Type:       non-virtual method
 * Definition: const Vector3& Ogre::AxisAlignedBox::getMaximum
 * Signature:  ()Ogre_Vector3
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_AxisAlignedBox__1getMaximum_1const_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     getMaximum()
 * Type:       non-virtual method
 * Definition: Vector3& Ogre::AxisAlignedBox::getMaximum
 * Signature:  ()Ogre_Vector3
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_AxisAlignedBox__1getMaximum (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     setMinimum()
 * Type:       non-virtual method
 * Definition: void Ogre::AxisAlignedBox::setMinimum
 * Signature:  (Ogre_Vector3)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AxisAlignedBox__1setMinimum_1_1Vector3R (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong vec
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     setMinimum()
 * Type:       non-virtual method
 * Definition: void Ogre::AxisAlignedBox::setMinimum
 * Signature:  (floatfloatfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AxisAlignedBox__1setMinimum_1_1RealvRealvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat x, 
  jfloat y, 
  jfloat z
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     setMinimumX()
 * Type:       non-virtual method
 * Definition: void Ogre::AxisAlignedBox::setMinimumX
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AxisAlignedBox__1setMinimumX_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat x
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     setMinimumY()
 * Type:       non-virtual method
 * Definition: void Ogre::AxisAlignedBox::setMinimumY
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AxisAlignedBox__1setMinimumY_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat y
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     setMinimumZ()
 * Type:       non-virtual method
 * Definition: void Ogre::AxisAlignedBox::setMinimumZ
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AxisAlignedBox__1setMinimumZ_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat z
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     setMaximum()
 * Type:       non-virtual method
 * Definition: void Ogre::AxisAlignedBox::setMaximum
 * Signature:  (Ogre_Vector3)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AxisAlignedBox__1setMaximum_1_1Vector3R (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong vec
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     setMaximum()
 * Type:       non-virtual method
 * Definition: void Ogre::AxisAlignedBox::setMaximum
 * Signature:  (floatfloatfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AxisAlignedBox__1setMaximum_1_1RealvRealvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat x, 
  jfloat y, 
  jfloat z
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     setMaximumX()
 * Type:       non-virtual method
 * Definition: void Ogre::AxisAlignedBox::setMaximumX
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AxisAlignedBox__1setMaximumX_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat x
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     setMaximumY()
 * Type:       non-virtual method
 * Definition: void Ogre::AxisAlignedBox::setMaximumY
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AxisAlignedBox__1setMaximumY_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat y
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     setMaximumZ()
 * Type:       non-virtual method
 * Definition: void Ogre::AxisAlignedBox::setMaximumZ
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AxisAlignedBox__1setMaximumZ_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat z
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     setExtents()
 * Type:       non-virtual method
 * Definition: void Ogre::AxisAlignedBox::setExtents
 * Signature:  (Ogre_Vector3Ogre_Vector3)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AxisAlignedBox__1setExtents_1_1Vector3RVector3R (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong _min, 
  jlong _max
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     setExtents()
 * Type:       non-virtual method
 * Definition: void Ogre::AxisAlignedBox::setExtents
 * Signature:  (floatfloatfloatfloatfloatfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AxisAlignedBox__1setExtents_1_1RealvRealvRealvRealvRealvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat mx, 
  jfloat my, 
  jfloat mz, 
  jfloat Mx, 
  jfloat My, 
  jfloat Mz
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     getAllCorners()
 * Type:       non-virtual method
 * Definition: const Vector3* Ogre::AxisAlignedBox::getAllCorners
 * Signature:  ()Ogre_Vector3
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_AxisAlignedBox__1getAllCorners_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     getCorner()
 * Type:       non-virtual method
 * Definition: Vector3 Ogre::AxisAlignedBox::getCorner
 * Signature:  (Ogre_AxisAlignedBox_CornerEnum)Ogre_Vector3
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_AxisAlignedBox__1getCorner_1_1CornerEnumv_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint cornerToGet
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     merge()
 * Type:       non-virtual method
 * Definition: void Ogre::AxisAlignedBox::merge
 * Signature:  (Ogre_AxisAlignedBox)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AxisAlignedBox__1merge_1_1AxisAlignedBoxR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong rhs
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     merge()
 * Type:       non-virtual method
 * Definition: void Ogre::AxisAlignedBox::merge
 * Signature:  (Ogre_Vector3)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AxisAlignedBox__1merge_1_1Vector3R (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong point
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     transform()
 * Type:       non-virtual method
 * Definition: void Ogre::AxisAlignedBox::transform
 * Signature:  (Ogre_Matrix4)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AxisAlignedBox__1transform_1_1Matrix4R (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong matrix
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     transformAffine()
 * Type:       non-virtual method
 * Definition: void Ogre::AxisAlignedBox::transformAffine
 * Signature:  (Ogre_Matrix4)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AxisAlignedBox__1transformAffine_1_1Matrix4R (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong m
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     setNull()
 * Type:       non-virtual method
 * Definition: void Ogre::AxisAlignedBox::setNull
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AxisAlignedBox__1setNull (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     isNull()
 * Type:       non-virtual method
 * Definition: bool Ogre::AxisAlignedBox::isNull
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_AxisAlignedBox__1isNull_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     isFinite()
 * Type:       non-virtual method
 * Definition: bool Ogre::AxisAlignedBox::isFinite
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_AxisAlignedBox__1isFinite_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     setInfinite()
 * Type:       non-virtual method
 * Definition: void Ogre::AxisAlignedBox::setInfinite
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AxisAlignedBox__1setInfinite (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     isInfinite()
 * Type:       non-virtual method
 * Definition: bool Ogre::AxisAlignedBox::isInfinite
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_AxisAlignedBox__1isInfinite_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     intersects()
 * Type:       non-virtual method
 * Definition: bool Ogre::AxisAlignedBox::intersects
 * Signature:  (Ogre_AxisAlignedBox)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_AxisAlignedBox__1intersects_1_1AxisAlignedBoxR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong b2
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     intersection()
 * Type:       non-virtual method
 * Definition: AxisAlignedBox Ogre::AxisAlignedBox::intersection
 * Signature:  (Ogre_AxisAlignedBox)Ogre_AxisAlignedBox
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_AxisAlignedBox__1intersection_1_1AxisAlignedBoxR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong b2
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     volume()
 * Type:       non-virtual method
 * Definition: Real Ogre::AxisAlignedBox::volume
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_AxisAlignedBox__1volume_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     scale()
 * Type:       non-virtual method
 * Definition: void Ogre::AxisAlignedBox::scale
 * Signature:  (Ogre_Vector3)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AxisAlignedBox__1scale_1_1Vector3R (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong s
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     intersects()
 * Type:       non-virtual method
 * Definition: bool Ogre::AxisAlignedBox::intersects
 * Signature:  (Ogre_Sphere)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_AxisAlignedBox__1intersects_1_1SphereR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong s
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     intersects()
 * Type:       non-virtual method
 * Definition: bool Ogre::AxisAlignedBox::intersects
 * Signature:  (Ogre_Plane)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_AxisAlignedBox__1intersects_1_1PlaneR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong p
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     intersects()
 * Type:       non-virtual method
 * Definition: bool Ogre::AxisAlignedBox::intersects
 * Signature:  (Ogre_Vector3)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_AxisAlignedBox__1intersects_1_1Vector3R_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong v
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     getCenter()
 * Type:       non-virtual method
 * Definition: Vector3 Ogre::AxisAlignedBox::getCenter
 * Signature:  ()Ogre_Vector3
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_AxisAlignedBox__1getCenter_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     getSize()
 * Type:       non-virtual method
 * Definition: Vector3 Ogre::AxisAlignedBox::getSize
 * Signature:  ()Ogre_Vector3
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_AxisAlignedBox__1getSize_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     getHalfSize()
 * Type:       non-virtual method
 * Definition: Vector3 Ogre::AxisAlignedBox::getHalfSize
 * Signature:  ()Ogre_Vector3
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_AxisAlignedBox__1getHalfSize_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     contains()
 * Type:       non-virtual method
 * Definition: bool Ogre::AxisAlignedBox::contains
 * Signature:  (Ogre_Vector3)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_AxisAlignedBox__1contains_1_1Vector3R_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong v
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     contains()
 * Type:       non-virtual method
 * Definition: bool Ogre::AxisAlignedBox::contains
 * Signature:  (Ogre_AxisAlignedBox)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_AxisAlignedBox__1contains_1_1AxisAlignedBoxR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong other
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     operator==()
 * Type:       non-virtual method
 * Definition: bool Ogre::AxisAlignedBox::operator==
 * Signature:  (Ogre_AxisAlignedBox)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_AxisAlignedBox__1operatorEqual_1_1AxisAlignedBoxR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong rhs
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     operator!=()
 * Type:       non-virtual method
 * Definition: bool Ogre::AxisAlignedBox::operator!=
 * Signature:  (Ogre_AxisAlignedBox)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_AxisAlignedBox__1operatorNotEqual_1_1AxisAlignedBoxR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong rhs
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     __delete()
 * Type:       destructor
 * Definition: Ogre::AxisAlignedBox::__delete
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AxisAlignedBox__1_1delete (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     getBOX_NULL()
 * Type:       getter for public attribute
 * Definition: const AxisAlignedBox Ogre::AxisAlignedBox::BOX_NULL
 * Signature:  ()Ogre_AxisAlignedBox
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_AxisAlignedBox__1getBOX_1NULL (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.AxisAlignedBox
 * Method:     getBOX_INFINITE()
 * Type:       getter for public attribute
 * Definition: const AxisAlignedBox Ogre::AxisAlignedBox::BOX_INFINITE
 * Signature:  ()Ogre_AxisAlignedBox
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_AxisAlignedBox__1getBOX_1INFINITE (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif /*__Included_org_ogre4j_AxisAlignedBox__*/
