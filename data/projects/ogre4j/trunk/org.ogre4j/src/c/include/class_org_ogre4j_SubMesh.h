///////////////////////////////////////////////////////////////////////////////
/// This source file is generated by XBiG (The XSLT Bindings Generator)
/// For the latest info, see http://sourceforge.net/projects/xbig/
///
/// Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
/// Also see acknowledgements in Readme.html
///
/// This program is free software; you can redistribute it and/or modify it under
/// the terms of the GNU Lesser General Public License as published by the Free Software
/// Foundation; either version 2 of the License, or (at your option) any later
/// version.
///
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
/// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
///
/// You should have received a copy of the GNU Lesser General Public License along with
/// this program; if not, write to the Free Software Foundation, Inc., 59 Temple
/// Place - Suite 330, Boston, MA 02111-1307, USA, or go to
/// http://www.gnu.org/copyleft/lesser.txt.
///
/// Machine generated file
///////////////////////////////////////////////////////////////////////////////



#ifdef WIN32
	// disable warnings
	#pragma warning (disable : 4267) // conversion from 'size_t' to 'jint'
#else

#endif


#ifndef __Included_org_ogre4j_SubMesh__
#define __Included_org_ogre4j_SubMesh__


#include "jni_base.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/*
 * Class:      org.ogre4j.SubMesh
 * Method:     SubMesh()
 * Type:       constructor
 * Definition: Ogre::SubMesh::SubMesh
 * Signature:  ()V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_SubMesh__1_1createSubMesh (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.SubMesh
 * Method:     setMaterialName()
 * Type:       non-virtual method
 * Definition: void Ogre::SubMesh::setMaterialName
 * Signature:  (std_string)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_SubMesh__1setMaterialName_1_1StringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring matName
);

/*
 * Class:      org.ogre4j.SubMesh
 * Method:     getMaterialName()
 * Type:       non-virtual method
 * Definition: const String& Ogre::SubMesh::getMaterialName
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_SubMesh__1getMaterialName_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.SubMesh
 * Method:     isMatInitialised()
 * Type:       non-virtual method
 * Definition: bool Ogre::SubMesh::isMatInitialised
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_SubMesh__1isMatInitialised_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.SubMesh
 * Method:     _getRenderOperation()
 * Type:       non-virtual method
 * Definition: void Ogre::SubMesh::_getRenderOperation
 * Signature:  (Ogre_RenderOperationunsigned_short)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_SubMesh__1_1getRenderOperation_1_1RenderOperationrushortv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong rend, 
  jint lodIndex
);

/*
 * Class:      org.ogre4j.SubMesh
 * Method:     addBoneAssignment()
 * Type:       non-virtual method
 * Definition: void Ogre::SubMesh::addBoneAssignment
 * Signature:  (Ogre_VertexBoneAssignment_s)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_SubMesh__1addBoneAssignment_1_1VertexBoneAssignmentR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong vertBoneAssign
);

/*
 * Class:      org.ogre4j.SubMesh
 * Method:     clearBoneAssignments()
 * Type:       non-virtual method
 * Definition: void Ogre::SubMesh::clearBoneAssignments
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_SubMesh__1clearBoneAssignments (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.SubMesh
 * Method:     getBoneAssignmentIterator()
 * Type:       non-virtual method
 * Definition: BoneAssignmentIterator Ogre::SubMesh::getBoneAssignmentIterator
 * Signature:  ()Ogre_SubMesh_BoneAssignmentIterator
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_SubMesh__1getBoneAssignmentIterator (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.SubMesh
 * Method:     getBoneAssignments()
 * Type:       non-virtual method
 * Definition: const VertexBoneAssignmentList& Ogre::SubMesh::getBoneAssignments
 * Signature:  ()Ogre_SubMesh_VertexBoneAssignmentList
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_SubMesh__1getBoneAssignments (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.SubMesh
 * Method:     _compileBoneAssignments()
 * Type:       non-virtual method
 * Definition: void Ogre::SubMesh::_compileBoneAssignments
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_SubMesh__1_1compileBoneAssignments (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.SubMesh
 * Method:     getAliasTextureIterator()
 * Type:       non-virtual method
 * Definition: AliasTextureIterator Ogre::SubMesh::getAliasTextureIterator
 * Signature:  ()Ogre_SubMesh_AliasTextureIterator
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_SubMesh__1getAliasTextureIterator_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.SubMesh
 * Method:     addTextureAlias()
 * Type:       non-virtual method
 * Definition: void Ogre::SubMesh::addTextureAlias
 * Signature:  (std_stringstd_string)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_SubMesh__1addTextureAlias_1_1StringRStringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring aliasName, 
  jstring textureName
);

/*
 * Class:      org.ogre4j.SubMesh
 * Method:     removeTextureAlias()
 * Type:       non-virtual method
 * Definition: void Ogre::SubMesh::removeTextureAlias
 * Signature:  (std_string)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_SubMesh__1removeTextureAlias_1_1StringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring aliasName
);

/*
 * Class:      org.ogre4j.SubMesh
 * Method:     removeAllTextureAliases()
 * Type:       non-virtual method
 * Definition: void Ogre::SubMesh::removeAllTextureAliases
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_SubMesh__1removeAllTextureAliases (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.SubMesh
 * Method:     hasTextureAliases()
 * Type:       non-virtual method
 * Definition: bool Ogre::SubMesh::hasTextureAliases
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_SubMesh__1hasTextureAliases_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.SubMesh
 * Method:     getTextureAliasCount()
 * Type:       non-virtual method
 * Definition: size_t Ogre::SubMesh::getTextureAliasCount
 * Signature:  ()I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_SubMesh__1getTextureAliasCount_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.SubMesh
 * Method:     updateMaterialUsingTextureAliases()
 * Type:       non-virtual method
 * Definition: bool Ogre::SubMesh::updateMaterialUsingTextureAliases
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_SubMesh__1updateMaterialUsingTextureAliases (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.SubMesh
 * Method:     getVertexAnimationType()
 * Type:       non-virtual method
 * Definition: VertexAnimationType Ogre::SubMesh::getVertexAnimationType
 * Signature:  ()Ogre_VertexAnimationType
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_SubMesh__1getVertexAnimationType_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.SubMesh
 * Method:     generateExtremes()
 * Type:       non-virtual method
 * Definition: void Ogre::SubMesh::generateExtremes
 * Signature:  (I)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_SubMesh__1generateExtremes_1_1iv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint count
);

/*
 * Class:      org.ogre4j.SubMesh
 * Method:     isBuildEdgesEnabled()
 * Type:       non-virtual method
 * Definition: bool Ogre::SubMesh::isBuildEdgesEnabled
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_SubMesh__1isBuildEdgesEnabled_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.SubMesh
 * Method:     setBuildEdgesEnabled()
 * Type:       non-virtual method
 * Definition: void Ogre::SubMesh::setBuildEdgesEnabled
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_SubMesh__1setBuildEdgesEnabled_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean b
);

/*
 * Class:      org.ogre4j.SubMesh
 * Method:     __delete()
 * Type:       destructor
 * Definition: Ogre::SubMesh::__delete
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_SubMesh__1_1delete (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.SubMesh
 * Method:     getuseSharedVertices()
 * Type:       getter for public attribute
 * Definition: bool Ogre::SubMesh::useSharedVertices
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_SubMesh__1getuseSharedVertices (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.SubMesh
 * Method:     setuseSharedVertices()
 * Type:       setter for public attribute
 * Definition: bool Ogre::SubMesh::useSharedVertices
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_SubMesh__1setuseSharedVertices (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean _jni_value_
);

/*
 * Class:      org.ogre4j.SubMesh
 * Method:     getoperationType()
 * Type:       getter for public attribute
 * Definition: RenderOperation::OperationType Ogre::SubMesh::operationType
 * Signature:  ()Ogre_RenderOperation_OperationType
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_SubMesh__1getoperationType (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.SubMesh
 * Method:     setoperationType()
 * Type:       setter for public attribute
 * Definition: RenderOperation::OperationType Ogre::SubMesh::operationType
 * Signature:  (Ogre_RenderOperation_OperationType)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_SubMesh__1setoperationType (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint _jni_value_
);

/*
 * Class:      org.ogre4j.SubMesh
 * Method:     getvertexData()
 * Type:       getter for public attribute
 * Definition: VertexData* Ogre::SubMesh::vertexData
 * Signature:  ()Ogre_VertexData
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_SubMesh__1getvertexData (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.SubMesh
 * Method:     setvertexData()
 * Type:       setter for public attribute
 * Definition: VertexData* Ogre::SubMesh::vertexData
 * Signature:  (Ogre_VertexData)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_SubMesh__1setvertexData (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong _jni_value_
);

/*
 * Class:      org.ogre4j.SubMesh
 * Method:     getindexData()
 * Type:       getter for public attribute
 * Definition: IndexData* Ogre::SubMesh::indexData
 * Signature:  ()Ogre_IndexData
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_SubMesh__1getindexData (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.SubMesh
 * Method:     setindexData()
 * Type:       setter for public attribute
 * Definition: IndexData* Ogre::SubMesh::indexData
 * Signature:  (Ogre_IndexData)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_SubMesh__1setindexData (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong _jni_value_
);

/*
 * Class:      org.ogre4j.SubMesh
 * Method:     getblendIndexToBoneIndexMap()
 * Type:       getter for public attribute
 * Definition: IndexMap Ogre::SubMesh::blendIndexToBoneIndexMap
 * Signature:  ()Ogre_SubMesh_IndexMap
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_SubMesh__1getblendIndexToBoneIndexMap (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.SubMesh
 * Method:     setblendIndexToBoneIndexMap()
 * Type:       setter for public attribute
 * Definition: IndexMap Ogre::SubMesh::blendIndexToBoneIndexMap
 * Signature:  (Ogre_SubMesh_IndexMap)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_SubMesh__1setblendIndexToBoneIndexMap (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong _jni_value_
);

/*
 * Class:      org.ogre4j.SubMesh
 * Method:     getmLodFaceList()
 * Type:       getter for public attribute
 * Definition: ProgressiveMesh::LODFaceList Ogre::SubMesh::mLodFaceList
 * Signature:  ()Ogre_ProgressiveMesh_LODFaceList
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_SubMesh__1getmLodFaceList (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.SubMesh
 * Method:     setmLodFaceList()
 * Type:       setter for public attribute
 * Definition: ProgressiveMesh::LODFaceList Ogre::SubMesh::mLodFaceList
 * Signature:  (Ogre_ProgressiveMesh_LODFaceList)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_SubMesh__1setmLodFaceList (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong _jni_value_
);

/*
 * Class:      org.ogre4j.SubMesh
 * Method:     getextremityPoints()
 * Type:       getter for public attribute
 * Definition: std::vector<Vector3> Ogre::SubMesh::extremityPoints
 * Signature:  ()std_vector__Vector3__
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_SubMesh__1getextremityPoints (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.SubMesh
 * Method:     setextremityPoints()
 * Type:       setter for public attribute
 * Definition: std::vector<Vector3> Ogre::SubMesh::extremityPoints
 * Signature:  (std_vector__Vector3__)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_SubMesh__1setextremityPoints (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong _jni_value_
);

/*
 * Class:      org.ogre4j.SubMesh
 * Method:     getparent()
 * Type:       getter for public attribute
 * Definition: Mesh* Ogre::SubMesh::parent
 * Signature:  ()Ogre_Mesh
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_SubMesh__1getparent (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.SubMesh
 * Method:     setparent()
 * Type:       setter for public attribute
 * Definition: Mesh* Ogre::SubMesh::parent
 * Signature:  (Ogre_Mesh)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_SubMesh__1setparent (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong _jni_value_
);

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif /*__Included_org_ogre4j_SubMesh__*/
