///////////////////////////////////////////////////////////////////////////////
/// This source file is generated by XBiG (The XSLT Bindings Generator)
/// For the latest info, see http://sourceforge.net/projects/xbig/
///
/// Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
/// Also see acknowledgements in Readme.html
///
/// This program is free software; you can redistribute it and/or modify it under
/// the terms of the GNU Lesser General Public License as published by the Free Software
/// Foundation; either version 2 of the License, or (at your option) any later
/// version.
///
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
/// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
///
/// You should have received a copy of the GNU Lesser General Public License along with
/// this program; if not, write to the Free Software Foundation, Inc., 59 Temple
/// Place - Suite 330, Boston, MA 02111-1307, USA, or go to
/// http://www.gnu.org/copyleft/lesser.txt.
///
/// Machine generated file
///////////////////////////////////////////////////////////////////////////////



#ifdef WIN32
	// disable warnings
	#pragma warning (disable : 4267) // conversion from 'size_t' to 'jint'
#else

#endif


#ifndef __Included_org_ogre4j_StaticGeometry__
#define __Included_org_ogre4j_StaticGeometry__


#include "jni_base.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/*
 * Class:      org.ogre4j.StaticGeometry
 * Method:     StaticGeometry()
 * Type:       constructor
 * Definition: Ogre::StaticGeometry::StaticGeometry
 * Signature:  (Ogre_SceneManagerstd_string)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_StaticGeometry__1_1createStaticGeometry_1_1SceneManagerpStringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong owner, 
  jstring name
);

/*
 * Class:      org.ogre4j.StaticGeometry
 * Method:     getName()
 * Type:       non-virtual method
 * Definition: const String& Ogre::StaticGeometry::getName
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_StaticGeometry__1getName_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.StaticGeometry
 * Method:     addEntity()
 * Type:       virtual method
 * Definition: virtual void Ogre::StaticGeometry::addEntity
 * Signature:  (Ogre_EntityOgre_Vector3Ogre_QuaternionOgre_Vector3)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_StaticGeometry__1addEntity_1_1EntitypVector3RQuaternionRVector3R (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong ent, 
  jlong position, 
  jlong orientation, 
  jlong scale
);

/*
 * Class:      org.ogre4j.StaticGeometry
 * Method:     addSceneNode()
 * Type:       virtual method
 * Definition: virtual void Ogre::StaticGeometry::addSceneNode
 * Signature:  (Ogre_SceneNode)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_StaticGeometry__1addSceneNode_1_1SceneNodeP (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong node
);

/*
 * Class:      org.ogre4j.StaticGeometry
 * Method:     build()
 * Type:       virtual method
 * Definition: virtual void Ogre::StaticGeometry::build
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_StaticGeometry__1build (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.StaticGeometry
 * Method:     destroy()
 * Type:       virtual method
 * Definition: virtual void Ogre::StaticGeometry::destroy
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_StaticGeometry__1destroy (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.StaticGeometry
 * Method:     reset()
 * Type:       virtual method
 * Definition: virtual void Ogre::StaticGeometry::reset
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_StaticGeometry__1reset (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.StaticGeometry
 * Method:     setRenderingDistance()
 * Type:       virtual method
 * Definition: virtual void Ogre::StaticGeometry::setRenderingDistance
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_StaticGeometry__1setRenderingDistance_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat dist
);

/*
 * Class:      org.ogre4j.StaticGeometry
 * Method:     getRenderingDistance()
 * Type:       virtual method
 * Definition: virtual Real Ogre::StaticGeometry::getRenderingDistance
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_StaticGeometry__1getRenderingDistance_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.StaticGeometry
 * Method:     getSquaredRenderingDistance()
 * Type:       virtual method
 * Definition: virtual Real Ogre::StaticGeometry::getSquaredRenderingDistance
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_StaticGeometry__1getSquaredRenderingDistance_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.StaticGeometry
 * Method:     setVisible()
 * Type:       virtual method
 * Definition: virtual void Ogre::StaticGeometry::setVisible
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_StaticGeometry__1setVisible_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean visible
);

/*
 * Class:      org.ogre4j.StaticGeometry
 * Method:     isVisible()
 * Type:       virtual method
 * Definition: virtual bool Ogre::StaticGeometry::isVisible
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_StaticGeometry__1isVisible_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.StaticGeometry
 * Method:     setCastShadows()
 * Type:       virtual method
 * Definition: virtual void Ogre::StaticGeometry::setCastShadows
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_StaticGeometry__1setCastShadows_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean castShadows
);

/*
 * Class:      org.ogre4j.StaticGeometry
 * Method:     getCastShadows()
 * Type:       virtual method
 * Definition: virtual bool Ogre::StaticGeometry::getCastShadows
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_StaticGeometry__1getCastShadows (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.StaticGeometry
 * Method:     setRegionDimensions()
 * Type:       virtual method
 * Definition: virtual void Ogre::StaticGeometry::setRegionDimensions
 * Signature:  (Ogre_Vector3)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_StaticGeometry__1setRegionDimensions_1_1Vector3R (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong size
);

/*
 * Class:      org.ogre4j.StaticGeometry
 * Method:     getRegionDimensions()
 * Type:       virtual method
 * Definition: virtual const Vector3& Ogre::StaticGeometry::getRegionDimensions
 * Signature:  ()Ogre_Vector3
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_StaticGeometry__1getRegionDimensions_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.StaticGeometry
 * Method:     setOrigin()
 * Type:       virtual method
 * Definition: virtual void Ogre::StaticGeometry::setOrigin
 * Signature:  (Ogre_Vector3)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_StaticGeometry__1setOrigin_1_1Vector3R (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong origin
);

/*
 * Class:      org.ogre4j.StaticGeometry
 * Method:     getOrigin()
 * Type:       virtual method
 * Definition: virtual const Vector3& Ogre::StaticGeometry::getOrigin
 * Signature:  ()Ogre_Vector3
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_StaticGeometry__1getOrigin_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.StaticGeometry
 * Method:     setRenderQueueGroup()
 * Type:       virtual method
 * Definition: virtual void Ogre::StaticGeometry::setRenderQueueGroup
 * Signature:  (unsigned_char)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_StaticGeometry__1setRenderQueueGroup_1_1uint8v (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jshort queueID
);

/*
 * Class:      org.ogre4j.StaticGeometry
 * Method:     getRenderQueueGroup()
 * Type:       virtual method
 * Definition: virtual uint8 Ogre::StaticGeometry::getRenderQueueGroup
 * Signature:  ()unsigned_char
 */

JNIEXPORT jshort JNICALL Java_org_ogre4j_StaticGeometry__1getRenderQueueGroup_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.StaticGeometry
 * Method:     visitRenderables()
 * Type:       non-virtual method
 * Definition: void Ogre::StaticGeometry::visitRenderables
 * Signature:  (Ogre_Renderable_VisitorZ)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_StaticGeometry__1visitRenderables_1_1Renderable_1Visitorpbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong visitor, 
  jboolean debugRenderables
);

/*
 * Class:      org.ogre4j.StaticGeometry
 * Method:     getRegionIterator()
 * Type:       non-virtual method
 * Definition: RegionIterator Ogre::StaticGeometry::getRegionIterator
 * Signature:  ()Ogre_StaticGeometry_RegionIterator
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_StaticGeometry__1getRegionIterator (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.StaticGeometry
 * Method:     dump()
 * Type:       virtual method
 * Definition: virtual void Ogre::StaticGeometry::dump
 * Signature:  (std_string)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_StaticGeometry__1dump_1_1StringR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring filename
);

/*
 * Class:      org.ogre4j.StaticGeometry
 * Method:     __delete()
 * Type:       destructor
 * Definition: Ogre::StaticGeometry::__delete
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_StaticGeometry__1_1delete (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif /*__Included_org_ogre4j_StaticGeometry__*/
