///////////////////////////////////////////////////////////////////////////////
/// This source file is generated by XBiG (The XSLT Bindings Generator)
/// For the latest info, see http://sourceforge.net/projects/xbig/
///
/// Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
/// Also see acknowledgements in Readme.html
///
/// This program is free software; you can redistribute it and/or modify it under
/// the terms of the GNU Lesser General Public License as published by the Free Software
/// Foundation; either version 2 of the License, or (at your option) any later
/// version.
///
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
/// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
///
/// You should have received a copy of the GNU Lesser General Public License along with
/// this program; if not, write to the Free Software Foundation, Inc., 59 Temple
/// Place - Suite 330, Boston, MA 02111-1307, USA, or go to
/// http://www.gnu.org/copyleft/lesser.txt.
///
/// Machine generated file
///////////////////////////////////////////////////////////////////////////////



#ifdef WIN32
	// disable warnings
	#pragma warning (disable : 4267) // conversion from 'size_t' to 'jint'
#else

#endif


#ifndef __Included_org_ogre4j_PixelUtil__
#define __Included_org_ogre4j_PixelUtil__


#include "jni_base.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/*
 * Class:      org.ogre4j.PixelUtil
 * Method:     getNumElemBytes()
 * Type:       static method
 * Definition: static size_t Ogre::PixelUtil::getNumElemBytes
 * Signature:  (Ogre_PixelFormat)I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_PixelUtil__1getNumElemBytes_1_1PixelFormatv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jint format
);

/*
 * Class:      org.ogre4j.PixelUtil
 * Method:     getNumElemBits()
 * Type:       static method
 * Definition: static size_t Ogre::PixelUtil::getNumElemBits
 * Signature:  (Ogre_PixelFormat)I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_PixelUtil__1getNumElemBits_1_1PixelFormatv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jint format
);

/*
 * Class:      org.ogre4j.PixelUtil
 * Method:     getMemorySize()
 * Type:       static method
 * Definition: static size_t Ogre::PixelUtil::getMemorySize
 * Signature:  (IIIOgre_PixelFormat)I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_PixelUtil__1getMemorySize_1_1ivivivPixelFormatv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jint width, 
  jint height, 
  jint depth, 
  jint format
);

/*
 * Class:      org.ogre4j.PixelUtil
 * Method:     getFlags()
 * Type:       static method
 * Definition: static unsigned int Ogre::PixelUtil::getFlags
 * Signature:  (Ogre_PixelFormat)I
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_PixelUtil__1getFlags_1_1PixelFormatv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jint format
);

/*
 * Class:      org.ogre4j.PixelUtil
 * Method:     hasAlpha()
 * Type:       static method
 * Definition: static bool Ogre::PixelUtil::hasAlpha
 * Signature:  (Ogre_PixelFormat)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_PixelUtil__1hasAlpha_1_1PixelFormatv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jint format
);

/*
 * Class:      org.ogre4j.PixelUtil
 * Method:     isFloatingPoint()
 * Type:       static method
 * Definition: static bool Ogre::PixelUtil::isFloatingPoint
 * Signature:  (Ogre_PixelFormat)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_PixelUtil__1isFloatingPoint_1_1PixelFormatv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jint format
);

/*
 * Class:      org.ogre4j.PixelUtil
 * Method:     isCompressed()
 * Type:       static method
 * Definition: static bool Ogre::PixelUtil::isCompressed
 * Signature:  (Ogre_PixelFormat)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_PixelUtil__1isCompressed_1_1PixelFormatv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jint format
);

/*
 * Class:      org.ogre4j.PixelUtil
 * Method:     isDepth()
 * Type:       static method
 * Definition: static bool Ogre::PixelUtil::isDepth
 * Signature:  (Ogre_PixelFormat)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_PixelUtil__1isDepth_1_1PixelFormatv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jint format
);

/*
 * Class:      org.ogre4j.PixelUtil
 * Method:     isNativeEndian()
 * Type:       static method
 * Definition: static bool Ogre::PixelUtil::isNativeEndian
 * Signature:  (Ogre_PixelFormat)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_PixelUtil__1isNativeEndian_1_1PixelFormatv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jint format
);

/*
 * Class:      org.ogre4j.PixelUtil
 * Method:     isLuminance()
 * Type:       static method
 * Definition: static bool Ogre::PixelUtil::isLuminance
 * Signature:  (Ogre_PixelFormat)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_PixelUtil__1isLuminance_1_1PixelFormatv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jint format
);

/*
 * Class:      org.ogre4j.PixelUtil
 * Method:     isValidExtent()
 * Type:       static method
 * Definition: static bool Ogre::PixelUtil::isValidExtent
 * Signature:  (IIIOgre_PixelFormat)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_PixelUtil__1isValidExtent_1_1ivivivPixelFormatv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jint width, 
  jint height, 
  jint depth, 
  jint format
);;;

/*
 * Class:      org.ogre4j.PixelUtil
 * Method:     getFormatName()
 * Type:       static method
 * Definition: static String Ogre::PixelUtil::getFormatName
 * Signature:  (Ogre_PixelFormat)std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_PixelUtil__1getFormatName_1_1PixelFormatv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jint srcformat
);

/*
 * Class:      org.ogre4j.PixelUtil
 * Method:     isAccessible()
 * Type:       static method
 * Definition: static bool Ogre::PixelUtil::isAccessible
 * Signature:  (Ogre_PixelFormat)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_PixelUtil__1isAccessible_1_1PixelFormatv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jint srcformat
);

/*
 * Class:      org.ogre4j.PixelUtil
 * Method:     getComponentType()
 * Type:       static method
 * Definition: static PixelComponentType Ogre::PixelUtil::getComponentType
 * Signature:  (Ogre_PixelFormat)Ogre_PixelComponentType
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_PixelUtil__1getComponentType_1_1PixelFormatv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jint fmt
);

/*
 * Class:      org.ogre4j.PixelUtil
 * Method:     getComponentCount()
 * Type:       static method
 * Definition: static size_t Ogre::PixelUtil::getComponentCount
 * Signature:  (Ogre_PixelFormat)I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_PixelUtil__1getComponentCount_1_1PixelFormatv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jint fmt
);

/*
 * Class:      org.ogre4j.PixelUtil
 * Method:     getFormatFromName()
 * Type:       static method
 * Definition: static PixelFormat Ogre::PixelUtil::getFormatFromName
 * Signature:  (std_stringZZ)Ogre_PixelFormat
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_PixelUtil__1getFormatFromName_1_1StringRbvbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jstring name, 
  jboolean accessibleOnly, 
  jboolean caseSensitive
);

/*
 * Class:      org.ogre4j.PixelUtil
 * Method:     getBNFExpressionOfPixelFormats()
 * Type:       static method
 * Definition: static String Ogre::PixelUtil::getBNFExpressionOfPixelFormats
 * Signature:  (Z)std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_PixelUtil__1getBNFExpressionOfPixelFormats_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jboolean accessibleOnly
);

/*
 * Class:      org.ogre4j.PixelUtil
 * Method:     getFormatForBitDepths()
 * Type:       static method
 * Definition: static PixelFormat Ogre::PixelUtil::getFormatForBitDepths
 * Signature:  (Ogre_PixelFormatunsigned_shortunsigned_short)Ogre_PixelFormat
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_PixelUtil__1getFormatForBitDepths_1_1PixelFormatvushortvushortv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jint fmt, 
  jint integerBits, 
  jint floatBits
);

/*
 * Class:      org.ogre4j.PixelUtil
 * Method:     packColour()
 * Type:       static method
 * Definition: static void Ogre::PixelUtil::packColour
 * Signature:  (Ogre_ColourValueOgre_PixelFormatV)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_PixelUtil__1packColour_1_1ColourValueRPixelFormatVvp (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong colour, 
  jint pf, 
  jlong dest
);

/*
 * Class:      org.ogre4j.PixelUtil
 * Method:     packColour()
 * Type:       static method
 * Definition: static void Ogre::PixelUtil::packColour
 * Signature:  (unsigned_charunsigned_charunsigned_charunsigned_charOgre_PixelFormatV)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_PixelUtil__1packColour_1_1uint8Vuint8Vuint8Vuint8VPixelFormatVvp (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jshort r, 
  jshort g, 
  jshort b, 
  jshort a, 
  jint pf, 
  jlong dest
);

/*
 * Class:      org.ogre4j.PixelUtil
 * Method:     packColour()
 * Type:       static method
 * Definition: static void Ogre::PixelUtil::packColour
 * Signature:  (FFFFOgre_PixelFormatV)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_PixelUtil__1packColour_1_1FVFVFVFVPixelFormatVvp (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jfloat r, 
  jfloat g, 
  jfloat b, 
  jfloat a, 
  jint pf, 
  jlong dest
);

/*
 * Class:      org.ogre4j.PixelUtil
 * Method:     unpackColour()
 * Type:       static method
 * Definition: static void Ogre::PixelUtil::unpackColour
 * Signature:  (Ogre_ColourValueOgre_PixelFormatV)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_PixelUtil__1unpackColour_1_1ColourValuepPixelFormatvvP (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong colour, 
  jint pf, 
  jlong src
);

/*
 * Class:      org.ogre4j.PixelUtil
 * Method:     unpackColour()
 * Type:       static method
 * Definition: static void Ogre::PixelUtil::unpackColour
 * Signature:  (unsigned_charunsigned_charunsigned_charunsigned_charOgre_PixelFormatV)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_PixelUtil__1unpackColour_1_1uint8puint8puint8puint8pPixelFormatvvP (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong r, 
  jlong g, 
  jlong b, 
  jlong a, 
  jint pf, 
  jlong src
);

/*
 * Class:      org.ogre4j.PixelUtil
 * Method:     unpackColour()
 * Type:       static method
 * Definition: static void Ogre::PixelUtil::unpackColour
 * Signature:  (FFFFOgre_PixelFormatV)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_PixelUtil__1unpackColour_1_1FpFpFpFpPixelFormatvvP (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong r, 
  jlong g, 
  jlong b, 
  jlong a, 
  jint pf, 
  jlong src
);

/*
 * Class:      org.ogre4j.PixelUtil
 * Method:     bulkPixelConversion()
 * Type:       static method
 * Definition: static void Ogre::PixelUtil::bulkPixelConversion
 * Signature:  (VOgre_PixelFormatVOgre_PixelFormatI)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_PixelUtil__1bulkPixelConversion_1_1vpPixelFormatvvpPixelFormatvIv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong src, 
  jint srcFormat, 
  jlong dest, 
  jint dstFormat, 
  jlong count
);

/*
 * Class:      org.ogre4j.PixelUtil
 * Method:     bulkPixelConversion()
 * Type:       static method
 * Definition: static void Ogre::PixelUtil::bulkPixelConversion
 * Signature:  (Ogre_PixelBoxOgre_PixelBox)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_PixelUtil__1bulkPixelConversion_1_1PixelBoxRPixelBoxR (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong src, 
  jlong dst
);

/*
 * Class:      org.ogre4j.PixelUtil
 * Method:     PixelUtil()
 * Type:       constructor
 * Definition: Ogre::PixelUtil::PixelUtil
 * Signature:  ()V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_PixelUtil__1_1createPixelUtil (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.PixelUtil
 * Method:     __delete()
 * Type:       destructor
 * Definition: Ogre::PixelUtil::__delete
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_PixelUtil__1_1delete (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif /*__Included_org_ogre4j_PixelUtil__*/
