///////////////////////////////////////////////////////////////////////////////
/// This source file is generated by XBiG (The XSLT Bindings Generator)
/// For the latest info, see http://sourceforge.net/projects/xbig/
///
/// Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
/// Also see acknowledgements in Readme.html
///
/// This program is free software; you can redistribute it and/or modify it under
/// the terms of the GNU Lesser General Public License as published by the Free Software
/// Foundation; either version 2 of the License, or (at your option) any later
/// version.
///
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
/// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
///
/// You should have received a copy of the GNU Lesser General Public License along with
/// this program; if not, write to the Free Software Foundation, Inc., 59 Temple
/// Place - Suite 330, Boston, MA 02111-1307, USA, or go to
/// http://www.gnu.org/copyleft/lesser.txt.
///
/// Machine generated file
///////////////////////////////////////////////////////////////////////////////



#ifdef WIN32
	// disable warnings
	#pragma warning (disable : 4267) // conversion from 'size_t' to 'jint'
#else

#endif


#ifndef __Included_org_ogre4j_ConvexBody__
#define __Included_org_ogre4j_ConvexBody__


#include "jni_base.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/*
 * Class:      org.ogre4j.ConvexBody
 * Method:     ConvexBody()
 * Type:       constructor
 * Definition: Ogre::ConvexBody::ConvexBody
 * Signature:  ()V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ConvexBody__1_1createConvexBody (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.ConvexBody
 * Method:     ConvexBody()
 * Type:       constructor
 * Definition: Ogre::ConvexBody::ConvexBody
 * Signature:  (Ogre_ConvexBody)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ConvexBody__1_1createConvexBody_1_1ConvexBodyR (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong cpy
);

/*
 * Class:      org.ogre4j.ConvexBody
 * Method:     define()
 * Type:       non-virtual method
 * Definition: void Ogre::ConvexBody::define
 * Signature:  (Ogre_Frustum)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ConvexBody__1define_1_1FrustumR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong frustum
);

/*
 * Class:      org.ogre4j.ConvexBody
 * Method:     define()
 * Type:       non-virtual method
 * Definition: void Ogre::ConvexBody::define
 * Signature:  (Ogre_AxisAlignedBox)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ConvexBody__1define_1_1AxisAlignedBoxR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong aab
);

/*
 * Class:      org.ogre4j.ConvexBody
 * Method:     clip()
 * Type:       non-virtual method
 * Definition: void Ogre::ConvexBody::clip
 * Signature:  (Ogre_Frustum)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ConvexBody__1clip_1_1FrustumR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong frustum
);

/*
 * Class:      org.ogre4j.ConvexBody
 * Method:     clip()
 * Type:       non-virtual method
 * Definition: void Ogre::ConvexBody::clip
 * Signature:  (Ogre_AxisAlignedBox)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ConvexBody__1clip_1_1AxisAlignedBoxR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong aab
);

/*
 * Class:      org.ogre4j.ConvexBody
 * Method:     clip()
 * Type:       non-virtual method
 * Definition: void Ogre::ConvexBody::clip
 * Signature:  (Ogre_ConvexBody)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ConvexBody__1clip_1_1ConvexBodyR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong body
);

/*
 * Class:      org.ogre4j.ConvexBody
 * Method:     clip()
 * Type:       non-virtual method
 * Definition: void Ogre::ConvexBody::clip
 * Signature:  (Ogre_PlaneZ)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ConvexBody__1clip_1_1PlaneRbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong pl, 
  jboolean keepNegative
);

/*
 * Class:      org.ogre4j.ConvexBody
 * Method:     extend()
 * Type:       non-virtual method
 * Definition: void Ogre::ConvexBody::extend
 * Signature:  (Ogre_Vector3)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ConvexBody__1extend_1_1Vector3R (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong pt
);

/*
 * Class:      org.ogre4j.ConvexBody
 * Method:     reset()
 * Type:       non-virtual method
 * Definition: void Ogre::ConvexBody::reset
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ConvexBody__1reset (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ConvexBody
 * Method:     getPolygonCount()
 * Type:       non-virtual method
 * Definition: size_t Ogre::ConvexBody::getPolygonCount
 * Signature:  ()I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_ConvexBody__1getPolygonCount_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ConvexBody
 * Method:     getVertexCount()
 * Type:       non-virtual method
 * Definition: size_t Ogre::ConvexBody::getVertexCount
 * Signature:  (I)I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_ConvexBody__1getVertexCount_1_1iv_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint poly
);

/*
 * Class:      org.ogre4j.ConvexBody
 * Method:     getPolygon()
 * Type:       non-virtual method
 * Definition: const Polygon& Ogre::ConvexBody::getPolygon
 * Signature:  (I)Ogre_Polygon
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ConvexBody__1getPolygon_1_1iv_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint poly
);

/*
 * Class:      org.ogre4j.ConvexBody
 * Method:     getVertex()
 * Type:       non-virtual method
 * Definition: const Vector3& Ogre::ConvexBody::getVertex
 * Signature:  (II)Ogre_Vector3
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ConvexBody__1getVertex_1_1iviv_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint poly, 
  jint vertex
);

/*
 * Class:      org.ogre4j.ConvexBody
 * Method:     getNormal()
 * Type:       non-virtual method
 * Definition: const Vector3& Ogre::ConvexBody::getNormal
 * Signature:  (I)Ogre_Vector3
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ConvexBody__1getNormal_1_1iv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint poly
);

/*
 * Class:      org.ogre4j.ConvexBody
 * Method:     getAABB()
 * Type:       non-virtual method
 * Definition: AxisAlignedBox Ogre::ConvexBody::getAABB
 * Signature:  ()Ogre_AxisAlignedBox
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ConvexBody__1getAABB_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ConvexBody
 * Method:     hasClosedHull()
 * Type:       non-virtual method
 * Definition: bool Ogre::ConvexBody::hasClosedHull
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_ConvexBody__1hasClosedHull_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ConvexBody
 * Method:     mergePolygons()
 * Type:       non-virtual method
 * Definition: void Ogre::ConvexBody::mergePolygons
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ConvexBody__1mergePolygons (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ConvexBody
 * Method:     operator==()
 * Type:       non-virtual method
 * Definition: bool Ogre::ConvexBody::operator==
 * Signature:  (Ogre_ConvexBody)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_ConvexBody__1operatorEqual_1_1ConvexBodyR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong rhs
);

/*
 * Class:      org.ogre4j.ConvexBody
 * Method:     operator!=()
 * Type:       non-virtual method
 * Definition: bool Ogre::ConvexBody::operator!=
 * Signature:  (Ogre_ConvexBody)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_ConvexBody__1operatorNotEqual_1_1ConvexBodyR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong rhs
);

/*
 * Class:      org.ogre4j.ConvexBody
 * Method:     logInfo()
 * Type:       non-virtual method
 * Definition: void Ogre::ConvexBody::logInfo
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ConvexBody__1logInfo_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ConvexBody
 * Method:     _initialisePool()
 * Type:       static method
 * Definition: static void Ogre::ConvexBody::_initialisePool
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ConvexBody__1_1initialisePool (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.ConvexBody
 * Method:     _destroyPool()
 * Type:       static method
 * Definition: static void Ogre::ConvexBody::_destroyPool
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ConvexBody__1_1destroyPool (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.ConvexBody
 * Method:     __delete()
 * Type:       destructor
 * Definition: Ogre::ConvexBody::__delete
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ConvexBody__1_1delete (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif /*__Included_org_ogre4j_ConvexBody__*/
