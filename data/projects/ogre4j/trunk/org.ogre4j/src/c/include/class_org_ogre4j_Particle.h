///////////////////////////////////////////////////////////////////////////////
/// This source file is generated by XBiG (The XSLT Bindings Generator)
/// For the latest info, see http://sourceforge.net/projects/xbig/
///
/// Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
/// Also see acknowledgements in Readme.html
///
/// This program is free software; you can redistribute it and/or modify it under
/// the terms of the GNU Lesser General Public License as published by the Free Software
/// Foundation; either version 2 of the License, or (at your option) any later
/// version.
///
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
/// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
///
/// You should have received a copy of the GNU Lesser General Public License along with
/// this program; if not, write to the Free Software Foundation, Inc., 59 Temple
/// Place - Suite 330, Boston, MA 02111-1307, USA, or go to
/// http://www.gnu.org/copyleft/lesser.txt.
///
/// Machine generated file
///////////////////////////////////////////////////////////////////////////////



#ifdef WIN32
	// disable warnings
	#pragma warning (disable : 4267) // conversion from 'size_t' to 'jint'
#else

#endif


#ifndef __Included_org_ogre4j_Particle__
#define __Included_org_ogre4j_Particle__


#include "jni_base.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/*
 * Class:      org.ogre4j.Particle
 * Method:     Particle()
 * Type:       constructor
 * Definition: Ogre::Particle::Particle
 * Signature:  ()V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Particle__1_1createParticle (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.Particle
 * Method:     setDimensions()
 * Type:       non-virtual method
 * Definition: void Ogre::Particle::setDimensions
 * Signature:  (floatfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_Particle__1setDimensions_1_1RealvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat width, 
  jfloat height
);

/*
 * Class:      org.ogre4j.Particle
 * Method:     hasOwnDimensions()
 * Type:       non-virtual method
 * Definition: bool Ogre::Particle::hasOwnDimensions
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_Particle__1hasOwnDimensions_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.Particle
 * Method:     getOwnWidth()
 * Type:       non-virtual method
 * Definition: Real Ogre::Particle::getOwnWidth
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_Particle__1getOwnWidth_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.Particle
 * Method:     getOwnHeight()
 * Type:       non-virtual method
 * Definition: Real Ogre::Particle::getOwnHeight
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_Particle__1getOwnHeight_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.Particle
 * Method:     setRotation()
 * Type:       non-virtual method
 * Definition: void Ogre::Particle::setRotation
 * Signature:  (Ogre_Radian)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_Particle__1setRotation_1_1RadianR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong rad
);

/*
 * Class:      org.ogre4j.Particle
 * Method:     getRotation()
 * Type:       non-virtual method
 * Definition: const Radian& Ogre::Particle::getRotation
 * Signature:  ()Ogre_Radian
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Particle__1getRotation_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.Particle
 * Method:     _notifyOwner()
 * Type:       non-virtual method
 * Definition: void Ogre::Particle::_notifyOwner
 * Signature:  (Ogre_ParticleSystem)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_Particle__1_1notifyOwner_1_1ParticleSystemp (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong owner
);

/*
 * Class:      org.ogre4j.Particle
 * Method:     _notifyVisualData()
 * Type:       non-virtual method
 * Definition: void Ogre::Particle::_notifyVisualData
 * Signature:  (Ogre_ParticleVisualData)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_Particle__1_1notifyVisualData_1_1ParticleVisualDatap (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong vis
);

/*
 * Class:      org.ogre4j.Particle
 * Method:     getVisualData()
 * Type:       non-virtual method
 * Definition: ParticleVisualData* Ogre::Particle::getVisualData
 * Signature:  ()Ogre_ParticleVisualData
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Particle__1getVisualData_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.Particle
 * Method:     resetDimensions()
 * Type:       non-virtual method
 * Definition: void Ogre::Particle::resetDimensions
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_Particle__1resetDimensions (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.Particle
 * Method:     __delete()
 * Type:       destructor
 * Definition: Ogre::Particle::__delete
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_Particle__1_1delete (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.Particle
 * Method:     getmOwnDimensions()
 * Type:       getter for public attribute
 * Definition: bool Ogre::Particle::mOwnDimensions
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_Particle__1getmOwnDimensions (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.Particle
 * Method:     setmOwnDimensions()
 * Type:       setter for public attribute
 * Definition: bool Ogre::Particle::mOwnDimensions
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_Particle__1setmOwnDimensions (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean _jni_value_
);

/*
 * Class:      org.ogre4j.Particle
 * Method:     getmWidth()
 * Type:       getter for public attribute
 * Definition: Real Ogre::Particle::mWidth
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_Particle__1getmWidth (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.Particle
 * Method:     setmWidth()
 * Type:       setter for public attribute
 * Definition: Real Ogre::Particle::mWidth
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_Particle__1setmWidth (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat _jni_value_
);

/*
 * Class:      org.ogre4j.Particle
 * Method:     getmHeight()
 * Type:       getter for public attribute
 * Definition: Real Ogre::Particle::mHeight
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_Particle__1getmHeight (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.Particle
 * Method:     setmHeight()
 * Type:       setter for public attribute
 * Definition: Real Ogre::Particle::mHeight
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_Particle__1setmHeight (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat _jni_value_
);

/*
 * Class:      org.ogre4j.Particle
 * Method:     getrotation()
 * Type:       getter for public attribute
 * Definition: Radian Ogre::Particle::rotation
 * Signature:  ()Ogre_Radian
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Particle__1getrotation (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.Particle
 * Method:     setrotation()
 * Type:       setter for public attribute
 * Definition: Radian Ogre::Particle::rotation
 * Signature:  (Ogre_Radian)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_Particle__1setrotation (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong _jni_value_
);

/*
 * Class:      org.ogre4j.Particle
 * Method:     getposition()
 * Type:       getter for public attribute
 * Definition: Vector3 Ogre::Particle::position
 * Signature:  ()Ogre_Vector3
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Particle__1getposition (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.Particle
 * Method:     setposition()
 * Type:       setter for public attribute
 * Definition: Vector3 Ogre::Particle::position
 * Signature:  (Ogre_Vector3)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_Particle__1setposition (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong _jni_value_
);

/*
 * Class:      org.ogre4j.Particle
 * Method:     getdirection()
 * Type:       getter for public attribute
 * Definition: Vector3 Ogre::Particle::direction
 * Signature:  ()Ogre_Vector3
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Particle__1getdirection (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.Particle
 * Method:     setdirection()
 * Type:       setter for public attribute
 * Definition: Vector3 Ogre::Particle::direction
 * Signature:  (Ogre_Vector3)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_Particle__1setdirection (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong _jni_value_
);

/*
 * Class:      org.ogre4j.Particle
 * Method:     getcolour()
 * Type:       getter for public attribute
 * Definition: ColourValue Ogre::Particle::colour
 * Signature:  ()Ogre_ColourValue
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Particle__1getcolour (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.Particle
 * Method:     setcolour()
 * Type:       setter for public attribute
 * Definition: ColourValue Ogre::Particle::colour
 * Signature:  (Ogre_ColourValue)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_Particle__1setcolour (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong _jni_value_
);

/*
 * Class:      org.ogre4j.Particle
 * Method:     gettimeToLive()
 * Type:       getter for public attribute
 * Definition: Real Ogre::Particle::timeToLive
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_Particle__1gettimeToLive (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.Particle
 * Method:     settimeToLive()
 * Type:       setter for public attribute
 * Definition: Real Ogre::Particle::timeToLive
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_Particle__1settimeToLive (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat _jni_value_
);

/*
 * Class:      org.ogre4j.Particle
 * Method:     gettotalTimeToLive()
 * Type:       getter for public attribute
 * Definition: Real Ogre::Particle::totalTimeToLive
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_Particle__1gettotalTimeToLive (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.Particle
 * Method:     settotalTimeToLive()
 * Type:       setter for public attribute
 * Definition: Real Ogre::Particle::totalTimeToLive
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_Particle__1settotalTimeToLive (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat _jni_value_
);

/*
 * Class:      org.ogre4j.Particle
 * Method:     getrotationSpeed()
 * Type:       getter for public attribute
 * Definition: Radian Ogre::Particle::rotationSpeed
 * Signature:  ()Ogre_Radian
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Particle__1getrotationSpeed (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.Particle
 * Method:     setrotationSpeed()
 * Type:       setter for public attribute
 * Definition: Radian Ogre::Particle::rotationSpeed
 * Signature:  (Ogre_Radian)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_Particle__1setrotationSpeed (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong _jni_value_
);

/*
 * Class:      org.ogre4j.Particle
 * Method:     getparticleType()
 * Type:       getter for public attribute
 * Definition: ParticleType Ogre::Particle::particleType
 * Signature:  ()Ogre_Particle_ParticleType
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_Particle__1getparticleType (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.Particle
 * Method:     setparticleType()
 * Type:       setter for public attribute
 * Definition: ParticleType Ogre::Particle::particleType
 * Signature:  (Ogre_Particle_ParticleType)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_Particle__1setparticleType (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint _jni_value_
);

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif /*__Included_org_ogre4j_Particle__*/
