///////////////////////////////////////////////////////////////////////////////
/// This source file is generated by XBiG (The XSLT Bindings Generator)
/// For the latest info, see http://sourceforge.net/projects/xbig/
///
/// Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
/// Also see acknowledgements in Readme.html
///
/// This program is free software; you can redistribute it and/or modify it under
/// the terms of the GNU Lesser General Public License as published by the Free Software
/// Foundation; either version 2 of the License, or (at your option) any later
/// version.
///
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
/// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
///
/// You should have received a copy of the GNU Lesser General Public License along with
/// this program; if not, write to the Free Software Foundation, Inc., 59 Temple
/// Place - Suite 330, Boston, MA 02111-1307, USA, or go to
/// http://www.gnu.org/copyleft/lesser.txt.
///
/// Machine generated file
///////////////////////////////////////////////////////////////////////////////



#ifdef WIN32
	// disable warnings
	#pragma warning (disable : 4267) // conversion from 'size_t' to 'jint'
#else

#endif


#ifndef __Included_org_ogre4j_GpuProgramManager__
#define __Included_org_ogre4j_GpuProgramManager__


#include "jni_base.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     load()
 * Type:       virtual method
 * Definition: virtual GpuProgramPtr Ogre::GpuProgramManager::load
 * Signature:  (std_stringstd_stringstd_stringOgre_GpuProgramTypestd_string)Ogre_GpuProgramPtr
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_GpuProgramManager__1load_1_1StringRStringRStringRGpuProgramTypevStringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name, 
  jstring groupName, 
  jstring filename, 
  jint gptype, 
  jstring syntaxCode
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     loadFromString()
 * Type:       virtual method
 * Definition: virtual GpuProgramPtr Ogre::GpuProgramManager::loadFromString
 * Signature:  (std_stringstd_stringstd_stringOgre_GpuProgramTypestd_string)Ogre_GpuProgramPtr
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_GpuProgramManager__1loadFromString_1_1StringRStringRStringRGpuProgramTypevStringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name, 
  jstring groupName, 
  jstring code, 
  jint gptype, 
  jstring syntaxCode
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     getSupportedSyntax()
 * Type:       virtual method
 * Definition: virtual const SyntaxCodes& Ogre::GpuProgramManager::getSupportedSyntax
 * Signature:  ()Ogre_GpuProgramManager_SyntaxCodes
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_GpuProgramManager__1getSupportedSyntax_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     isSyntaxSupported()
 * Type:       virtual method
 * Definition: virtual bool Ogre::GpuProgramManager::isSyntaxSupported
 * Signature:  (std_string)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_GpuProgramManager__1isSyntaxSupported_1_1StringR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring syntaxCode
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     createParameters()
 * Type:       virtual method
 * Definition: virtual GpuProgramParametersSharedPtr Ogre::GpuProgramManager::createParameters
 * Signature:  ()Ogre_GpuProgramParametersSharedPtr
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_GpuProgramManager__1createParameters (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     createProgram()
 * Type:       virtual method
 * Definition: virtual GpuProgramPtr Ogre::GpuProgramManager::createProgram
 * Signature:  (std_stringstd_stringstd_stringOgre_GpuProgramTypestd_string)Ogre_GpuProgramPtr
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_GpuProgramManager__1createProgram_1_1StringRStringRStringRGpuProgramTypevStringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name, 
  jstring groupName, 
  jstring filename, 
  jint gptype, 
  jstring syntaxCode
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     createProgramFromString()
 * Type:       virtual method
 * Definition: virtual GpuProgramPtr Ogre::GpuProgramManager::createProgramFromString
 * Signature:  (std_stringstd_stringstd_stringOgre_GpuProgramTypestd_string)Ogre_GpuProgramPtr
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_GpuProgramManager__1createProgramFromString_1_1StringRStringRStringRGpuProgramTypevStringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name, 
  jstring groupName, 
  jstring code, 
  jint gptype, 
  jstring syntaxCode
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     create()
 * Type:       virtual method
 * Definition: virtual ResourcePtr Ogre::GpuProgramManager::create
 * Signature:  (std_stringstd_stringOgre_GpuProgramTypestd_stringZOgre_ManualResourceLoader)Ogre_ResourcePtr
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_GpuProgramManager__1create_1_1StringRStringRGpuProgramTypevStringRbvManualResourceLoaderp (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name, 
  jstring group, 
  jint gptype, 
  jstring syntaxCode, 
  jboolean isManual, 
  jlong loader
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     getByName()
 * Type:       non-virtual method
 * Definition: ResourcePtr Ogre::GpuProgramManager::getByName
 * Signature:  (std_stringZ)Ogre_ResourcePtr
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_GpuProgramManager__1getByName_1_1StringRbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name, 
  jboolean preferHighLevelPrograms
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     getSingleton()
 * Type:       static method
 * Definition: static GpuProgramManager& Ogre::GpuProgramManager::getSingleton
 * Signature:  ()Ogre_GpuProgramManager
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_GpuProgramManager__1getSingleton (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     getSingletonPtr()
 * Type:       static method
 * Definition: static GpuProgramManager* Ogre::GpuProgramManager::getSingletonPtr
 * Signature:  ()Ogre_GpuProgramManager
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_GpuProgramManager__1getSingletonPtr (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     create()
 * Type:       virtual method
 * Definition: virtual ResourcePtr Ogre::ResourceManager::create
 * Signature:  (std_stringstd_stringZOgre_ManualResourceLoaderOgre_NameValuePairList)Ogre_ResourcePtr
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_GpuProgramManager__1create_1_1StringRStringRbvManualResourceLoaderpNameValuePairListP (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name, 
  jstring group, 
  jboolean isManual, 
  jlong loader, 
  jlong createParams
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     createOrRetrieve()
 * Type:       virtual method
 * Definition: virtual ResourceCreateOrRetrieveResult Ogre::ResourceManager::createOrRetrieve
 * Signature:  (std_stringstd_stringZOgre_ManualResourceLoaderOgre_NameValuePairList)Ogre_ResourceManager_ResourceCreateOrRetrieveResult
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_GpuProgramManager__1createOrRetrieve_1_1StringRStringRbvManualResourceLoaderpNameValuePairListP (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name, 
  jstring group, 
  jboolean isManual, 
  jlong loader, 
  jlong createParams
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     setMemoryBudget()
 * Type:       virtual method
 * Definition: virtual void Ogre::ResourceManager::setMemoryBudget
 * Signature:  (I)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_GpuProgramManager__1setMemoryBudget_1_1iv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint bytes
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     getMemoryBudget()
 * Type:       virtual method
 * Definition: virtual size_t Ogre::ResourceManager::getMemoryBudget
 * Signature:  ()I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_GpuProgramManager__1getMemoryBudget_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     getMemoryUsage()
 * Type:       virtual method
 * Definition: virtual size_t Ogre::ResourceManager::getMemoryUsage
 * Signature:  ()I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_GpuProgramManager__1getMemoryUsage_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     unload()
 * Type:       virtual method
 * Definition: virtual void Ogre::ResourceManager::unload
 * Signature:  (std_string)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_GpuProgramManager__1unload_1_1StringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     unload()
 * Type:       virtual method
 * Definition: virtual void Ogre::ResourceManager::unload
 * Signature:  (unsigned_long)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_GpuProgramManager__1unload_1_1ResourceHandlev (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong handle
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     unloadAll()
 * Type:       virtual method
 * Definition: virtual void Ogre::ResourceManager::unloadAll
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_GpuProgramManager__1unloadAll_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean reloadableOnly
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     reloadAll()
 * Type:       virtual method
 * Definition: virtual void Ogre::ResourceManager::reloadAll
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_GpuProgramManager__1reloadAll_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean reloadableOnly
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     unloadUnreferencedResources()
 * Type:       virtual method
 * Definition: virtual void Ogre::ResourceManager::unloadUnreferencedResources
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_GpuProgramManager__1unloadUnreferencedResources_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean reloadableOnly
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     reloadUnreferencedResources()
 * Type:       virtual method
 * Definition: virtual void Ogre::ResourceManager::reloadUnreferencedResources
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_GpuProgramManager__1reloadUnreferencedResources_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean reloadableOnly
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     remove()
 * Type:       virtual method
 * Definition: virtual void Ogre::ResourceManager::remove
 * Signature:  (Ogre_ResourcePtr)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_GpuProgramManager__1remove_1_1ResourcePtrr (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong r
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     remove()
 * Type:       virtual method
 * Definition: virtual void Ogre::ResourceManager::remove
 * Signature:  (std_string)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_GpuProgramManager__1remove_1_1StringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     remove()
 * Type:       virtual method
 * Definition: virtual void Ogre::ResourceManager::remove
 * Signature:  (unsigned_long)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_GpuProgramManager__1remove_1_1ResourceHandlev (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong handle
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     removeAll()
 * Type:       virtual method
 * Definition: virtual void Ogre::ResourceManager::removeAll
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_GpuProgramManager__1removeAll (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     getByName()
 * Type:       virtual method
 * Definition: virtual ResourcePtr Ogre::ResourceManager::getByName
 * Signature:  (std_string)Ogre_ResourcePtr
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_GpuProgramManager__1getByName_1_1StringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     getByHandle()
 * Type:       virtual method
 * Definition: virtual ResourcePtr Ogre::ResourceManager::getByHandle
 * Signature:  (unsigned_long)Ogre_ResourcePtr
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_GpuProgramManager__1getByHandle_1_1ResourceHandlev (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong handle
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     resourceExists()
 * Type:       virtual method
 * Definition: virtual bool Ogre::ResourceManager::resourceExists
 * Signature:  (std_string)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_GpuProgramManager__1resourceExists_1_1StringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     resourceExists()
 * Type:       virtual method
 * Definition: virtual bool Ogre::ResourceManager::resourceExists
 * Signature:  (unsigned_long)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_GpuProgramManager__1resourceExists_1_1ResourceHandlev (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong handle
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     _notifyResourceTouched()
 * Type:       virtual method
 * Definition: virtual void Ogre::ResourceManager::_notifyResourceTouched
 * Signature:  (Ogre_Resource)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_GpuProgramManager__1_1notifyResourceTouched_1_1Resourcep (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong res
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     _notifyResourceLoaded()
 * Type:       virtual method
 * Definition: virtual void Ogre::ResourceManager::_notifyResourceLoaded
 * Signature:  (Ogre_Resource)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_GpuProgramManager__1_1notifyResourceLoaded_1_1Resourcep (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong res
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     _notifyResourceUnloaded()
 * Type:       virtual method
 * Definition: virtual void Ogre::ResourceManager::_notifyResourceUnloaded
 * Signature:  (Ogre_Resource)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_GpuProgramManager__1_1notifyResourceUnloaded_1_1Resourcep (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong res
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     prepare()
 * Type:       virtual method
 * Definition: virtual ResourcePtr Ogre::ResourceManager::prepare
 * Signature:  (std_stringstd_stringZOgre_ManualResourceLoaderOgre_NameValuePairList)Ogre_ResourcePtr
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_GpuProgramManager__1prepare_1_1StringRStringRbvManualResourceLoaderpNameValuePairListP (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name, 
  jstring group, 
  jboolean isManual, 
  jlong loader, 
  jlong loadParams
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     load()
 * Type:       virtual method
 * Definition: virtual ResourcePtr Ogre::ResourceManager::load
 * Signature:  (std_stringstd_stringZOgre_ManualResourceLoaderOgre_NameValuePairList)Ogre_ResourcePtr
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_GpuProgramManager__1load_1_1StringRStringRbvManualResourceLoaderpNameValuePairListP (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name, 
  jstring group, 
  jboolean isManual, 
  jlong loader, 
  jlong loadParams
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     getScriptPatterns()
 * Type:       virtual method
 * Definition: virtual const StringVector& Ogre::ResourceManager::getScriptPatterns
 * Signature:  ()Ogre_StringVector
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_GpuProgramManager__1getScriptPatterns_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     parseScript()
 * Type:       virtual method
 * Definition: virtual void Ogre::ResourceManager::parseScript
 * Signature:  (Ogre_DataStreamPtrstd_string)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_GpuProgramManager__1parseScript_1_1DataStreamPtrrStringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong stream, 
  jstring groupName
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     getLoadingOrder()
 * Type:       virtual method
 * Definition: virtual Real Ogre::ResourceManager::getLoadingOrder
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_GpuProgramManager__1getLoadingOrder_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     getResourceType()
 * Type:       non-virtual method
 * Definition: const String& Ogre::ResourceManager::getResourceType
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_GpuProgramManager__1getResourceType_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     setVerbose()
 * Type:       virtual method
 * Definition: virtual void Ogre::ResourceManager::setVerbose
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_GpuProgramManager__1setVerbose_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean v
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     getVerbose()
 * Type:       virtual method
 * Definition: virtual bool Ogre::ResourceManager::getVerbose
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_GpuProgramManager__1getVerbose (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     getResourceIterator()
 * Type:       non-virtual method
 * Definition: ResourceMapIterator Ogre::ResourceManager::getResourceIterator
 * Signature:  ()Ogre_ResourceManager_ResourceMapIterator
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_GpuProgramManager__1getResourceIterator (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.GpuProgramManager
 * Method:     __delete()
 * Type:       destructor
 * Definition: Ogre::GpuProgramManager::__delete
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_GpuProgramManager__1_1delete (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif /*__Included_org_ogre4j_GpuProgramManager__*/
