///////////////////////////////////////////////////////////////////////////////
/// This source file is generated by XBiG (The XSLT Bindings Generator)
/// For the latest info, see http://sourceforge.net/projects/xbig/
///
/// Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
/// Also see acknowledgements in Readme.html
///
/// This program is free software; you can redistribute it and/or modify it under
/// the terms of the GNU Lesser General Public License as published by the Free Software
/// Foundation; either version 2 of the License, or (at your option) any later
/// version.
///
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
/// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
///
/// You should have received a copy of the GNU Lesser General Public License along with
/// this program; if not, write to the Free Software Foundation, Inc., 59 Temple
/// Place - Suite 330, Boston, MA 02111-1307, USA, or go to
/// http://www.gnu.org/copyleft/lesser.txt.
///
/// Machine generated file
///////////////////////////////////////////////////////////////////////////////



#ifdef WIN32
	// disable warnings
	#pragma warning (disable : 4267) // conversion from 'size_t' to 'jint'
#else

#endif


#ifndef __Included_org_ogre4j_ColourValue__
#define __Included_org_ogre4j_ColourValue__


#include "jni_base.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     ColourValue()
 * Type:       constructor
 * Definition: Ogre::ColourValue::ColourValue
 * Signature:  (FFFF)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ColourValue__1_1createColourValue_1_1FvFvFvFv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jfloat red, 
  jfloat green, 
  jfloat blue, 
  jfloat alpha
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     operator==()
 * Type:       non-virtual method
 * Definition: bool Ogre::ColourValue::operator==
 * Signature:  (Ogre_ColourValue)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_ColourValue__1operatorEqual_1_1ColourValueR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong rhs
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     operator!=()
 * Type:       non-virtual method
 * Definition: bool Ogre::ColourValue::operator!=
 * Signature:  (Ogre_ColourValue)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_ColourValue__1operatorNotEqual_1_1ColourValueR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong rhs
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     getAsRGBA()
 * Type:       non-virtual method
 * Definition: RGBA Ogre::ColourValue::getAsRGBA
 * Signature:  ()unsigned_int
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ColourValue__1getAsRGBA_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     getAsARGB()
 * Type:       non-virtual method
 * Definition: ARGB Ogre::ColourValue::getAsARGB
 * Signature:  ()unsigned_int
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ColourValue__1getAsARGB_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     getAsBGRA()
 * Type:       non-virtual method
 * Definition: BGRA Ogre::ColourValue::getAsBGRA
 * Signature:  ()unsigned_int
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ColourValue__1getAsBGRA_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     getAsABGR()
 * Type:       non-virtual method
 * Definition: ABGR Ogre::ColourValue::getAsABGR
 * Signature:  ()unsigned_int
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ColourValue__1getAsABGR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     setAsRGBA()
 * Type:       non-virtual method
 * Definition: void Ogre::ColourValue::setAsRGBA
 * Signature:  (unsigned_int)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ColourValue__1setAsRGBA_1_1RGBAV (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong val
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     setAsARGB()
 * Type:       non-virtual method
 * Definition: void Ogre::ColourValue::setAsARGB
 * Signature:  (unsigned_int)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ColourValue__1setAsARGB_1_1ARGBV (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong val
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     setAsBGRA()
 * Type:       non-virtual method
 * Definition: void Ogre::ColourValue::setAsBGRA
 * Signature:  (unsigned_int)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ColourValue__1setAsBGRA_1_1BGRAV (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong val
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     setAsABGR()
 * Type:       non-virtual method
 * Definition: void Ogre::ColourValue::setAsABGR
 * Signature:  (unsigned_int)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ColourValue__1setAsABGR_1_1ABGRV (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong val
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     saturate()
 * Type:       non-virtual method
 * Definition: void Ogre::ColourValue::saturate
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ColourValue__1saturate (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     saturateCopy()
 * Type:       non-virtual method
 * Definition: ColourValue Ogre::ColourValue::saturateCopy
 * Signature:  ()Ogre_ColourValue
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ColourValue__1saturateCopy_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     operator[]_const()
 * Type:       non-virtual method
 * Definition: float Ogre::ColourValue::operator[]
 * Signature:  (I)F
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_ColourValue__1operatorIndex_1const_1_1iV_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint i
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     operator[]()
 * Type:       non-virtual method
 * Definition: float& Ogre::ColourValue::operator[]
 * Signature:  (I)F
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ColourValue__1operatorIndex_1_1iV (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint i
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     ptr()
 * Type:       non-virtual method
 * Definition: float* Ogre::ColourValue::ptr
 * Signature:  ()F
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ColourValue__1ptr (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     ptr_const()
 * Type:       non-virtual method
 * Definition: const float* Ogre::ColourValue::ptr
 * Signature:  ()F
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ColourValue__1ptr_1const_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     operator+()
 * Type:       non-virtual method
 * Definition: ColourValue Ogre::ColourValue::operator+
 * Signature:  (Ogre_ColourValue)Ogre_ColourValue
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ColourValue__1operatorAddition_1_1ColourValueR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong rkVector
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     operator-()
 * Type:       non-virtual method
 * Definition: ColourValue Ogre::ColourValue::operator-
 * Signature:  (Ogre_ColourValue)Ogre_ColourValue
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ColourValue__1operatorSubtraction_1_1ColourValueR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong rkVector
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     operator *()
 * Type:       non-virtual method
 * Definition: ColourValue Ogre::ColourValue::operator *
 * Signature:  (F)Ogre_ColourValue
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ColourValue__1operatorMultiplication_1_1FV_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat fScalar
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     operator *()
 * Type:       non-virtual method
 * Definition: ColourValue Ogre::ColourValue::operator *
 * Signature:  (Ogre_ColourValue)Ogre_ColourValue
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ColourValue__1operatorMultiplication_1_1ColourValueR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong rhs
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     operator/()
 * Type:       non-virtual method
 * Definition: ColourValue Ogre::ColourValue::operator/
 * Signature:  (Ogre_ColourValue)Ogre_ColourValue
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ColourValue__1operatorDivision_1_1ColourValueR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong rhs
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     operator/()
 * Type:       non-virtual method
 * Definition: ColourValue Ogre::ColourValue::operator/
 * Signature:  (F)Ogre_ColourValue
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ColourValue__1operatorDivision_1_1FV_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat fScalar
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     operator+=()
 * Type:       non-virtual method
 * Definition: ColourValue& Ogre::ColourValue::operator+=
 * Signature:  (Ogre_ColourValue)Ogre_ColourValue
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ColourValue__1operatorIncrementAndAssign_1_1ColourValueR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong rkVector
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     operator-=()
 * Type:       non-virtual method
 * Definition: ColourValue& Ogre::ColourValue::operator-=
 * Signature:  (Ogre_ColourValue)Ogre_ColourValue
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ColourValue__1operatorDecrementAndAssign_1_1ColourValueR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong rkVector
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     operator *=()
 * Type:       non-virtual method
 * Definition: ColourValue& Ogre::ColourValue::operator *=
 * Signature:  (F)Ogre_ColourValue
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ColourValue__1operatorMultiplyAndAssign_1_1FV (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat fScalar
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     operator/=()
 * Type:       non-virtual method
 * Definition: ColourValue& Ogre::ColourValue::operator/=
 * Signature:  (F)Ogre_ColourValue
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ColourValue__1operatorDivideAndAssign_1_1FV (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat fScalar
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     setHSB()
 * Type:       non-virtual method
 * Definition: void Ogre::ColourValue::setHSB
 * Signature:  (floatfloatfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ColourValue__1setHSB_1_1RealvRealvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat hue, 
  jfloat saturation, 
  jfloat brightness
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     getHSB()
 * Type:       non-virtual method
 * Definition: void Ogre::ColourValue::getHSB
 * Signature:  (floatfloatfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ColourValue__1getHSB_1_1RealpRealpRealp_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong hue, 
  jlong saturation, 
  jlong brightness
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     __delete()
 * Type:       destructor
 * Definition: Ogre::ColourValue::__delete
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ColourValue__1_1delete (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     getZERO()
 * Type:       getter for public attribute
 * Definition: const ColourValue Ogre::ColourValue::ZERO
 * Signature:  ()Ogre_ColourValue
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ColourValue__1getZERO (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     getBlack()
 * Type:       getter for public attribute
 * Definition: const ColourValue Ogre::ColourValue::Black
 * Signature:  ()Ogre_ColourValue
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ColourValue__1getBlack (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     getWhite()
 * Type:       getter for public attribute
 * Definition: const ColourValue Ogre::ColourValue::White
 * Signature:  ()Ogre_ColourValue
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ColourValue__1getWhite (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     getRed()
 * Type:       getter for public attribute
 * Definition: const ColourValue Ogre::ColourValue::Red
 * Signature:  ()Ogre_ColourValue
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ColourValue__1getRed (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     getGreen()
 * Type:       getter for public attribute
 * Definition: const ColourValue Ogre::ColourValue::Green
 * Signature:  ()Ogre_ColourValue
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ColourValue__1getGreen (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     getBlue()
 * Type:       getter for public attribute
 * Definition: const ColourValue Ogre::ColourValue::Blue
 * Signature:  ()Ogre_ColourValue
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ColourValue__1getBlue (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     getr()
 * Type:       getter for public attribute
 * Definition: float Ogre::ColourValue::r
 * Signature:  ()F
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_ColourValue__1getr (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     setr()
 * Type:       setter for public attribute
 * Definition: float Ogre::ColourValue::r
 * Signature:  (F)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ColourValue__1setr (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat _jni_value_
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     getg()
 * Type:       getter for public attribute
 * Definition: float Ogre::ColourValue::g
 * Signature:  ()F
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_ColourValue__1getg (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     setg()
 * Type:       setter for public attribute
 * Definition: float Ogre::ColourValue::g
 * Signature:  (F)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ColourValue__1setg (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat _jni_value_
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     getb()
 * Type:       getter for public attribute
 * Definition: float Ogre::ColourValue::b
 * Signature:  ()F
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_ColourValue__1getb (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     setb()
 * Type:       setter for public attribute
 * Definition: float Ogre::ColourValue::b
 * Signature:  (F)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ColourValue__1setb (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat _jni_value_
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     geta()
 * Type:       getter for public attribute
 * Definition: float Ogre::ColourValue::a
 * Signature:  ()F
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_ColourValue__1geta (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ColourValue
 * Method:     seta()
 * Type:       setter for public attribute
 * Definition: float Ogre::ColourValue::a
 * Signature:  (F)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ColourValue__1seta (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat _jni_value_
);

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif /*__Included_org_ogre4j_ColourValue__*/
