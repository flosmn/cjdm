///////////////////////////////////////////////////////////////////////////////
/// This source file is generated by XBiG (The XSLT Bindings Generator)
/// For the latest info, see http://sourceforge.net/projects/xbig/
///
/// Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
/// Also see acknowledgements in Readme.html
///
/// This program is free software; you can redistribute it and/or modify it under
/// the terms of the GNU Lesser General Public License as published by the Free Software
/// Foundation; either version 2 of the License, or (at your option) any later
/// version.
///
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
/// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
///
/// You should have received a copy of the GNU Lesser General Public License along with
/// this program; if not, write to the Free Software Foundation, Inc., 59 Temple
/// Place - Suite 330, Boston, MA 02111-1307, USA, or go to
/// http://www.gnu.org/copyleft/lesser.txt.
///
/// Machine generated file
///////////////////////////////////////////////////////////////////////////////



#ifdef WIN32
	// disable warnings
	#pragma warning (disable : 4267) // conversion from 'size_t' to 'jint'
#else

#endif


#ifndef __Included_org_ogre4j_RenderQueueGroup__
#define __Included_org_ogre4j_RenderQueueGroup__


#include "jni_base.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/*
 * Class:      org.ogre4j.RenderQueueGroup
 * Method:     RenderQueueGroup()
 * Type:       constructor
 * Definition: Ogre::RenderQueueGroup::RenderQueueGroup
 * Signature:  (Ogre_RenderQueueZZZ)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_RenderQueueGroup__1_1createRenderQueueGroup_1_1RenderQueuepbvbvbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong parent, 
  jboolean splitPassesByLightingType, 
  jboolean splitNoShadowPasses, 
  jboolean shadowCastersNotReceivers
);

/*
 * Class:      org.ogre4j.RenderQueueGroup
 * Method:     getIterator()
 * Type:       non-virtual method
 * Definition: PriorityMapIterator Ogre::RenderQueueGroup::getIterator
 * Signature:  ()Ogre_RenderQueueGroup_PriorityMapIterator
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_RenderQueueGroup__1getIterator (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.RenderQueueGroup
 * Method:     addRenderable()
 * Type:       non-virtual method
 * Definition: void Ogre::RenderQueueGroup::addRenderable
 * Signature:  (Ogre_RenderableOgre_Techniqueunsigned_short)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_RenderQueueGroup__1addRenderable_1_1RenderablepTechniquepushortv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong pRend, 
  jlong pTech, 
  jint priority
);

/*
 * Class:      org.ogre4j.RenderQueueGroup
 * Method:     clear()
 * Type:       non-virtual method
 * Definition: void Ogre::RenderQueueGroup::clear
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_RenderQueueGroup__1clear_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean destroy
);

/*
 * Class:      org.ogre4j.RenderQueueGroup
 * Method:     setShadowsEnabled()
 * Type:       non-virtual method
 * Definition: void Ogre::RenderQueueGroup::setShadowsEnabled
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_RenderQueueGroup__1setShadowsEnabled_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean enabled
);

/*
 * Class:      org.ogre4j.RenderQueueGroup
 * Method:     getShadowsEnabled()
 * Type:       non-virtual method
 * Definition: bool Ogre::RenderQueueGroup::getShadowsEnabled
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_RenderQueueGroup__1getShadowsEnabled_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.RenderQueueGroup
 * Method:     setSplitPassesByLightingType()
 * Type:       non-virtual method
 * Definition: void Ogre::RenderQueueGroup::setSplitPassesByLightingType
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_RenderQueueGroup__1setSplitPassesByLightingType_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean split
);

/*
 * Class:      org.ogre4j.RenderQueueGroup
 * Method:     setSplitNoShadowPasses()
 * Type:       non-virtual method
 * Definition: void Ogre::RenderQueueGroup::setSplitNoShadowPasses
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_RenderQueueGroup__1setSplitNoShadowPasses_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean split
);

/*
 * Class:      org.ogre4j.RenderQueueGroup
 * Method:     setShadowCastersCannotBeReceivers()
 * Type:       non-virtual method
 * Definition: void Ogre::RenderQueueGroup::setShadowCastersCannotBeReceivers
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_RenderQueueGroup__1setShadowCastersCannotBeReceivers_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean ind
);

/*
 * Class:      org.ogre4j.RenderQueueGroup
 * Method:     resetOrganisationModes()
 * Type:       non-virtual method
 * Definition: void Ogre::RenderQueueGroup::resetOrganisationModes
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_RenderQueueGroup__1resetOrganisationModes (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.RenderQueueGroup
 * Method:     addOrganisationMode()
 * Type:       non-virtual method
 * Definition: void Ogre::RenderQueueGroup::addOrganisationMode
 * Signature:  (Ogre_QueuedRenderableCollection_OrganisationMode)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_RenderQueueGroup__1addOrganisationMode_1_1QueuedRenderableCollection_1OrganisationModev (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint om
);

/*
 * Class:      org.ogre4j.RenderQueueGroup
 * Method:     defaultOrganisationMode()
 * Type:       non-virtual method
 * Definition: void Ogre::RenderQueueGroup::defaultOrganisationMode
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_RenderQueueGroup__1defaultOrganisationMode (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.RenderQueueGroup
 * Method:     __delete()
 * Type:       destructor
 * Definition: Ogre::RenderQueueGroup::__delete
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_RenderQueueGroup__1_1delete (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif /*__Included_org_ogre4j_RenderQueueGroup__*/
