///////////////////////////////////////////////////////////////////////////////
/// This source file is generated by XBiG (The XSLT Bindings Generator)
/// For the latest info, see http://sourceforge.net/projects/xbig/
///
/// Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
/// Also see acknowledgements in Readme.html
///
/// This program is free software; you can redistribute it and/or modify it under
/// the terms of the GNU Lesser General Public License as published by the Free Software
/// Foundation; either version 2 of the License, or (at your option) any later
/// version.
///
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
/// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
///
/// You should have received a copy of the GNU Lesser General Public License along with
/// this program; if not, write to the Free Software Foundation, Inc., 59 Temple
/// Place - Suite 330, Boston, MA 02111-1307, USA, or go to
/// http://www.gnu.org/copyleft/lesser.txt.
///
/// Machine generated file
///////////////////////////////////////////////////////////////////////////////



#ifdef WIN32
	// disable warnings
	#pragma warning (disable : 4267) // conversion from 'size_t' to 'jint'
#else

#endif


#ifndef __Included_org_ogre4j_BillboardParticleRenderer__
#define __Included_org_ogre4j_BillboardParticleRenderer__


#include "jni_base.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     BillboardParticleRenderer()
 * Type:       constructor
 * Definition: Ogre::BillboardParticleRenderer::BillboardParticleRenderer
 * Signature:  ()V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_BillboardParticleRenderer__1_1createBillboardParticleRenderer (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     setBillboardType()
 * Type:       non-virtual method
 * Definition: void Ogre::BillboardParticleRenderer::setBillboardType
 * Signature:  (Ogre_BillboardType)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BillboardParticleRenderer__1setBillboardType_1_1BillboardTypev (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint bbt
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     getBillboardType()
 * Type:       non-virtual method
 * Definition: BillboardType Ogre::BillboardParticleRenderer::getBillboardType
 * Signature:  ()Ogre_BillboardType
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_BillboardParticleRenderer__1getBillboardType_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     setUseAccurateFacing()
 * Type:       non-virtual method
 * Definition: void Ogre::BillboardParticleRenderer::setUseAccurateFacing
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BillboardParticleRenderer__1setUseAccurateFacing_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean acc
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     getUseAccurateFacing()
 * Type:       non-virtual method
 * Definition: bool Ogre::BillboardParticleRenderer::getUseAccurateFacing
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_BillboardParticleRenderer__1getUseAccurateFacing_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     setBillboardOrigin()
 * Type:       non-virtual method
 * Definition: void Ogre::BillboardParticleRenderer::setBillboardOrigin
 * Signature:  (Ogre_BillboardOrigin)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BillboardParticleRenderer__1setBillboardOrigin_1_1BillboardOriginv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint origin
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     getBillboardOrigin()
 * Type:       non-virtual method
 * Definition: BillboardOrigin Ogre::BillboardParticleRenderer::getBillboardOrigin
 * Signature:  ()Ogre_BillboardOrigin
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_BillboardParticleRenderer__1getBillboardOrigin_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     setBillboardRotationType()
 * Type:       non-virtual method
 * Definition: void Ogre::BillboardParticleRenderer::setBillboardRotationType
 * Signature:  (Ogre_BillboardRotationType)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BillboardParticleRenderer__1setBillboardRotationType_1_1BillboardRotationTypev (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint rotationType
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     getBillboardRotationType()
 * Type:       non-virtual method
 * Definition: BillboardRotationType Ogre::BillboardParticleRenderer::getBillboardRotationType
 * Signature:  ()Ogre_BillboardRotationType
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_BillboardParticleRenderer__1getBillboardRotationType_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     setCommonDirection()
 * Type:       non-virtual method
 * Definition: void Ogre::BillboardParticleRenderer::setCommonDirection
 * Signature:  (Ogre_Vector3)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BillboardParticleRenderer__1setCommonDirection_1_1Vector3R (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong vec
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     getCommonDirection()
 * Type:       non-virtual method
 * Definition: const Vector3& Ogre::BillboardParticleRenderer::getCommonDirection
 * Signature:  ()Ogre_Vector3
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_BillboardParticleRenderer__1getCommonDirection_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     setCommonUpVector()
 * Type:       non-virtual method
 * Definition: void Ogre::BillboardParticleRenderer::setCommonUpVector
 * Signature:  (Ogre_Vector3)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BillboardParticleRenderer__1setCommonUpVector_1_1Vector3R (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong vec
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     getCommonUpVector()
 * Type:       non-virtual method
 * Definition: const Vector3& Ogre::BillboardParticleRenderer::getCommonUpVector
 * Signature:  ()Ogre_Vector3
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_BillboardParticleRenderer__1getCommonUpVector_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     setPointRenderingEnabled()
 * Type:       non-virtual method
 * Definition: void Ogre::BillboardParticleRenderer::setPointRenderingEnabled
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BillboardParticleRenderer__1setPointRenderingEnabled_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean enabled
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     isPointRenderingEnabled()
 * Type:       non-virtual method
 * Definition: bool Ogre::BillboardParticleRenderer::isPointRenderingEnabled
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_BillboardParticleRenderer__1isPointRenderingEnabled_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     getType()
 * Type:       virtual method
 * Definition: const String& Ogre::BillboardParticleRenderer::getType
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_BillboardParticleRenderer__1getType_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     _updateRenderQueue()
 * Type:       virtual method
 * Definition: void Ogre::BillboardParticleRenderer::_updateRenderQueue
 * Signature:  (Ogre_RenderQueuestd_list__Particle_*__Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BillboardParticleRenderer__1_1updateRenderQueue_1_1RenderQueuepstd_1list_1_1Particle_1ptr_1_1rbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong queue, 
  jlong currentParticles, 
  jboolean cullIndividually
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     visitRenderables()
 * Type:       virtual method
 * Definition: void Ogre::BillboardParticleRenderer::visitRenderables
 * Signature:  (Ogre_Renderable_VisitorZ)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BillboardParticleRenderer__1visitRenderables_1_1Renderable_1Visitorpbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong visitor, 
  jboolean debugRenderables
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     _setMaterial()
 * Type:       virtual method
 * Definition: void Ogre::BillboardParticleRenderer::_setMaterial
 * Signature:  (Ogre_MaterialPtr)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BillboardParticleRenderer__1_1setMaterial_1_1MaterialPtrr (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong mat
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     _notifyCurrentCamera()
 * Type:       virtual method
 * Definition: void Ogre::BillboardParticleRenderer::_notifyCurrentCamera
 * Signature:  (Ogre_Camera)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BillboardParticleRenderer__1_1notifyCurrentCamera_1_1Camerap (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong cam
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     _notifyParticleRotated()
 * Type:       virtual method
 * Definition: void Ogre::BillboardParticleRenderer::_notifyParticleRotated
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BillboardParticleRenderer__1_1notifyParticleRotated (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     _notifyParticleResized()
 * Type:       virtual method
 * Definition: void Ogre::BillboardParticleRenderer::_notifyParticleResized
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BillboardParticleRenderer__1_1notifyParticleResized (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     _notifyParticleQuota()
 * Type:       virtual method
 * Definition: void Ogre::BillboardParticleRenderer::_notifyParticleQuota
 * Signature:  (I)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BillboardParticleRenderer__1_1notifyParticleQuota_1_1iv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint quota
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     _notifyAttached()
 * Type:       virtual method
 * Definition: void Ogre::BillboardParticleRenderer::_notifyAttached
 * Signature:  (Ogre_NodeZ)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BillboardParticleRenderer__1_1notifyAttached_1_1Nodepbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong parent, 
  jboolean isTagPoint
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     _notifyDefaultDimensions()
 * Type:       virtual method
 * Definition: void Ogre::BillboardParticleRenderer::_notifyDefaultDimensions
 * Signature:  (floatfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BillboardParticleRenderer__1_1notifyDefaultDimensions_1_1RealvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat width, 
  jfloat height
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     setRenderQueueGroup()
 * Type:       virtual method
 * Definition: void Ogre::BillboardParticleRenderer::setRenderQueueGroup
 * Signature:  (unsigned_char)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BillboardParticleRenderer__1setRenderQueueGroup_1_1uint8v (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jshort queueID
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     setKeepParticlesInLocalSpace()
 * Type:       virtual method
 * Definition: void Ogre::BillboardParticleRenderer::setKeepParticlesInLocalSpace
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BillboardParticleRenderer__1setKeepParticlesInLocalSpace_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean keepLocal
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     _getSortMode()
 * Type:       virtual method
 * Definition: SortMode Ogre::BillboardParticleRenderer::_getSortMode
 * Signature:  ()Ogre_SortMode
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_BillboardParticleRenderer__1_1getSortMode_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     getBillboardSet()
 * Type:       non-virtual method
 * Definition: BillboardSet* Ogre::BillboardParticleRenderer::getBillboardSet
 * Signature:  ()Ogre_BillboardSet
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_BillboardParticleRenderer__1getBillboardSet_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     _notifyParticleEmitted()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleSystemRenderer::_notifyParticleEmitted
 * Signature:  (Ogre_Particle)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BillboardParticleRenderer__1_1notifyParticleEmitted_1_1Particlep (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong particle
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     _notifyParticleExpired()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleSystemRenderer::_notifyParticleExpired
 * Signature:  (Ogre_Particle)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BillboardParticleRenderer__1_1notifyParticleExpired_1_1Particlep (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong particle
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     _notifyParticleMoved()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleSystemRenderer::_notifyParticleMoved
 * Signature:  (std_list__Particle_*__)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BillboardParticleRenderer__1_1notifyParticleMoved_1_1std_1list_1_1Particle_1ptr_1_1r (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong currentParticles
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     _notifyParticleCleared()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleSystemRenderer::_notifyParticleCleared
 * Signature:  (std_list__Particle_*__)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BillboardParticleRenderer__1_1notifyParticleCleared_1_1std_1list_1_1Particle_1ptr_1_1r (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong currentParticles
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     _createVisualData()
 * Type:       virtual method
 * Definition: virtual ParticleVisualData* Ogre::ParticleSystemRenderer::_createVisualData
 * Signature:  ()Ogre_ParticleVisualData
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_BillboardParticleRenderer__1_1createVisualData (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     _destroyVisualData()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleSystemRenderer::_destroyVisualData
 * Signature:  (Ogre_ParticleVisualData)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BillboardParticleRenderer__1_1destroyVisualData_1_1ParticleVisualDatap (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong vis
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     getParamDictionary()
 * Type:       non-virtual method
 * Definition: ParamDictionary* Ogre::StringInterface::getParamDictionary
 * Signature:  ()Ogre_ParamDictionary
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_BillboardParticleRenderer__1getParamDictionary (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     getParamDictionary_const()
 * Type:       non-virtual method
 * Definition: const ParamDictionary* Ogre::StringInterface::getParamDictionary
 * Signature:  ()Ogre_ParamDictionary
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_BillboardParticleRenderer__1getParamDictionary_1const_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     getParameters()
 * Type:       non-virtual method
 * Definition: const ParameterList& Ogre::StringInterface::getParameters
 * Signature:  ()Ogre_ParameterList
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_BillboardParticleRenderer__1getParameters_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     setParameter()
 * Type:       virtual method
 * Definition: virtual bool Ogre::StringInterface::setParameter
 * Signature:  (std_stringstd_string)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_BillboardParticleRenderer__1setParameter_1_1StringRStringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name, 
  jstring value
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     setParameterList()
 * Type:       virtual method
 * Definition: virtual void Ogre::StringInterface::setParameterList
 * Signature:  (Ogre_NameValuePairList)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BillboardParticleRenderer__1setParameterList_1_1NameValuePairListR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong paramList
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     getParameter()
 * Type:       virtual method
 * Definition: virtual String Ogre::StringInterface::getParameter
 * Signature:  (std_string)std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_BillboardParticleRenderer__1getParameter_1_1StringR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     copyParametersTo()
 * Type:       virtual method
 * Definition: virtual void Ogre::StringInterface::copyParametersTo
 * Signature:  (Ogre_StringInterface)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BillboardParticleRenderer__1copyParametersTo_1_1StringInterfacep_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong dest
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     cleanupDictionary()
 * Type:       static method
 * Definition: static void Ogre::StringInterface::cleanupDictionary
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BillboardParticleRenderer__1cleanupDictionary (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.BillboardParticleRenderer
 * Method:     __delete()
 * Type:       destructor
 * Definition: Ogre::BillboardParticleRenderer::__delete
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BillboardParticleRenderer__1_1delete (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif /*__Included_org_ogre4j_BillboardParticleRenderer__*/
