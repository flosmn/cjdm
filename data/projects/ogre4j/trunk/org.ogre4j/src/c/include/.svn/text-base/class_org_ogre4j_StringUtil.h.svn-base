///////////////////////////////////////////////////////////////////////////////
/// This source file is generated by XBiG (The XSLT Bindings Generator)
/// For the latest info, see http://sourceforge.net/projects/xbig/
///
/// Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
/// Also see acknowledgements in Readme.html
///
/// This program is free software; you can redistribute it and/or modify it under
/// the terms of the GNU Lesser General Public License as published by the Free Software
/// Foundation; either version 2 of the License, or (at your option) any later
/// version.
///
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
/// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
///
/// You should have received a copy of the GNU Lesser General Public License along with
/// this program; if not, write to the Free Software Foundation, Inc., 59 Temple
/// Place - Suite 330, Boston, MA 02111-1307, USA, or go to
/// http://www.gnu.org/copyleft/lesser.txt.
///
/// Machine generated file
///////////////////////////////////////////////////////////////////////////////



#ifdef WIN32
	// disable warnings
	#pragma warning (disable : 4267) // conversion from 'size_t' to 'jint'
#else

#endif


#ifndef __Included_org_ogre4j_StringUtil__
#define __Included_org_ogre4j_StringUtil__


#include "jni_base.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/*
 * Class:      org.ogre4j.StringUtil
 * Method:     trim()
 * Type:       static method
 * Definition: static void Ogre::StringUtil::trim
 * Signature:  (std_stringZZ)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_StringUtil__1trim_1_1Stringrbvbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong str, 
  jboolean left, 
  jboolean right
);

/*
 * Class:      org.ogre4j.StringUtil
 * Method:     split()
 * Type:       static method
 * Definition: static std::vector< String > Ogre::StringUtil::split
 * Signature:  (std_stringstd_stringI)std_vector__String__
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_StringUtil__1split_1_1StringRStringRIv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jstring str, 
  jstring delims, 
  jlong maxSplits
);

/*
 * Class:      org.ogre4j.StringUtil
 * Method:     toLowerCase()
 * Type:       static method
 * Definition: static void Ogre::StringUtil::toLowerCase
 * Signature:  (std_string)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_StringUtil__1toLowerCase_1_1Stringr (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong str
);

/*
 * Class:      org.ogre4j.StringUtil
 * Method:     toUpperCase()
 * Type:       static method
 * Definition: static void Ogre::StringUtil::toUpperCase
 * Signature:  (std_string)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_StringUtil__1toUpperCase_1_1Stringr (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong str
);

/*
 * Class:      org.ogre4j.StringUtil
 * Method:     startsWith()
 * Type:       static method
 * Definition: static bool Ogre::StringUtil::startsWith
 * Signature:  (std_stringstd_stringZ)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_StringUtil__1startsWith_1_1StringRStringRbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jstring str, 
  jstring pattern, 
  jboolean lowerCase
);

/*
 * Class:      org.ogre4j.StringUtil
 * Method:     endsWith()
 * Type:       static method
 * Definition: static bool Ogre::StringUtil::endsWith
 * Signature:  (std_stringstd_stringZ)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_StringUtil__1endsWith_1_1StringRStringRbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jstring str, 
  jstring pattern, 
  jboolean lowerCase
);

/*
 * Class:      org.ogre4j.StringUtil
 * Method:     standardisePath()
 * Type:       static method
 * Definition: static String Ogre::StringUtil::standardisePath
 * Signature:  (std_string)std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_StringUtil__1standardisePath_1_1StringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jstring init
);

/*
 * Class:      org.ogre4j.StringUtil
 * Method:     splitFilename()
 * Type:       static method
 * Definition: static void Ogre::StringUtil::splitFilename
 * Signature:  (std_stringstd_stringstd_string)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_StringUtil__1splitFilename_1_1StringRStringrStringr (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jstring qualifiedName, 
  jlong outBasename, 
  jlong outPath
);

/*
 * Class:      org.ogre4j.StringUtil
 * Method:     splitFullFilename()
 * Type:       static method
 * Definition: static void Ogre::StringUtil::splitFullFilename
 * Signature:  (std_stringstd_stringstd_stringstd_string)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_StringUtil__1splitFullFilename_1_1Ogre_1StringROgre_1StringrOgre_1StringrOgre_1Stringr (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jstring qualifiedName, 
  jlong outBasename, 
  jlong outExtention, 
  jlong outPath
);

/*
 * Class:      org.ogre4j.StringUtil
 * Method:     splitBaseFilename()
 * Type:       static method
 * Definition: static void Ogre::StringUtil::splitBaseFilename
 * Signature:  (std_stringstd_stringstd_string)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_StringUtil__1splitBaseFilename_1_1Ogre_1StringROgre_1StringrOgre_1Stringr (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jstring fullName, 
  jlong outBasename, 
  jlong outExtention
);

/*
 * Class:      org.ogre4j.StringUtil
 * Method:     match()
 * Type:       static method
 * Definition: static bool Ogre::StringUtil::match
 * Signature:  (std_stringstd_stringZ)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_StringUtil__1match_1_1StringRStringRbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jstring str, 
  jstring pattern, 
  jboolean caseSensitive
);

/*
 * Class:      org.ogre4j.StringUtil
 * Method:     StringUtil()
 * Type:       constructor
 * Definition: Ogre::StringUtil::StringUtil
 * Signature:  ()V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_StringUtil__1_1createStringUtil (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.StringUtil
 * Method:     __delete()
 * Type:       destructor
 * Definition: Ogre::StringUtil::__delete
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_StringUtil__1_1delete (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.StringUtil
 * Method:     getBLANK()
 * Type:       getter for public attribute
 * Definition: const String Ogre::StringUtil::BLANK
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_StringUtil__1getBLANK (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif /*__Included_org_ogre4j_StringUtil__*/
