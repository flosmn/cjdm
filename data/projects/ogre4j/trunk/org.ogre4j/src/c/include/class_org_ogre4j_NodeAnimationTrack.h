///////////////////////////////////////////////////////////////////////////////
/// This source file is generated by XBiG (The XSLT Bindings Generator)
/// For the latest info, see http://sourceforge.net/projects/xbig/
///
/// Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
/// Also see acknowledgements in Readme.html
///
/// This program is free software; you can redistribute it and/or modify it under
/// the terms of the GNU Lesser General Public License as published by the Free Software
/// Foundation; either version 2 of the License, or (at your option) any later
/// version.
///
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
/// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
///
/// You should have received a copy of the GNU Lesser General Public License along with
/// this program; if not, write to the Free Software Foundation, Inc., 59 Temple
/// Place - Suite 330, Boston, MA 02111-1307, USA, or go to
/// http://www.gnu.org/copyleft/lesser.txt.
///
/// Machine generated file
///////////////////////////////////////////////////////////////////////////////



#ifdef WIN32
	// disable warnings
	#pragma warning (disable : 4267) // conversion from 'size_t' to 'jint'
#else

#endif


#ifndef __Included_org_ogre4j_NodeAnimationTrack__
#define __Included_org_ogre4j_NodeAnimationTrack__


#include "jni_base.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/*
 * Class:      org.ogre4j.NodeAnimationTrack
 * Method:     NodeAnimationTrack()
 * Type:       constructor
 * Definition: Ogre::NodeAnimationTrack::NodeAnimationTrack
 * Signature:  (Ogre_AnimationS)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_NodeAnimationTrack__1_1createNodeAnimationTrack_1_1AnimationpHv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong parent, 
  jint handle
);

/*
 * Class:      org.ogre4j.NodeAnimationTrack
 * Method:     NodeAnimationTrack()
 * Type:       constructor
 * Definition: Ogre::NodeAnimationTrack::NodeAnimationTrack
 * Signature:  (Ogre_AnimationSOgre_Node)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_NodeAnimationTrack__1_1createNodeAnimationTrack_1_1AnimationpHvNodep (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong parent, 
  jint handle, 
  jlong targetNode
);

/*
 * Class:      org.ogre4j.NodeAnimationTrack
 * Method:     createNodeKeyFrame()
 * Type:       virtual method
 * Definition: virtual TransformKeyFrame* Ogre::NodeAnimationTrack::createNodeKeyFrame
 * Signature:  (float)Ogre_TransformKeyFrame
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_NodeAnimationTrack__1createNodeKeyFrame_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat timePos
);

/*
 * Class:      org.ogre4j.NodeAnimationTrack
 * Method:     getAssociatedNode()
 * Type:       virtual method
 * Definition: virtual Node* Ogre::NodeAnimationTrack::getAssociatedNode
 * Signature:  ()Ogre_Node
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_NodeAnimationTrack__1getAssociatedNode_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.NodeAnimationTrack
 * Method:     setAssociatedNode()
 * Type:       virtual method
 * Definition: virtual void Ogre::NodeAnimationTrack::setAssociatedNode
 * Signature:  (Ogre_Node)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_NodeAnimationTrack__1setAssociatedNode_1_1Nodep (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong node
);

/*
 * Class:      org.ogre4j.NodeAnimationTrack
 * Method:     applyToNode()
 * Type:       virtual method
 * Definition: virtual void Ogre::NodeAnimationTrack::applyToNode
 * Signature:  (Ogre_NodeOgre_TimeIndexfloatfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_NodeAnimationTrack__1applyToNode_1_1NodepTimeIndexRRealvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong node, 
  jlong timeIndex, 
  jfloat weight, 
  jfloat scale
);

/*
 * Class:      org.ogre4j.NodeAnimationTrack
 * Method:     setUseShortestRotationPath()
 * Type:       virtual method
 * Definition: virtual void Ogre::NodeAnimationTrack::setUseShortestRotationPath
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_NodeAnimationTrack__1setUseShortestRotationPath_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean useShortestPath
);

/*
 * Class:      org.ogre4j.NodeAnimationTrack
 * Method:     getUseShortestRotationPath()
 * Type:       virtual method
 * Definition: virtual bool Ogre::NodeAnimationTrack::getUseShortestRotationPath
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_NodeAnimationTrack__1getUseShortestRotationPath_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.NodeAnimationTrack
 * Method:     getInterpolatedKeyFrame()
 * Type:       virtual method
 * Definition: virtual void Ogre::NodeAnimationTrack::getInterpolatedKeyFrame
 * Signature:  (Ogre_TimeIndexOgre_KeyFrame)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_NodeAnimationTrack__1getInterpolatedKeyFrame_1_1TimeIndexRKeyFramep_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong timeIndex, 
  jlong kf
);

/*
 * Class:      org.ogre4j.NodeAnimationTrack
 * Method:     apply()
 * Type:       virtual method
 * Definition: virtual void Ogre::NodeAnimationTrack::apply
 * Signature:  (Ogre_TimeIndexfloatfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_NodeAnimationTrack__1apply_1_1TimeIndexRRealvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong timeIndex, 
  jfloat weight, 
  jfloat scale
);

/*
 * Class:      org.ogre4j.NodeAnimationTrack
 * Method:     _keyFrameDataChanged()
 * Type:       virtual method
 * Definition: void Ogre::NodeAnimationTrack::_keyFrameDataChanged
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_NodeAnimationTrack__1_1keyFrameDataChanged_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.NodeAnimationTrack
 * Method:     getNodeKeyFrame()
 * Type:       virtual method
 * Definition: virtual TransformKeyFrame* Ogre::NodeAnimationTrack::getNodeKeyFrame
 * Signature:  (S)Ogre_TransformKeyFrame
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_NodeAnimationTrack__1getNodeKeyFrame_1_1Hv_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint index
);

/*
 * Class:      org.ogre4j.NodeAnimationTrack
 * Method:     hasNonZeroKeyFrames()
 * Type:       virtual method
 * Definition: virtual bool Ogre::NodeAnimationTrack::hasNonZeroKeyFrames
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_NodeAnimationTrack__1hasNonZeroKeyFrames_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.NodeAnimationTrack
 * Method:     optimise()
 * Type:       virtual method
 * Definition: virtual void Ogre::NodeAnimationTrack::optimise
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_NodeAnimationTrack__1optimise (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.NodeAnimationTrack
 * Method:     _clone()
 * Type:       non-virtual method
 * Definition: NodeAnimationTrack* Ogre::NodeAnimationTrack::_clone
 * Signature:  (Ogre_Animation)Ogre_NodeAnimationTrack
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_NodeAnimationTrack__1_1clone_1_1Animationp_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong newParent
);

/*
 * Class:      org.ogre4j.NodeAnimationTrack
 * Method:     getHandle()
 * Type:       non-virtual method
 * Definition: unsigned short Ogre::AnimationTrack::getHandle
 * Signature:  ()S
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_NodeAnimationTrack__1getHandle_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.NodeAnimationTrack
 * Method:     getNumKeyFrames()
 * Type:       virtual method
 * Definition: virtual unsigned short Ogre::AnimationTrack::getNumKeyFrames
 * Signature:  ()S
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_NodeAnimationTrack__1getNumKeyFrames_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.NodeAnimationTrack
 * Method:     getKeyFrame()
 * Type:       virtual method
 * Definition: virtual KeyFrame* Ogre::AnimationTrack::getKeyFrame
 * Signature:  (S)Ogre_KeyFrame
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_NodeAnimationTrack__1getKeyFrame_1_1Hv_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint index
);

/*
 * Class:      org.ogre4j.NodeAnimationTrack
 * Method:     getKeyFramesAtTime()
 * Type:       virtual method
 * Definition: virtual Real Ogre::AnimationTrack::getKeyFramesAtTime
 * Signature:  (Ogre_TimeIndexOgre_KeyFrameOgre_KeyFrameS)float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_NodeAnimationTrack__1getKeyFramesAtTime_1_1TimeIndexRKeyFramepKeyFramepHp_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong timeIndex, 
  jlong keyFrame1, 
  jlong keyFrame2, 
  jlong firstKeyIndex
);

/*
 * Class:      org.ogre4j.NodeAnimationTrack
 * Method:     createKeyFrame()
 * Type:       virtual method
 * Definition: virtual KeyFrame* Ogre::AnimationTrack::createKeyFrame
 * Signature:  (float)Ogre_KeyFrame
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_NodeAnimationTrack__1createKeyFrame_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat timePos
);

/*
 * Class:      org.ogre4j.NodeAnimationTrack
 * Method:     removeKeyFrame()
 * Type:       virtual method
 * Definition: virtual void Ogre::AnimationTrack::removeKeyFrame
 * Signature:  (S)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_NodeAnimationTrack__1removeKeyFrame_1_1Hv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint index
);

/*
 * Class:      org.ogre4j.NodeAnimationTrack
 * Method:     removeAllKeyFrames()
 * Type:       virtual method
 * Definition: virtual void Ogre::AnimationTrack::removeAllKeyFrames
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_NodeAnimationTrack__1removeAllKeyFrames (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.NodeAnimationTrack
 * Method:     _collectKeyFrameTimes()
 * Type:       virtual method
 * Definition: virtual void Ogre::AnimationTrack::_collectKeyFrameTimes
 * Signature:  (std_vector__Real__)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_NodeAnimationTrack__1_1collectKeyFrameTimes_1_1std_1vector_1_1Real_1_1r (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong keyFrameTimes
);

/*
 * Class:      org.ogre4j.NodeAnimationTrack
 * Method:     _buildKeyFrameIndexMap()
 * Type:       virtual method
 * Definition: virtual void Ogre::AnimationTrack::_buildKeyFrameIndexMap
 * Signature:  (std_vector__Real__)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_NodeAnimationTrack__1_1buildKeyFrameIndexMap_1_1std_1vector_1_1Real_1_1r (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong keyFrameTimes
);

/*
 * Class:      org.ogre4j.NodeAnimationTrack
 * Method:     setListener()
 * Type:       virtual method
 * Definition: virtual void Ogre::AnimationTrack::setListener
 * Signature:  (Ogre_AnimationTrack_Listener)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_NodeAnimationTrack__1setListener_1_1Listenerp (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong l
);

/*
 * Class:      org.ogre4j.NodeAnimationTrack
 * Method:     getParent()
 * Type:       non-virtual method
 * Definition: Animation* Ogre::AnimationTrack::getParent
 * Signature:  ()Ogre_Animation
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_NodeAnimationTrack__1getParent_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.NodeAnimationTrack
 * Method:     __delete()
 * Type:       destructor
 * Definition: Ogre::NodeAnimationTrack::__delete
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_NodeAnimationTrack__1_1delete (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif /*__Included_org_ogre4j_NodeAnimationTrack__*/
