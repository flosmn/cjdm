///////////////////////////////////////////////////////////////////////////////
/// This source file is generated by XBiG (The XSLT Bindings Generator)
/// For the latest info, see http://sourceforge.net/projects/xbig/
///
/// Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
/// Also see acknowledgements in Readme.html
///
/// This program is free software; you can redistribute it and/or modify it under
/// the terms of the GNU Lesser General Public License as published by the Free Software
/// Foundation; either version 2 of the License, or (at your option) any later
/// version.
///
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
/// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
///
/// You should have received a copy of the GNU Lesser General Public License along with
/// this program; if not, write to the Free Software Foundation, Inc., 59 Temple
/// Place - Suite 330, Boston, MA 02111-1307, USA, or go to
/// http://www.gnu.org/copyleft/lesser.txt.
///
/// Machine generated file
///////////////////////////////////////////////////////////////////////////////



#ifdef WIN32
	// disable warnings
	#pragma warning (disable : 4267) // conversion from 'size_t' to 'jint'
#else

#endif


#ifndef __Included_org_ogre4j_VertexAnimationTrack__
#define __Included_org_ogre4j_VertexAnimationTrack__


#include "jni_base.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/*
 * Class:      org.ogre4j.VertexAnimationTrack
 * Method:     VertexAnimationTrack()
 * Type:       constructor
 * Definition: Ogre::VertexAnimationTrack::VertexAnimationTrack
 * Signature:  (Ogre_AnimationSOgre_VertexAnimationType)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_VertexAnimationTrack__1_1createVertexAnimationTrack_1_1AnimationpHvVertexAnimationTypev (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong parent, 
  jint handle, 
  jint animType
);

/*
 * Class:      org.ogre4j.VertexAnimationTrack
 * Method:     VertexAnimationTrack()
 * Type:       constructor
 * Definition: Ogre::VertexAnimationTrack::VertexAnimationTrack
 * Signature:  (Ogre_AnimationSOgre_VertexAnimationTypeOgre_VertexDataOgre_VertexAnimationTrack_TargetMode)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_VertexAnimationTrack__1_1createVertexAnimationTrack_1_1AnimationpHvVertexAnimationTypevVertexDatapTargetModev (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong parent, 
  jint handle, 
  jint animType, 
  jlong targetData, 
  jint target
);

/*
 * Class:      org.ogre4j.VertexAnimationTrack
 * Method:     getAnimationType()
 * Type:       non-virtual method
 * Definition: VertexAnimationType Ogre::VertexAnimationTrack::getAnimationType
 * Signature:  ()Ogre_VertexAnimationType
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_VertexAnimationTrack__1getAnimationType_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.VertexAnimationTrack
 * Method:     createVertexMorphKeyFrame()
 * Type:       virtual method
 * Definition: virtual VertexMorphKeyFrame* Ogre::VertexAnimationTrack::createVertexMorphKeyFrame
 * Signature:  (float)Ogre_VertexMorphKeyFrame
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_VertexAnimationTrack__1createVertexMorphKeyFrame_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat timePos
);

/*
 * Class:      org.ogre4j.VertexAnimationTrack
 * Method:     createVertexPoseKeyFrame()
 * Type:       virtual method
 * Definition: virtual VertexPoseKeyFrame* Ogre::VertexAnimationTrack::createVertexPoseKeyFrame
 * Signature:  (float)Ogre_VertexPoseKeyFrame
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_VertexAnimationTrack__1createVertexPoseKeyFrame_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat timePos
);

/*
 * Class:      org.ogre4j.VertexAnimationTrack
 * Method:     getInterpolatedKeyFrame()
 * Type:       virtual method
 * Definition: virtual void Ogre::VertexAnimationTrack::getInterpolatedKeyFrame
 * Signature:  (Ogre_TimeIndexOgre_KeyFrame)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_VertexAnimationTrack__1getInterpolatedKeyFrame_1_1TimeIndexRKeyFramep_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong timeIndex, 
  jlong kf
);

/*
 * Class:      org.ogre4j.VertexAnimationTrack
 * Method:     apply()
 * Type:       virtual method
 * Definition: virtual void Ogre::VertexAnimationTrack::apply
 * Signature:  (Ogre_TimeIndexfloatfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_VertexAnimationTrack__1apply_1_1TimeIndexRRealvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong timeIndex, 
  jfloat weight, 
  jfloat scale
);

/*
 * Class:      org.ogre4j.VertexAnimationTrack
 * Method:     applyToVertexData()
 * Type:       virtual method
 * Definition: virtual void Ogre::VertexAnimationTrack::applyToVertexData
 * Signature:  (Ogre_VertexDataOgre_TimeIndexfloatOgre_PoseList)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_VertexAnimationTrack__1applyToVertexData_1_1VertexDatapTimeIndexRRealvPoseListP (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong data, 
  jlong timeIndex, 
  jfloat weight, 
  jlong poseList
);

/*
 * Class:      org.ogre4j.VertexAnimationTrack
 * Method:     getVertexMorphKeyFrame()
 * Type:       non-virtual method
 * Definition: VertexMorphKeyFrame* Ogre::VertexAnimationTrack::getVertexMorphKeyFrame
 * Signature:  (S)Ogre_VertexMorphKeyFrame
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_VertexAnimationTrack__1getVertexMorphKeyFrame_1_1Hv_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint index
);

/*
 * Class:      org.ogre4j.VertexAnimationTrack
 * Method:     getVertexPoseKeyFrame()
 * Type:       non-virtual method
 * Definition: VertexPoseKeyFrame* Ogre::VertexAnimationTrack::getVertexPoseKeyFrame
 * Signature:  (S)Ogre_VertexPoseKeyFrame
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_VertexAnimationTrack__1getVertexPoseKeyFrame_1_1Hv_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint index
);

/*
 * Class:      org.ogre4j.VertexAnimationTrack
 * Method:     setAssociatedVertexData()
 * Type:       non-virtual method
 * Definition: void Ogre::VertexAnimationTrack::setAssociatedVertexData
 * Signature:  (Ogre_VertexData)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_VertexAnimationTrack__1setAssociatedVertexData_1_1VertexDatap (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong data
);

/*
 * Class:      org.ogre4j.VertexAnimationTrack
 * Method:     getAssociatedVertexData()
 * Type:       non-virtual method
 * Definition: VertexData* Ogre::VertexAnimationTrack::getAssociatedVertexData
 * Signature:  ()Ogre_VertexData
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_VertexAnimationTrack__1getAssociatedVertexData_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.VertexAnimationTrack
 * Method:     setTargetMode()
 * Type:       non-virtual method
 * Definition: void Ogre::VertexAnimationTrack::setTargetMode
 * Signature:  (Ogre_VertexAnimationTrack_TargetMode)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_VertexAnimationTrack__1setTargetMode_1_1TargetModev (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint m
);

/*
 * Class:      org.ogre4j.VertexAnimationTrack
 * Method:     getTargetMode()
 * Type:       non-virtual method
 * Definition: TargetMode Ogre::VertexAnimationTrack::getTargetMode
 * Signature:  ()Ogre_VertexAnimationTrack_TargetMode
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_VertexAnimationTrack__1getTargetMode_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.VertexAnimationTrack
 * Method:     hasNonZeroKeyFrames()
 * Type:       virtual method
 * Definition: virtual bool Ogre::VertexAnimationTrack::hasNonZeroKeyFrames
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_VertexAnimationTrack__1hasNonZeroKeyFrames_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.VertexAnimationTrack
 * Method:     optimise()
 * Type:       virtual method
 * Definition: virtual void Ogre::VertexAnimationTrack::optimise
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_VertexAnimationTrack__1optimise (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.VertexAnimationTrack
 * Method:     _clone()
 * Type:       non-virtual method
 * Definition: VertexAnimationTrack* Ogre::VertexAnimationTrack::_clone
 * Signature:  (Ogre_Animation)Ogre_VertexAnimationTrack
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_VertexAnimationTrack__1_1clone_1_1Animationp_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong newParent
);

/*
 * Class:      org.ogre4j.VertexAnimationTrack
 * Method:     getHandle()
 * Type:       non-virtual method
 * Definition: unsigned short Ogre::AnimationTrack::getHandle
 * Signature:  ()S
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_VertexAnimationTrack__1getHandle_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.VertexAnimationTrack
 * Method:     getNumKeyFrames()
 * Type:       virtual method
 * Definition: virtual unsigned short Ogre::AnimationTrack::getNumKeyFrames
 * Signature:  ()S
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_VertexAnimationTrack__1getNumKeyFrames_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.VertexAnimationTrack
 * Method:     getKeyFrame()
 * Type:       virtual method
 * Definition: virtual KeyFrame* Ogre::AnimationTrack::getKeyFrame
 * Signature:  (S)Ogre_KeyFrame
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_VertexAnimationTrack__1getKeyFrame_1_1Hv_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint index
);

/*
 * Class:      org.ogre4j.VertexAnimationTrack
 * Method:     getKeyFramesAtTime()
 * Type:       virtual method
 * Definition: virtual Real Ogre::AnimationTrack::getKeyFramesAtTime
 * Signature:  (Ogre_TimeIndexOgre_KeyFrameOgre_KeyFrameS)float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_VertexAnimationTrack__1getKeyFramesAtTime_1_1TimeIndexRKeyFramepKeyFramepHp_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong timeIndex, 
  jlong keyFrame1, 
  jlong keyFrame2, 
  jlong firstKeyIndex
);

/*
 * Class:      org.ogre4j.VertexAnimationTrack
 * Method:     createKeyFrame()
 * Type:       virtual method
 * Definition: virtual KeyFrame* Ogre::AnimationTrack::createKeyFrame
 * Signature:  (float)Ogre_KeyFrame
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_VertexAnimationTrack__1createKeyFrame_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat timePos
);

/*
 * Class:      org.ogre4j.VertexAnimationTrack
 * Method:     removeKeyFrame()
 * Type:       virtual method
 * Definition: virtual void Ogre::AnimationTrack::removeKeyFrame
 * Signature:  (S)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_VertexAnimationTrack__1removeKeyFrame_1_1Hv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint index
);

/*
 * Class:      org.ogre4j.VertexAnimationTrack
 * Method:     removeAllKeyFrames()
 * Type:       virtual method
 * Definition: virtual void Ogre::AnimationTrack::removeAllKeyFrames
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_VertexAnimationTrack__1removeAllKeyFrames (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.VertexAnimationTrack
 * Method:     _keyFrameDataChanged()
 * Type:       virtual method
 * Definition: virtual void Ogre::AnimationTrack::_keyFrameDataChanged
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_VertexAnimationTrack__1_1keyFrameDataChanged_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.VertexAnimationTrack
 * Method:     _collectKeyFrameTimes()
 * Type:       virtual method
 * Definition: virtual void Ogre::AnimationTrack::_collectKeyFrameTimes
 * Signature:  (std_vector__Real__)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_VertexAnimationTrack__1_1collectKeyFrameTimes_1_1std_1vector_1_1Real_1_1r (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong keyFrameTimes
);

/*
 * Class:      org.ogre4j.VertexAnimationTrack
 * Method:     _buildKeyFrameIndexMap()
 * Type:       virtual method
 * Definition: virtual void Ogre::AnimationTrack::_buildKeyFrameIndexMap
 * Signature:  (std_vector__Real__)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_VertexAnimationTrack__1_1buildKeyFrameIndexMap_1_1std_1vector_1_1Real_1_1r (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong keyFrameTimes
);

/*
 * Class:      org.ogre4j.VertexAnimationTrack
 * Method:     setListener()
 * Type:       virtual method
 * Definition: virtual void Ogre::AnimationTrack::setListener
 * Signature:  (Ogre_AnimationTrack_Listener)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_VertexAnimationTrack__1setListener_1_1Listenerp (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong l
);

/*
 * Class:      org.ogre4j.VertexAnimationTrack
 * Method:     getParent()
 * Type:       non-virtual method
 * Definition: Animation* Ogre::AnimationTrack::getParent
 * Signature:  ()Ogre_Animation
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_VertexAnimationTrack__1getParent_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.VertexAnimationTrack
 * Method:     __delete()
 * Type:       destructor
 * Definition: Ogre::VertexAnimationTrack::__delete
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_VertexAnimationTrack__1_1delete (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif /*__Included_org_ogre4j_VertexAnimationTrack__*/
