///////////////////////////////////////////////////////////////////////////////
/// This source file is generated by XBiG (The XSLT Bindings Generator)
/// For the latest info, see http://sourceforge.net/projects/xbig/
///
/// Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
/// Also see acknowledgements in Readme.html
///
/// This program is free software; you can redistribute it and/or modify it under
/// the terms of the GNU Lesser General Public License as published by the Free Software
/// Foundation; either version 2 of the License, or (at your option) any later
/// version.
///
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
/// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
///
/// You should have received a copy of the GNU Lesser General Public License along with
/// this program; if not, write to the Free Software Foundation, Inc., 59 Temple
/// Place - Suite 330, Boston, MA 02111-1307, USA, or go to
/// http://www.gnu.org/copyleft/lesser.txt.
///
/// Machine generated file
///////////////////////////////////////////////////////////////////////////////



#ifdef WIN32
	// disable warnings
	#pragma warning (disable : 4267) // conversion from 'size_t' to 'jint'
#else

#endif


#ifndef __Included_org_ogre4j_MemoryDataStream__
#define __Included_org_ogre4j_MemoryDataStream__


#include "jni_base.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/*
 * Class:      org.ogre4j.MemoryDataStream
 * Method:     MemoryDataStream()
 * Type:       constructor
 * Definition: Ogre::MemoryDataStream::MemoryDataStream
 * Signature:  (VIZ)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_MemoryDataStream__1_1createMemoryDataStream_1_1vpivbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong pMem, 
  jint size, 
  jboolean freeOnClose
);

/*
 * Class:      org.ogre4j.MemoryDataStream
 * Method:     MemoryDataStream()
 * Type:       constructor
 * Definition: Ogre::MemoryDataStream::MemoryDataStream
 * Signature:  (std_stringVIZ)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_MemoryDataStream__1_1createMemoryDataStream_1_1StringRvpivbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jstring name, 
  jlong pMem, 
  jint size, 
  jboolean freeOnClose
);

/*
 * Class:      org.ogre4j.MemoryDataStream
 * Method:     MemoryDataStream()
 * Type:       constructor
 * Definition: Ogre::MemoryDataStream::MemoryDataStream
 * Signature:  (Ogre_DataStreamZ)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_MemoryDataStream__1_1createMemoryDataStream_1_1DataStreamrbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong sourceStream, 
  jboolean freeOnClose
);

/*
 * Class:      org.ogre4j.MemoryDataStream
 * Method:     MemoryDataStream()
 * Type:       constructor
 * Definition: Ogre::MemoryDataStream::MemoryDataStream
 * Signature:  (Ogre_DataStreamPtrZ)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_MemoryDataStream__1_1createMemoryDataStream_1_1DataStreamPtrrbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong sourceStream, 
  jboolean freeOnClose
);

/*
 * Class:      org.ogre4j.MemoryDataStream
 * Method:     MemoryDataStream()
 * Type:       constructor
 * Definition: Ogre::MemoryDataStream::MemoryDataStream
 * Signature:  (std_stringOgre_DataStreamZ)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_MemoryDataStream__1_1createMemoryDataStream_1_1StringRDataStreamrbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jstring name, 
  jlong sourceStream, 
  jboolean freeOnClose
);

/*
 * Class:      org.ogre4j.MemoryDataStream
 * Method:     MemoryDataStream()
 * Type:       constructor
 * Definition: Ogre::MemoryDataStream::MemoryDataStream
 * Signature:  (std_stringOgre_DataStreamPtrZ)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_MemoryDataStream__1_1createMemoryDataStream_1_1StringRDataStreamPtrRbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jstring name, 
  jlong sourceStream, 
  jboolean freeOnClose
);

/*
 * Class:      org.ogre4j.MemoryDataStream
 * Method:     MemoryDataStream()
 * Type:       constructor
 * Definition: Ogre::MemoryDataStream::MemoryDataStream
 * Signature:  (IZ)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_MemoryDataStream__1_1createMemoryDataStream_1_1ivbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jint size, 
  jboolean freeOnClose
);

/*
 * Class:      org.ogre4j.MemoryDataStream
 * Method:     MemoryDataStream()
 * Type:       constructor
 * Definition: Ogre::MemoryDataStream::MemoryDataStream
 * Signature:  (std_stringIZ)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_MemoryDataStream__1_1createMemoryDataStream_1_1StringRivbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jstring name, 
  jint size, 
  jboolean freeOnClose
);

/*
 * Class:      org.ogre4j.MemoryDataStream
 * Method:     getPtr()
 * Type:       non-virtual method
 * Definition: uchar* Ogre::MemoryDataStream::getPtr
 * Signature:  ()unsigned_char
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_MemoryDataStream__1getPtr (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.MemoryDataStream
 * Method:     getCurrentPtr()
 * Type:       non-virtual method
 * Definition: uchar* Ogre::MemoryDataStream::getCurrentPtr
 * Signature:  ()unsigned_char
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_MemoryDataStream__1getCurrentPtr (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.MemoryDataStream
 * Method:     read()
 * Type:       virtual method
 * Definition: size_t Ogre::MemoryDataStream::read
 * Signature:  (VI)I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_MemoryDataStream__1read_1_1vpiv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong buf, 
  jint count
);

/*
 * Class:      org.ogre4j.MemoryDataStream
 * Method:     readLine()
 * Type:       virtual method
 * Definition: size_t Ogre::MemoryDataStream::readLine
 * Signature:  (CIstd_string)I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_MemoryDataStream__1readLine_1_1cpivStringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong buf, 
  jint maxCount, 
  jstring delim
);

/*
 * Class:      org.ogre4j.MemoryDataStream
 * Method:     skipLine()
 * Type:       virtual method
 * Definition: size_t Ogre::MemoryDataStream::skipLine
 * Signature:  (std_string)I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_MemoryDataStream__1skipLine_1_1StringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring delim
);

/*
 * Class:      org.ogre4j.MemoryDataStream
 * Method:     skip()
 * Type:       virtual method
 * Definition: void Ogre::MemoryDataStream::skip
 * Signature:  (J)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_MemoryDataStream__1skip_1_1lv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong count
);

/*
 * Class:      org.ogre4j.MemoryDataStream
 * Method:     seek()
 * Type:       virtual method
 * Definition: void Ogre::MemoryDataStream::seek
 * Signature:  (I)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_MemoryDataStream__1seek_1_1iv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint pos
);

/*
 * Class:      org.ogre4j.MemoryDataStream
 * Method:     tell()
 * Type:       virtual method
 * Definition: size_t Ogre::MemoryDataStream::tell
 * Signature:  ()I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_MemoryDataStream__1tell_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.MemoryDataStream
 * Method:     eof()
 * Type:       virtual method
 * Definition: bool Ogre::MemoryDataStream::eof
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_MemoryDataStream__1eof_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.MemoryDataStream
 * Method:     close()
 * Type:       virtual method
 * Definition: void Ogre::MemoryDataStream::close
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_MemoryDataStream__1close (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.MemoryDataStream
 * Method:     setFreeOnClose()
 * Type:       non-virtual method
 * Definition: void Ogre::MemoryDataStream::setFreeOnClose
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_MemoryDataStream__1setFreeOnClose_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean free
);

/*
 * Class:      org.ogre4j.MemoryDataStream
 * Method:     getName()
 * Type:       non-virtual method
 * Definition: const String& Ogre::DataStream::getName
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_MemoryDataStream__1getName (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.MemoryDataStream
 * Method:     getLine()
 * Type:       virtual method
 * Definition: virtual String Ogre::DataStream::getLine
 * Signature:  (Z)std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_MemoryDataStream__1getLine_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean trimAfter
);

/*
 * Class:      org.ogre4j.MemoryDataStream
 * Method:     getAsString()
 * Type:       virtual method
 * Definition: virtual String Ogre::DataStream::getAsString
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_MemoryDataStream__1getAsString (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.MemoryDataStream
 * Method:     size()
 * Type:       non-virtual method
 * Definition: size_t Ogre::DataStream::size
 * Signature:  ()I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_MemoryDataStream__1size_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.MemoryDataStream
 * Method:     __delete()
 * Type:       destructor
 * Definition: Ogre::MemoryDataStream::__delete
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_MemoryDataStream__1_1delete (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif /*__Included_org_ogre4j_MemoryDataStream__*/
