///////////////////////////////////////////////////////////////////////////////
/// This source file is generated by XBiG (The XSLT Bindings Generator)
/// For the latest info, see http://sourceforge.net/projects/xbig/
///
/// Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
/// Also see acknowledgements in Readme.html
///
/// This program is free software; you can redistribute it and/or modify it under
/// the terms of the GNU Lesser General Public License as published by the Free Software
/// Foundation; either version 2 of the License, or (at your option) any later
/// version.
///
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
/// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
///
/// You should have received a copy of the GNU Lesser General Public License along with
/// this program; if not, write to the Free Software Foundation, Inc., 59 Temple
/// Place - Suite 330, Boston, MA 02111-1307, USA, or go to
/// http://www.gnu.org/copyleft/lesser.txt.
///
/// Machine generated file
///////////////////////////////////////////////////////////////////////////////



#ifdef WIN32
	// disable warnings
	#pragma warning (disable : 4267) // conversion from 'size_t' to 'jint'
#else

#endif


#ifndef __Included_org_ogre4j_RenderQueue__
#define __Included_org_ogre4j_RenderQueue__


#include "jni_base.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/*
 * Class:      org.ogre4j.RenderQueue
 * Method:     RenderQueue()
 * Type:       constructor
 * Definition: Ogre::RenderQueue::RenderQueue
 * Signature:  ()V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_RenderQueue__1_1createRenderQueue (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.RenderQueue
 * Method:     clear()
 * Type:       non-virtual method
 * Definition: void Ogre::RenderQueue::clear
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_RenderQueue__1clear_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean destroyPassMaps
);

/*
 * Class:      org.ogre4j.RenderQueue
 * Method:     getQueueGroup()
 * Type:       non-virtual method
 * Definition: RenderQueueGroup* Ogre::RenderQueue::getQueueGroup
 * Signature:  (unsigned_char)Ogre_RenderQueueGroup
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_RenderQueue__1getQueueGroup_1_1uint8v (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jshort qid
);

/*
 * Class:      org.ogre4j.RenderQueue
 * Method:     addRenderable()
 * Type:       non-virtual method
 * Definition: void Ogre::RenderQueue::addRenderable
 * Signature:  (Ogre_Renderableunsigned_charunsigned_short)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_RenderQueue__1addRenderable_1_1Renderablepuint8vushortv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong pRend, 
  jshort groupID, 
  jint priority
);

/*
 * Class:      org.ogre4j.RenderQueue
 * Method:     addRenderable()
 * Type:       non-virtual method
 * Definition: void Ogre::RenderQueue::addRenderable
 * Signature:  (Ogre_Renderableunsigned_char)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_RenderQueue__1addRenderable_1_1Renderablepuint8v (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong pRend, 
  jshort groupId
);

/*
 * Class:      org.ogre4j.RenderQueue
 * Method:     addRenderable()
 * Type:       non-virtual method
 * Definition: void Ogre::RenderQueue::addRenderable
 * Signature:  (Ogre_Renderable)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_RenderQueue__1addRenderable_1_1Renderablep (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong pRend
);

/*
 * Class:      org.ogre4j.RenderQueue
 * Method:     getDefaultQueueGroup()
 * Type:       non-virtual method
 * Definition: uint8 Ogre::RenderQueue::getDefaultQueueGroup
 * Signature:  ()unsigned_char
 */

JNIEXPORT jshort JNICALL Java_org_ogre4j_RenderQueue__1getDefaultQueueGroup_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.RenderQueue
 * Method:     setDefaultRenderablePriority()
 * Type:       non-virtual method
 * Definition: void Ogre::RenderQueue::setDefaultRenderablePriority
 * Signature:  (unsigned_short)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_RenderQueue__1setDefaultRenderablePriority_1_1ushortv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint priority
);

/*
 * Class:      org.ogre4j.RenderQueue
 * Method:     getDefaultRenderablePriority()
 * Type:       non-virtual method
 * Definition: ushort Ogre::RenderQueue::getDefaultRenderablePriority
 * Signature:  ()unsigned_short
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_RenderQueue__1getDefaultRenderablePriority_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.RenderQueue
 * Method:     setDefaultQueueGroup()
 * Type:       non-virtual method
 * Definition: void Ogre::RenderQueue::setDefaultQueueGroup
 * Signature:  (unsigned_char)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_RenderQueue__1setDefaultQueueGroup_1_1uint8v (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jshort grp
);

/*
 * Class:      org.ogre4j.RenderQueue
 * Method:     _getQueueGroupIterator()
 * Type:       non-virtual method
 * Definition: QueueGroupIterator Ogre::RenderQueue::_getQueueGroupIterator
 * Signature:  ()Ogre_RenderQueue_QueueGroupIterator
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_RenderQueue__1_1getQueueGroupIterator (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.RenderQueue
 * Method:     setSplitPassesByLightingType()
 * Type:       non-virtual method
 * Definition: void Ogre::RenderQueue::setSplitPassesByLightingType
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_RenderQueue__1setSplitPassesByLightingType_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean split
);

/*
 * Class:      org.ogre4j.RenderQueue
 * Method:     setSplitNoShadowPasses()
 * Type:       non-virtual method
 * Definition: void Ogre::RenderQueue::setSplitNoShadowPasses
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_RenderQueue__1setSplitNoShadowPasses_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean split
);

/*
 * Class:      org.ogre4j.RenderQueue
 * Method:     setShadowCastersCannotBeReceivers()
 * Type:       non-virtual method
 * Definition: void Ogre::RenderQueue::setShadowCastersCannotBeReceivers
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_RenderQueue__1setShadowCastersCannotBeReceivers_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean ind
);

/*
 * Class:      org.ogre4j.RenderQueue
 * Method:     setRenderableListener()
 * Type:       non-virtual method
 * Definition: void Ogre::RenderQueue::setRenderableListener
 * Signature:  (Ogre_RenderQueue_RenderableListener)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_RenderQueue__1setRenderableListener_1_1RenderableListenerp (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong listener
);

/*
 * Class:      org.ogre4j.RenderQueue
 * Method:     getRenderableListener()
 * Type:       non-virtual method
 * Definition: RenderableListener* Ogre::RenderQueue::getRenderableListener
 * Signature:  ()Ogre_RenderQueue_RenderableListener
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_RenderQueue__1getRenderableListener_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.RenderQueue
 * Method:     __delete()
 * Type:       destructor
 * Definition: Ogre::RenderQueue::__delete
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_RenderQueue__1_1delete (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif /*__Included_org_ogre4j_RenderQueue__*/
