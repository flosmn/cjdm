///////////////////////////////////////////////////////////////////////////////
/// This source file is generated by XBiG (The XSLT Bindings Generator)
/// For the latest info, see http://sourceforge.net/projects/xbig/
///
/// Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
/// Also see acknowledgements in Readme.html
///
/// This program is free software; you can redistribute it and/or modify it under
/// the terms of the GNU Lesser General Public License as published by the Free Software
/// Foundation; either version 2 of the License, or (at your option) any later
/// version.
///
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
/// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
///
/// You should have received a copy of the GNU Lesser General Public License along with
/// this program; if not, write to the Free Software Foundation, Inc., 59 Temple
/// Place - Suite 330, Boston, MA 02111-1307, USA, or go to
/// http://www.gnu.org/copyleft/lesser.txt.
///
/// Machine generated file
///////////////////////////////////////////////////////////////////////////////



#ifdef WIN32
	// disable warnings
	#pragma warning (disable : 4267) // conversion from 'size_t' to 'jint'
#else

#endif


#ifndef __Included_org_ogre4j_CompositorInstance_00024TargetOperation__
#define __Included_org_ogre4j_CompositorInstance_00024TargetOperation__


#include "jni_base.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/*
 * Class:      org.ogre4j.CompositorInstance.00024TargetOperation
 * Method:     TargetOperation()
 * Type:       constructor
 * Definition: Ogre::CompositorInstance::TargetOperation::TargetOperation
 * Signature:  ()V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_CompositorInstance_00024TargetOperation__1_1createTargetOperation (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.CompositorInstance.00024TargetOperation
 * Method:     TargetOperation()
 * Type:       constructor
 * Definition: Ogre::CompositorInstance::TargetOperation::TargetOperation
 * Signature:  (Ogre_RenderTarget)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_CompositorInstance_00024TargetOperation__1_1createTargetOperation_1_1RenderTargetp (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong target
);

/*
 * Class:      org.ogre4j.CompositorInstance.00024TargetOperation
 * Method:     __delete()
 * Type:       destructor
 * Definition: Ogre::CompositorInstance::TargetOperation::__delete
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_CompositorInstance_00024TargetOperation__1_1delete (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.CompositorInstance.00024TargetOperation
 * Method:     gettarget()
 * Type:       getter for public attribute
 * Definition: RenderTarget* Ogre::CompositorInstance::TargetOperation::target
 * Signature:  ()Ogre_RenderTarget
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_CompositorInstance_00024TargetOperation__1gettarget (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.CompositorInstance.00024TargetOperation
 * Method:     settarget()
 * Type:       setter for public attribute
 * Definition: RenderTarget* Ogre::CompositorInstance::TargetOperation::target
 * Signature:  (Ogre_RenderTarget)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_CompositorInstance_00024TargetOperation__1settarget (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong _jni_value_
);

/*
 * Class:      org.ogre4j.CompositorInstance.00024TargetOperation
 * Method:     getcurrentQueueGroupID()
 * Type:       getter for public attribute
 * Definition: int Ogre::CompositorInstance::TargetOperation::currentQueueGroupID
 * Signature:  ()I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_CompositorInstance_00024TargetOperation__1getcurrentQueueGroupID (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.CompositorInstance.00024TargetOperation
 * Method:     setcurrentQueueGroupID()
 * Type:       setter for public attribute
 * Definition: int Ogre::CompositorInstance::TargetOperation::currentQueueGroupID
 * Signature:  (I)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_CompositorInstance_00024TargetOperation__1setcurrentQueueGroupID (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint _jni_value_
);

/*
 * Class:      org.ogre4j.CompositorInstance.00024TargetOperation
 * Method:     getrenderSystemOperations()
 * Type:       getter for public attribute
 * Definition: RenderSystemOpPairs Ogre::CompositorInstance::TargetOperation::renderSystemOperations
 * Signature:  ()Ogre_CompositorInstance_RenderSystemOpPairs
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_CompositorInstance_00024TargetOperation__1getrenderSystemOperations (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.CompositorInstance.00024TargetOperation
 * Method:     setrenderSystemOperations()
 * Type:       setter for public attribute
 * Definition: RenderSystemOpPairs Ogre::CompositorInstance::TargetOperation::renderSystemOperations
 * Signature:  (Ogre_CompositorInstance_RenderSystemOpPairs)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_CompositorInstance_00024TargetOperation__1setrenderSystemOperations (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong _jni_value_
);

/*
 * Class:      org.ogre4j.CompositorInstance.00024TargetOperation
 * Method:     getvisibilityMask()
 * Type:       getter for public attribute
 * Definition: uint32 Ogre::CompositorInstance::TargetOperation::visibilityMask
 * Signature:  ()unsigned_int
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_CompositorInstance_00024TargetOperation__1getvisibilityMask (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.CompositorInstance.00024TargetOperation
 * Method:     setvisibilityMask()
 * Type:       setter for public attribute
 * Definition: uint32 Ogre::CompositorInstance::TargetOperation::visibilityMask
 * Signature:  (unsigned_int)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_CompositorInstance_00024TargetOperation__1setvisibilityMask (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong _jni_value_
);

/*
 * Class:      org.ogre4j.CompositorInstance.00024TargetOperation
 * Method:     getlodBias()
 * Type:       getter for public attribute
 * Definition: float Ogre::CompositorInstance::TargetOperation::lodBias
 * Signature:  ()F
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_CompositorInstance_00024TargetOperation__1getlodBias (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.CompositorInstance.00024TargetOperation
 * Method:     setlodBias()
 * Type:       setter for public attribute
 * Definition: float Ogre::CompositorInstance::TargetOperation::lodBias
 * Signature:  (F)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_CompositorInstance_00024TargetOperation__1setlodBias (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat _jni_value_
);

/*
 * Class:      org.ogre4j.CompositorInstance.00024TargetOperation
 * Method:     getrenderQueues()
 * Type:       getter for public attribute
 * Definition: RenderQueueBitSet Ogre::CompositorInstance::TargetOperation::renderQueues
 * Signature:  ()Ogre_CompositorInstance_TargetOperation_RenderQueueBitSet
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_CompositorInstance_00024TargetOperation__1getrenderQueues (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.CompositorInstance.00024TargetOperation
 * Method:     setrenderQueues()
 * Type:       setter for public attribute
 * Definition: RenderQueueBitSet Ogre::CompositorInstance::TargetOperation::renderQueues
 * Signature:  (Ogre_CompositorInstance_TargetOperation_RenderQueueBitSet)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_CompositorInstance_00024TargetOperation__1setrenderQueues (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong _jni_value_
);

/*
 * Class:      org.ogre4j.CompositorInstance.00024TargetOperation
 * Method:     getonlyInitial()
 * Type:       getter for public attribute
 * Definition: bool Ogre::CompositorInstance::TargetOperation::onlyInitial
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_CompositorInstance_00024TargetOperation__1getonlyInitial (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.CompositorInstance.00024TargetOperation
 * Method:     setonlyInitial()
 * Type:       setter for public attribute
 * Definition: bool Ogre::CompositorInstance::TargetOperation::onlyInitial
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_CompositorInstance_00024TargetOperation__1setonlyInitial (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean _jni_value_
);

/*
 * Class:      org.ogre4j.CompositorInstance.00024TargetOperation
 * Method:     gethasBeenRendered()
 * Type:       getter for public attribute
 * Definition: bool Ogre::CompositorInstance::TargetOperation::hasBeenRendered
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_CompositorInstance_00024TargetOperation__1gethasBeenRendered (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.CompositorInstance.00024TargetOperation
 * Method:     sethasBeenRendered()
 * Type:       setter for public attribute
 * Definition: bool Ogre::CompositorInstance::TargetOperation::hasBeenRendered
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_CompositorInstance_00024TargetOperation__1sethasBeenRendered (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean _jni_value_
);

/*
 * Class:      org.ogre4j.CompositorInstance.00024TargetOperation
 * Method:     getfindVisibleObjects()
 * Type:       getter for public attribute
 * Definition: bool Ogre::CompositorInstance::TargetOperation::findVisibleObjects
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_CompositorInstance_00024TargetOperation__1getfindVisibleObjects (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.CompositorInstance.00024TargetOperation
 * Method:     setfindVisibleObjects()
 * Type:       setter for public attribute
 * Definition: bool Ogre::CompositorInstance::TargetOperation::findVisibleObjects
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_CompositorInstance_00024TargetOperation__1setfindVisibleObjects (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean _jni_value_
);

/*
 * Class:      org.ogre4j.CompositorInstance.00024TargetOperation
 * Method:     getmaterialScheme()
 * Type:       getter for public attribute
 * Definition: String Ogre::CompositorInstance::TargetOperation::materialScheme
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_CompositorInstance_00024TargetOperation__1getmaterialScheme (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.CompositorInstance.00024TargetOperation
 * Method:     setmaterialScheme()
 * Type:       setter for public attribute
 * Definition: String Ogre::CompositorInstance::TargetOperation::materialScheme
 * Signature:  (std_string)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_CompositorInstance_00024TargetOperation__1setmaterialScheme (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring _jni_value_
);

/*
 * Class:      org.ogre4j.CompositorInstance.00024TargetOperation
 * Method:     getshadowsEnabled()
 * Type:       getter for public attribute
 * Definition: bool Ogre::CompositorInstance::TargetOperation::shadowsEnabled
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_CompositorInstance_00024TargetOperation__1getshadowsEnabled (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.CompositorInstance.00024TargetOperation
 * Method:     setshadowsEnabled()
 * Type:       setter for public attribute
 * Definition: bool Ogre::CompositorInstance::TargetOperation::shadowsEnabled
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_CompositorInstance_00024TargetOperation__1setshadowsEnabled (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean _jni_value_
);

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif /*__Included_org_ogre4j_CompositorInstance_00024TargetOperation__*/
