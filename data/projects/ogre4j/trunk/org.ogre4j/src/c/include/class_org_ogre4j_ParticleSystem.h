///////////////////////////////////////////////////////////////////////////////
/// This source file is generated by XBiG (The XSLT Bindings Generator)
/// For the latest info, see http://sourceforge.net/projects/xbig/
///
/// Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
/// Also see acknowledgements in Readme.html
///
/// This program is free software; you can redistribute it and/or modify it under
/// the terms of the GNU Lesser General Public License as published by the Free Software
/// Foundation; either version 2 of the License, or (at your option) any later
/// version.
///
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
/// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
///
/// You should have received a copy of the GNU Lesser General Public License along with
/// this program; if not, write to the Free Software Foundation, Inc., 59 Temple
/// Place - Suite 330, Boston, MA 02111-1307, USA, or go to
/// http://www.gnu.org/copyleft/lesser.txt.
///
/// Machine generated file
///////////////////////////////////////////////////////////////////////////////



#ifdef WIN32
	// disable warnings
	#pragma warning (disable : 4267) // conversion from 'size_t' to 'jint'
#else

#endif


#ifndef __Included_org_ogre4j_ParticleSystem__
#define __Included_org_ogre4j_ParticleSystem__


#include "jni_base.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     ParticleSystem()
 * Type:       constructor
 * Definition: Ogre::ParticleSystem::ParticleSystem
 * Signature:  ()V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1_1createParticleSystem (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     ParticleSystem()
 * Type:       constructor
 * Definition: Ogre::ParticleSystem::ParticleSystem
 * Signature:  (std_stringstd_string)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1_1createParticleSystem_1_1StringRStringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jstring name, 
  jstring resourceGroupName
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     setRenderer()
 * Type:       non-virtual method
 * Definition: void Ogre::ParticleSystem::setRenderer
 * Signature:  (std_string)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1setRenderer_1_1StringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring typeName
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getRenderer()
 * Type:       non-virtual method
 * Definition: ParticleSystemRenderer* Ogre::ParticleSystem::getRenderer
 * Signature:  ()Ogre_ParticleSystemRenderer
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1getRenderer_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getRendererName()
 * Type:       non-virtual method
 * Definition: const String& Ogre::ParticleSystem::getRendererName
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_ParticleSystem__1getRendererName_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     addEmitter()
 * Type:       non-virtual method
 * Definition: ParticleEmitter* Ogre::ParticleSystem::addEmitter
 * Signature:  (std_string)Ogre_ParticleEmitter
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1addEmitter_1_1StringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring emitterType
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getEmitter()
 * Type:       non-virtual method
 * Definition: ParticleEmitter* Ogre::ParticleSystem::getEmitter
 * Signature:  (S)Ogre_ParticleEmitter
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1getEmitter_1_1Hv_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint index
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getNumEmitters()
 * Type:       non-virtual method
 * Definition: unsigned short Ogre::ParticleSystem::getNumEmitters
 * Signature:  ()S
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_ParticleSystem__1getNumEmitters_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     removeEmitter()
 * Type:       non-virtual method
 * Definition: void Ogre::ParticleSystem::removeEmitter
 * Signature:  (S)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1removeEmitter_1_1Hv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint index
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     removeAllEmitters()
 * Type:       non-virtual method
 * Definition: void Ogre::ParticleSystem::removeAllEmitters
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1removeAllEmitters (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     addAffector()
 * Type:       non-virtual method
 * Definition: ParticleAffector* Ogre::ParticleSystem::addAffector
 * Signature:  (std_string)Ogre_ParticleAffector
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1addAffector_1_1StringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring affectorType
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getAffector()
 * Type:       non-virtual method
 * Definition: ParticleAffector* Ogre::ParticleSystem::getAffector
 * Signature:  (S)Ogre_ParticleAffector
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1getAffector_1_1Hv_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint index
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getNumAffectors()
 * Type:       non-virtual method
 * Definition: unsigned short Ogre::ParticleSystem::getNumAffectors
 * Signature:  ()S
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_ParticleSystem__1getNumAffectors_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     removeAffector()
 * Type:       non-virtual method
 * Definition: void Ogre::ParticleSystem::removeAffector
 * Signature:  (S)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1removeAffector_1_1Hv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint index
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     removeAllAffectors()
 * Type:       non-virtual method
 * Definition: void Ogre::ParticleSystem::removeAllAffectors
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1removeAllAffectors (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     clear()
 * Type:       non-virtual method
 * Definition: void Ogre::ParticleSystem::clear
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1clear (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getNumParticles()
 * Type:       non-virtual method
 * Definition: size_t Ogre::ParticleSystem::getNumParticles
 * Signature:  ()I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_ParticleSystem__1getNumParticles_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     createParticle()
 * Type:       non-virtual method
 * Definition: Particle* Ogre::ParticleSystem::createParticle
 * Signature:  ()Ogre_Particle
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1createParticle (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     createEmitterParticle()
 * Type:       non-virtual method
 * Definition: Particle* Ogre::ParticleSystem::createEmitterParticle
 * Signature:  (std_string)Ogre_Particle
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1createEmitterParticle_1_1StringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring emitterName
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getParticle()
 * Type:       non-virtual method
 * Definition: Particle* Ogre::ParticleSystem::getParticle
 * Signature:  (I)Ogre_Particle
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1getParticle_1_1iv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint index
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getParticleQuota()
 * Type:       non-virtual method
 * Definition: size_t Ogre::ParticleSystem::getParticleQuota
 * Signature:  ()I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_ParticleSystem__1getParticleQuota_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     setParticleQuota()
 * Type:       non-virtual method
 * Definition: void Ogre::ParticleSystem::setParticleQuota
 * Signature:  (I)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1setParticleQuota_1_1iv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint quota
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getEmittedEmitterQuota()
 * Type:       non-virtual method
 * Definition: size_t Ogre::ParticleSystem::getEmittedEmitterQuota
 * Signature:  ()I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_ParticleSystem__1getEmittedEmitterQuota_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     setEmittedEmitterQuota()
 * Type:       non-virtual method
 * Definition: void Ogre::ParticleSystem::setEmittedEmitterQuota
 * Signature:  (I)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1setEmittedEmitterQuota_1_1iv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint quota
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     operator=()
 * Type:       non-virtual method
 * Definition: ParticleSystem& Ogre::ParticleSystem::operator=
 * Signature:  (Ogre_ParticleSystem)Ogre_ParticleSystem
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1operatorAssignment_1_1ParticleSystemR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong rhs
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     _update()
 * Type:       non-virtual method
 * Definition: void Ogre::ParticleSystem::_update
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1_1update_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat timeElapsed
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     _getIterator()
 * Type:       non-virtual method
 * Definition: ParticleIterator Ogre::ParticleSystem::_getIterator
 * Signature:  ()Ogre_ParticleIterator
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1_1getIterator (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     setMaterialName()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleSystem::setMaterialName
 * Signature:  (std_string)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1setMaterialName_1_1StringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getMaterialName()
 * Type:       virtual method
 * Definition: virtual const String& Ogre::ParticleSystem::getMaterialName
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_ParticleSystem__1getMaterialName_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     _notifyCurrentCamera()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleSystem::_notifyCurrentCamera
 * Signature:  (Ogre_Camera)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1_1notifyCurrentCamera_1_1Camerap (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong cam
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     _notifyAttached()
 * Type:       virtual method
 * Definition: void Ogre::ParticleSystem::_notifyAttached
 * Signature:  (Ogre_NodeZ)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1_1notifyAttached_1_1Nodepbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong parent, 
  jboolean isTagPoint
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getBoundingBox()
 * Type:       virtual method
 * Definition: virtual const AxisAlignedBox& Ogre::ParticleSystem::getBoundingBox
 * Signature:  ()Ogre_AxisAlignedBox
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1getBoundingBox_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getBoundingRadius()
 * Type:       virtual method
 * Definition: virtual Real Ogre::ParticleSystem::getBoundingRadius
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_ParticleSystem__1getBoundingRadius_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     _updateRenderQueue()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleSystem::_updateRenderQueue
 * Signature:  (Ogre_RenderQueue)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1_1updateRenderQueue_1_1RenderQueuep (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong queue
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     visitRenderables()
 * Type:       virtual method
 * Definition: void Ogre::ParticleSystem::visitRenderables
 * Signature:  (Ogre_Renderable_VisitorZ)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1visitRenderables_1_1Renderable_1Visitorpbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong visitor, 
  jboolean debugRenderables
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     fastForward()
 * Type:       non-virtual method
 * Definition: void Ogre::ParticleSystem::fastForward
 * Signature:  (floatfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1fastForward_1_1RealvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat time, 
  jfloat interval
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     setSpeedFactor()
 * Type:       non-virtual method
 * Definition: void Ogre::ParticleSystem::setSpeedFactor
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1setSpeedFactor_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat speedFactor
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getSpeedFactor()
 * Type:       non-virtual method
 * Definition: Real Ogre::ParticleSystem::getSpeedFactor
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_ParticleSystem__1getSpeedFactor_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     setIterationInterval()
 * Type:       non-virtual method
 * Definition: void Ogre::ParticleSystem::setIterationInterval
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1setIterationInterval_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat iterationInterval
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getIterationInterval()
 * Type:       non-virtual method
 * Definition: Real Ogre::ParticleSystem::getIterationInterval
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_ParticleSystem__1getIterationInterval_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     setNonVisibleUpdateTimeout()
 * Type:       non-virtual method
 * Definition: void Ogre::ParticleSystem::setNonVisibleUpdateTimeout
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1setNonVisibleUpdateTimeout_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat timeout
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getNonVisibleUpdateTimeout()
 * Type:       non-virtual method
 * Definition: Real Ogre::ParticleSystem::getNonVisibleUpdateTimeout
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_ParticleSystem__1getNonVisibleUpdateTimeout_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getMovableType()
 * Type:       virtual method
 * Definition: const String& Ogre::ParticleSystem::getMovableType
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_ParticleSystem__1getMovableType_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     _notifyParticleResized()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleSystem::_notifyParticleResized
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1_1notifyParticleResized (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     _notifyParticleRotated()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleSystem::_notifyParticleRotated
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1_1notifyParticleRotated (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     setDefaultDimensions()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleSystem::setDefaultDimensions
 * Signature:  (floatfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1setDefaultDimensions_1_1RealvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat width, 
  jfloat height
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     setDefaultWidth()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleSystem::setDefaultWidth
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1setDefaultWidth_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat width
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getDefaultWidth()
 * Type:       virtual method
 * Definition: virtual Real Ogre::ParticleSystem::getDefaultWidth
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_ParticleSystem__1getDefaultWidth_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     setDefaultHeight()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleSystem::setDefaultHeight
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1setDefaultHeight_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat height
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getDefaultHeight()
 * Type:       virtual method
 * Definition: virtual Real Ogre::ParticleSystem::getDefaultHeight
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_ParticleSystem__1getDefaultHeight_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getCullIndividually()
 * Type:       virtual method
 * Definition: virtual bool Ogre::ParticleSystem::getCullIndividually
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_ParticleSystem__1getCullIndividually_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     setCullIndividually()
 * Type:       virtual method
 * Definition: virtual void Ogre::ParticleSystem::setCullIndividually
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1setCullIndividually_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean cullIndividual
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getResourceGroupName()
 * Type:       virtual method
 * Definition: virtual const String& Ogre::ParticleSystem::getResourceGroupName
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_ParticleSystem__1getResourceGroupName_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getOrigin()
 * Type:       non-virtual method
 * Definition: const String& Ogre::ParticleSystem::getOrigin
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_ParticleSystem__1getOrigin_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     _notifyOrigin()
 * Type:       non-virtual method
 * Definition: void Ogre::ParticleSystem::_notifyOrigin
 * Signature:  (std_string)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1_1notifyOrigin_1_1StringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring origin
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     setRenderQueueGroup()
 * Type:       virtual method
 * Definition: void Ogre::ParticleSystem::setRenderQueueGroup
 * Signature:  (unsigned_char)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1setRenderQueueGroup_1_1uint8v (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jshort queueID
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     setSortingEnabled()
 * Type:       non-virtual method
 * Definition: void Ogre::ParticleSystem::setSortingEnabled
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1setSortingEnabled_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean enabled
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getSortingEnabled()
 * Type:       non-virtual method
 * Definition: bool Ogre::ParticleSystem::getSortingEnabled
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_ParticleSystem__1getSortingEnabled_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     setBounds()
 * Type:       non-virtual method
 * Definition: void Ogre::ParticleSystem::setBounds
 * Signature:  (Ogre_AxisAlignedBox)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1setBounds_1_1AxisAlignedBoxR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong aabb
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     setBoundsAutoUpdated()
 * Type:       non-virtual method
 * Definition: void Ogre::ParticleSystem::setBoundsAutoUpdated
 * Signature:  (Zfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1setBoundsAutoUpdated_1_1bvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean autoUpdate, 
  jfloat stopIn
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     setKeepParticlesInLocalSpace()
 * Type:       non-virtual method
 * Definition: void Ogre::ParticleSystem::setKeepParticlesInLocalSpace
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1setKeepParticlesInLocalSpace_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean keepLocal
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getKeepParticlesInLocalSpace()
 * Type:       non-virtual method
 * Definition: bool Ogre::ParticleSystem::getKeepParticlesInLocalSpace
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_ParticleSystem__1getKeepParticlesInLocalSpace_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     _updateBounds()
 * Type:       non-virtual method
 * Definition: void Ogre::ParticleSystem::_updateBounds
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1_1updateBounds (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getTypeFlags()
 * Type:       virtual method
 * Definition: uint32 Ogre::ParticleSystem::getTypeFlags
 * Signature:  ()unsigned_int
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1getTypeFlags_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     setDefaultIterationInterval()
 * Type:       static method
 * Definition: static void Ogre::ParticleSystem::setDefaultIterationInterval
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1setDefaultIterationInterval_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jfloat iterationInterval
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getDefaultIterationInterval()
 * Type:       static method
 * Definition: static Real Ogre::ParticleSystem::getDefaultIterationInterval
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_ParticleSystem__1getDefaultIterationInterval (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     setDefaultNonVisibleUpdateTimeout()
 * Type:       static method
 * Definition: static void Ogre::ParticleSystem::setDefaultNonVisibleUpdateTimeout
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1setDefaultNonVisibleUpdateTimeout_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jfloat timeout
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getDefaultNonVisibleUpdateTimeout()
 * Type:       static method
 * Definition: static Real Ogre::ParticleSystem::getDefaultNonVisibleUpdateTimeout
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_ParticleSystem__1getDefaultNonVisibleUpdateTimeout (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getParamDictionary()
 * Type:       non-virtual method
 * Definition: ParamDictionary* Ogre::StringInterface::getParamDictionary
 * Signature:  ()Ogre_ParamDictionary
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1getParamDictionary (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getParamDictionary_const()
 * Type:       non-virtual method
 * Definition: const ParamDictionary* Ogre::StringInterface::getParamDictionary
 * Signature:  ()Ogre_ParamDictionary
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1getParamDictionary_1const_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getParameters()
 * Type:       non-virtual method
 * Definition: const ParameterList& Ogre::StringInterface::getParameters
 * Signature:  ()Ogre_ParameterList
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1getParameters_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     setParameter()
 * Type:       virtual method
 * Definition: virtual bool Ogre::StringInterface::setParameter
 * Signature:  (std_stringstd_string)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_ParticleSystem__1setParameter_1_1StringRStringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name, 
  jstring value
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     setParameterList()
 * Type:       virtual method
 * Definition: virtual void Ogre::StringInterface::setParameterList
 * Signature:  (Ogre_NameValuePairList)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1setParameterList_1_1NameValuePairListR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong paramList
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getParameter()
 * Type:       virtual method
 * Definition: virtual String Ogre::StringInterface::getParameter
 * Signature:  (std_string)std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_ParticleSystem__1getParameter_1_1StringR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     copyParametersTo()
 * Type:       virtual method
 * Definition: virtual void Ogre::StringInterface::copyParametersTo
 * Signature:  (Ogre_StringInterface)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1copyParametersTo_1_1StringInterfacep_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong dest
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     cleanupDictionary()
 * Type:       static method
 * Definition: static void Ogre::StringInterface::cleanupDictionary
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1cleanupDictionary (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     _notifyCreator()
 * Type:       virtual method
 * Definition: virtual void Ogre::MovableObject::_notifyCreator
 * Signature:  (Ogre_MovableObjectFactory)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1_1notifyCreator_1_1MovableObjectFactoryp (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong fact
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     _getCreator()
 * Type:       virtual method
 * Definition: virtual MovableObjectFactory* Ogre::MovableObject::_getCreator
 * Signature:  ()Ogre_MovableObjectFactory
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1_1getCreator_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     _notifyManager()
 * Type:       virtual method
 * Definition: virtual void Ogre::MovableObject::_notifyManager
 * Signature:  (Ogre_SceneManager)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1_1notifyManager_1_1SceneManagerp (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong man
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     _getManager()
 * Type:       virtual method
 * Definition: virtual SceneManager* Ogre::MovableObject::_getManager
 * Signature:  ()Ogre_SceneManager
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1_1getManager_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getName()
 * Type:       virtual method
 * Definition: virtual const String& Ogre::MovableObject::getName
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_ParticleSystem__1getName_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getParentNode()
 * Type:       virtual method
 * Definition: virtual Node* Ogre::MovableObject::getParentNode
 * Signature:  ()Ogre_Node
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1getParentNode_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getParentSceneNode()
 * Type:       virtual method
 * Definition: virtual SceneNode* Ogre::MovableObject::getParentSceneNode
 * Signature:  ()Ogre_SceneNode
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1getParentSceneNode_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     isAttached()
 * Type:       virtual method
 * Definition: virtual bool Ogre::MovableObject::isAttached
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_ParticleSystem__1isAttached_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     detatchFromParent()
 * Type:       virtual method
 * Definition: virtual void Ogre::MovableObject::detatchFromParent
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1detatchFromParent (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     isInScene()
 * Type:       virtual method
 * Definition: virtual bool Ogre::MovableObject::isInScene
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_ParticleSystem__1isInScene_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     _notifyMoved()
 * Type:       virtual method
 * Definition: virtual void Ogre::MovableObject::_notifyMoved
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1_1notifyMoved (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getWorldBoundingBox()
 * Type:       virtual method
 * Definition: virtual const AxisAlignedBox& Ogre::MovableObject::getWorldBoundingBox
 * Signature:  (Z)Ogre_AxisAlignedBox
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1getWorldBoundingBox_1_1bv_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean derive
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getWorldBoundingSphere()
 * Type:       virtual method
 * Definition: virtual const Sphere& Ogre::MovableObject::getWorldBoundingSphere
 * Signature:  (Z)Ogre_Sphere
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1getWorldBoundingSphere_1_1bv_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean derive
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     setVisible()
 * Type:       virtual method
 * Definition: virtual void Ogre::MovableObject::setVisible
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1setVisible_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean visible
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getVisible()
 * Type:       virtual method
 * Definition: virtual bool Ogre::MovableObject::getVisible
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_ParticleSystem__1getVisible_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     isVisible()
 * Type:       virtual method
 * Definition: virtual bool Ogre::MovableObject::isVisible
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_ParticleSystem__1isVisible_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     setRenderingDistance()
 * Type:       virtual method
 * Definition: virtual void Ogre::MovableObject::setRenderingDistance
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1setRenderingDistance_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat dist
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getRenderingDistance()
 * Type:       virtual method
 * Definition: virtual Real Ogre::MovableObject::getRenderingDistance
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_ParticleSystem__1getRenderingDistance_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     setUserObject()
 * Type:       virtual method
 * Definition: virtual void Ogre::MovableObject::setUserObject
 * Signature:  (Ogre_UserDefinedObject)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1setUserObject_1_1UserDefinedObjectp (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong obj
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getUserObject()
 * Type:       virtual method
 * Definition: virtual UserDefinedObject* Ogre::MovableObject::getUserObject
 * Signature:  ()Ogre_UserDefinedObject
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1getUserObject (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     setUserAny()
 * Type:       virtual method
 * Definition: virtual void Ogre::MovableObject::setUserAny
 * Signature:  (Ogre_Any)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1setUserAny_1_1AnyR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong anything
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getUserAny()
 * Type:       virtual method
 * Definition: virtual const Any& Ogre::MovableObject::getUserAny
 * Signature:  ()Ogre_Any
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1getUserAny_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getRenderQueueGroup()
 * Type:       virtual method
 * Definition: virtual uint8 Ogre::MovableObject::getRenderQueueGroup
 * Signature:  ()unsigned_char
 */

JNIEXPORT jshort JNICALL Java_org_ogre4j_ParticleSystem__1getRenderQueueGroup_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     _getParentNodeFullTransform()
 * Type:       virtual method
 * Definition: virtual const Matrix4& Ogre::MovableObject::_getParentNodeFullTransform
 * Signature:  ()Ogre_Matrix4
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1_1getParentNodeFullTransform_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     setQueryFlags()
 * Type:       virtual method
 * Definition: virtual void Ogre::MovableObject::setQueryFlags
 * Signature:  (unsigned_int)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1setQueryFlags_1_1uint32v (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong flags
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     addQueryFlags()
 * Type:       virtual method
 * Definition: virtual void Ogre::MovableObject::addQueryFlags
 * Signature:  (unsigned_int)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1addQueryFlags_1_1uint32v (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong flags
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     removeQueryFlags()
 * Type:       virtual method
 * Definition: virtual void Ogre::MovableObject::removeQueryFlags
 * Signature:  (J)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1removeQueryFlags_1_1Lv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong flags
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getQueryFlags()
 * Type:       virtual method
 * Definition: virtual uint32 Ogre::MovableObject::getQueryFlags
 * Signature:  ()unsigned_int
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1getQueryFlags_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     setVisibilityFlags()
 * Type:       virtual method
 * Definition: virtual void Ogre::MovableObject::setVisibilityFlags
 * Signature:  (unsigned_int)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1setVisibilityFlags_1_1uint32v (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong flags
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     addVisibilityFlags()
 * Type:       virtual method
 * Definition: virtual void Ogre::MovableObject::addVisibilityFlags
 * Signature:  (unsigned_int)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1addVisibilityFlags_1_1uint32v (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong flags
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     removeVisibilityFlags()
 * Type:       virtual method
 * Definition: virtual void Ogre::MovableObject::removeVisibilityFlags
 * Signature:  (unsigned_int)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1removeVisibilityFlags_1_1uint32v (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong flags
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getVisibilityFlags()
 * Type:       virtual method
 * Definition: virtual uint32 Ogre::MovableObject::getVisibilityFlags
 * Signature:  ()unsigned_int
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1getVisibilityFlags_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     setListener()
 * Type:       virtual method
 * Definition: virtual void Ogre::MovableObject::setListener
 * Signature:  (Ogre_MovableObject_Listener)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1setListener_1_1Listenerp (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong listener
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getListener()
 * Type:       virtual method
 * Definition: virtual Listener* Ogre::MovableObject::getListener
 * Signature:  ()Ogre_MovableObject_Listener
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1getListener_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     queryLights()
 * Type:       virtual method
 * Definition: virtual const LightList& Ogre::MovableObject::queryLights
 * Signature:  ()Ogre_LightList
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1queryLights_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     _getLightList()
 * Type:       virtual method
 * Definition: virtual LightList* Ogre::MovableObject::_getLightList
 * Signature:  ()Ogre_LightList
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1_1getLightList (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getEdgeList()
 * Type:       virtual method
 * Definition: EdgeData* Ogre::MovableObject::getEdgeList
 * Signature:  ()Ogre_EdgeData
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1getEdgeList (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     hasEdgeList()
 * Type:       virtual method
 * Definition: bool Ogre::MovableObject::hasEdgeList
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_ParticleSystem__1hasEdgeList (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getShadowVolumeRenderableIterator()
 * Type:       virtual method
 * Definition: ShadowRenderableListIterator Ogre::MovableObject::getShadowVolumeRenderableIterator
 * Signature:  (Ogre_ShadowTechniqueOgre_LightOgre_HardwareIndexBufferSharedPtrZfloatJ)Ogre_ShadowCaster_ShadowRenderableListIterator
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1getShadowVolumeRenderableIterator_1_1ShadowTechniquevLightPHardwareIndexBufferSharedPtrpbvRealvLv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint shadowTechnique, 
  jlong light, 
  jlong indexBuffer, 
  jboolean extrudeVertices, 
  jfloat extrusionDist, 
  jlong flags
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getLightCapBounds()
 * Type:       virtual method
 * Definition: const AxisAlignedBox& Ogre::MovableObject::getLightCapBounds
 * Signature:  ()Ogre_AxisAlignedBox
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1getLightCapBounds_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getDarkCapBounds()
 * Type:       virtual method
 * Definition: const AxisAlignedBox& Ogre::MovableObject::getDarkCapBounds
 * Signature:  (Ogre_Lightfloat)Ogre_AxisAlignedBox
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1getDarkCapBounds_1_1LightRRealv_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong light, 
  jfloat dirLightExtrusionDist
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     setCastShadows()
 * Type:       non-virtual method
 * Definition: void Ogre::MovableObject::setCastShadows
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1setCastShadows_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean enabled
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getCastShadows()
 * Type:       virtual method
 * Definition: bool Ogre::MovableObject::getCastShadows
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_ParticleSystem__1getCastShadows_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getPointExtrusionDistance()
 * Type:       virtual method
 * Definition: Real Ogre::MovableObject::getPointExtrusionDistance
 * Signature:  (Ogre_Light)float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_ParticleSystem__1getPointExtrusionDistance_1_1LightP_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong l
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     setDebugDisplayEnabled()
 * Type:       virtual method
 * Definition: virtual void Ogre::MovableObject::setDebugDisplayEnabled
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1setDebugDisplayEnabled_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean enabled
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     isDebugDisplayEnabled()
 * Type:       virtual method
 * Definition: virtual bool Ogre::MovableObject::isDebugDisplayEnabled
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_ParticleSystem__1isDebugDisplayEnabled_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     setDefaultQueryFlags()
 * Type:       static method
 * Definition: static void Ogre::MovableObject::setDefaultQueryFlags
 * Signature:  (unsigned_int)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1setDefaultQueryFlags_1_1uint32v (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong flags
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getDefaultQueryFlags()
 * Type:       static method
 * Definition: static uint32 Ogre::MovableObject::getDefaultQueryFlags
 * Signature:  ()unsigned_int
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1getDefaultQueryFlags (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     setDefaultVisibilityFlags()
 * Type:       static method
 * Definition: static void Ogre::MovableObject::setDefaultVisibilityFlags
 * Signature:  (unsigned_int)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1setDefaultVisibilityFlags_1_1uint32v (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong flags
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getDefaultVisibilityFlags()
 * Type:       static method
 * Definition: static uint32 Ogre::MovableObject::getDefaultVisibilityFlags
 * Signature:  ()unsigned_int
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1getDefaultVisibilityFlags (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     extrudeVertices()
 * Type:       static method
 * Definition: static void Ogre::ShadowCaster::extrudeVertices
 * Signature:  (Ogre_HardwareVertexBufferSharedPtrIOgre_Vector4float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1extrudeVertices_1_1HardwareVertexBufferSharedPtrRivVector4RRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong vertexBuffer, 
  jint originalVertexCount, 
  jlong lightPos, 
  jfloat extrudeDist
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     getAnimableValueNames()
 * Type:       non-virtual method
 * Definition: const StringVector& Ogre::AnimableObject::getAnimableValueNames
 * Signature:  ()Ogre_StringVector
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1getAnimableValueNames_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     createAnimableValue()
 * Type:       virtual method
 * Definition: virtual AnimableValuePtr Ogre::AnimableObject::createAnimableValue
 * Signature:  (std_string)Ogre_AnimableValuePtr
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ParticleSystem__1createAnimableValue_1_1StringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring valueName
);

/*
 * Class:      org.ogre4j.ParticleSystem
 * Method:     __delete()
 * Type:       destructor
 * Definition: Ogre::ParticleSystem::__delete
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ParticleSystem__1_1delete (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif /*__Included_org_ogre4j_ParticleSystem__*/
