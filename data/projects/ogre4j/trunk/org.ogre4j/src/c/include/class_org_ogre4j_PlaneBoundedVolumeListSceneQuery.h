///////////////////////////////////////////////////////////////////////////////
/// This source file is generated by XBiG (The XSLT Bindings Generator)
/// For the latest info, see http://sourceforge.net/projects/xbig/
///
/// Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
/// Also see acknowledgements in Readme.html
///
/// This program is free software; you can redistribute it and/or modify it under
/// the terms of the GNU Lesser General Public License as published by the Free Software
/// Foundation; either version 2 of the License, or (at your option) any later
/// version.
///
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
/// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
///
/// You should have received a copy of the GNU Lesser General Public License along with
/// this program; if not, write to the Free Software Foundation, Inc., 59 Temple
/// Place - Suite 330, Boston, MA 02111-1307, USA, or go to
/// http://www.gnu.org/copyleft/lesser.txt.
///
/// Machine generated file
///////////////////////////////////////////////////////////////////////////////



#ifdef WIN32
	// disable warnings
	#pragma warning (disable : 4267) // conversion from 'size_t' to 'jint'
#else

#endif


#ifndef __Included_org_ogre4j_PlaneBoundedVolumeListSceneQuery__
#define __Included_org_ogre4j_PlaneBoundedVolumeListSceneQuery__


#include "jni_base.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/*
 * Class:      org.ogre4j.PlaneBoundedVolumeListSceneQuery
 * Method:     setVolumes()
 * Type:       non-virtual method
 * Definition: void Ogre::PlaneBoundedVolumeListSceneQuery::setVolumes
 * Signature:  (Ogre_PlaneBoundedVolumeList)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_PlaneBoundedVolumeListSceneQuery__1setVolumes_1_1PlaneBoundedVolumeListR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong volumes
);

/*
 * Class:      org.ogre4j.PlaneBoundedVolumeListSceneQuery
 * Method:     getVolumes()
 * Type:       non-virtual method
 * Definition: const PlaneBoundedVolumeList& Ogre::PlaneBoundedVolumeListSceneQuery::getVolumes
 * Signature:  ()Ogre_PlaneBoundedVolumeList
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_PlaneBoundedVolumeListSceneQuery__1getVolumes_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.PlaneBoundedVolumeListSceneQuery
 * Method:     execute()
 * Type:       virtual method
 * Definition: virtual SceneQueryResult& Ogre::RegionSceneQuery::execute
 * Signature:  ()Ogre_SceneQueryResult
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_PlaneBoundedVolumeListSceneQuery__1execute (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.PlaneBoundedVolumeListSceneQuery
 * Method:     execute()
 * Type:       pure virtual method
 * Definition: virtual void Ogre::RegionSceneQuery::execute
 * Signature:  (Ogre_SceneQueryListener)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_PlaneBoundedVolumeListSceneQuery__1execute_1_1SceneQueryListenerp (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong listener
);

/*
 * Class:      org.ogre4j.PlaneBoundedVolumeListSceneQuery
 * Method:     getLastResults()
 * Type:       virtual method
 * Definition: virtual SceneQueryResult& Ogre::RegionSceneQuery::getLastResults
 * Signature:  ()Ogre_SceneQueryResult
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_PlaneBoundedVolumeListSceneQuery__1getLastResults_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.PlaneBoundedVolumeListSceneQuery
 * Method:     clearResults()
 * Type:       virtual method
 * Definition: virtual void Ogre::RegionSceneQuery::clearResults
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_PlaneBoundedVolumeListSceneQuery__1clearResults (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.PlaneBoundedVolumeListSceneQuery
 * Method:     queryResult()
 * Type:       virtual method
 * Definition: bool Ogre::RegionSceneQuery::queryResult
 * Signature:  (Ogre_MovableObject)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_PlaneBoundedVolumeListSceneQuery__1queryResult_1_1MovableObjectp (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong first
);

/*
 * Class:      org.ogre4j.PlaneBoundedVolumeListSceneQuery
 * Method:     queryResult()
 * Type:       virtual method
 * Definition: bool Ogre::RegionSceneQuery::queryResult
 * Signature:  (Ogre_SceneQuery_WorldFragment)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_PlaneBoundedVolumeListSceneQuery__1queryResult_1_1SceneQuery_1WorldFragmentp (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong fragment
);

/*
 * Class:      org.ogre4j.PlaneBoundedVolumeListSceneQuery
 * Method:     setQueryMask()
 * Type:       virtual method
 * Definition: virtual void Ogre::SceneQuery::setQueryMask
 * Signature:  (unsigned_int)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_PlaneBoundedVolumeListSceneQuery__1setQueryMask_1_1uint32v (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong mask
);

/*
 * Class:      org.ogre4j.PlaneBoundedVolumeListSceneQuery
 * Method:     getQueryMask()
 * Type:       virtual method
 * Definition: virtual uint32 Ogre::SceneQuery::getQueryMask
 * Signature:  ()unsigned_int
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_PlaneBoundedVolumeListSceneQuery__1getQueryMask_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.PlaneBoundedVolumeListSceneQuery
 * Method:     setQueryTypeMask()
 * Type:       virtual method
 * Definition: virtual void Ogre::SceneQuery::setQueryTypeMask
 * Signature:  (unsigned_int)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_PlaneBoundedVolumeListSceneQuery__1setQueryTypeMask_1_1uint32v (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong mask
);

/*
 * Class:      org.ogre4j.PlaneBoundedVolumeListSceneQuery
 * Method:     getQueryTypeMask()
 * Type:       virtual method
 * Definition: virtual uint32 Ogre::SceneQuery::getQueryTypeMask
 * Signature:  ()unsigned_int
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_PlaneBoundedVolumeListSceneQuery__1getQueryTypeMask_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.PlaneBoundedVolumeListSceneQuery
 * Method:     setWorldFragmentType()
 * Type:       virtual method
 * Definition: virtual void Ogre::SceneQuery::setWorldFragmentType
 * Signature:  (Ogre_SceneQuery_WorldFragmentType)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_PlaneBoundedVolumeListSceneQuery__1setWorldFragmentType_1_1WorldFragmentTypev (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint wft
);

/*
 * Class:      org.ogre4j.PlaneBoundedVolumeListSceneQuery
 * Method:     getWorldFragmentType()
 * Type:       virtual method
 * Definition: virtual WorldFragmentType Ogre::SceneQuery::getWorldFragmentType
 * Signature:  ()Ogre_SceneQuery_WorldFragmentType
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_PlaneBoundedVolumeListSceneQuery__1getWorldFragmentType_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.PlaneBoundedVolumeListSceneQuery
 * Method:     getSupportedWorldFragmentTypes()
 * Type:       virtual method
 * Definition: virtual const std::set<WorldFragmentType>* Ogre::SceneQuery::getSupportedWorldFragmentTypes
 * Signature:  ()std_set__WorldFragmentType__
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_PlaneBoundedVolumeListSceneQuery__1getSupportedWorldFragmentTypes_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.PlaneBoundedVolumeListSceneQuery
 * Method:     __delete()
 * Type:       destructor
 * Definition: Ogre::PlaneBoundedVolumeListSceneQuery::__delete
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_PlaneBoundedVolumeListSceneQuery__1_1delete (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif /*__Included_org_ogre4j_PlaneBoundedVolumeListSceneQuery__*/
