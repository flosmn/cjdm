///////////////////////////////////////////////////////////////////////////////
/// This source file is generated by XBiG (The XSLT Bindings Generator)
/// For the latest info, see http://sourceforge.net/projects/xbig/
///
/// Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
/// Also see acknowledgements in Readme.html
///
/// This program is free software; you can redistribute it and/or modify it under
/// the terms of the GNU Lesser General Public License as published by the Free Software
/// Foundation; either version 2 of the License, or (at your option) any later
/// version.
///
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
/// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
///
/// You should have received a copy of the GNU Lesser General Public License along with
/// this program; if not, write to the Free Software Foundation, Inc., 59 Temple
/// Place - Suite 330, Boston, MA 02111-1307, USA, or go to
/// http://www.gnu.org/copyleft/lesser.txt.
///
/// Machine generated file
///////////////////////////////////////////////////////////////////////////////



#ifdef WIN32
	// disable warnings
	#pragma warning (disable : 4267) // conversion from 'size_t' to 'jint'
#else

#endif


#ifndef __Included_org_ogre4j_PixelBox__
#define __Included_org_ogre4j_PixelBox__


#include "jni_base.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/*
 * Class:      org.ogre4j.PixelBox
 * Method:     PixelBox()
 * Type:       constructor
 * Definition: Ogre::PixelBox::PixelBox
 * Signature:  ()V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_PixelBox__1_1createPixelBox (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.PixelBox
 * Method:     PixelBox()
 * Type:       constructor
 * Definition: Ogre::PixelBox::PixelBox
 * Signature:  (Ogre_BoxOgre_PixelFormatV)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_PixelBox__1_1createPixelBox_1_1BoxRPixelFormatvvp (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong extents, 
  jint pixelFormat, 
  jlong pixelData
);

/*
 * Class:      org.ogre4j.PixelBox
 * Method:     PixelBox()
 * Type:       constructor
 * Definition: Ogre::PixelBox::PixelBox
 * Signature:  (IIIOgre_PixelFormatV)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_PixelBox__1_1createPixelBox_1_1ivivivPixelFormatvvp (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jint width, 
  jint height, 
  jint depth, 
  jint pixelFormat, 
  jlong pixelData
);

/*
 * Class:      org.ogre4j.PixelBox
 * Method:     setConsecutive()
 * Type:       non-virtual method
 * Definition: void Ogre::PixelBox::setConsecutive
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_PixelBox__1setConsecutive (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.PixelBox
 * Method:     getRowSkip()
 * Type:       non-virtual method
 * Definition: size_t Ogre::PixelBox::getRowSkip
 * Signature:  ()I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_PixelBox__1getRowSkip_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.PixelBox
 * Method:     getSliceSkip()
 * Type:       non-virtual method
 * Definition: size_t Ogre::PixelBox::getSliceSkip
 * Signature:  ()I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_PixelBox__1getSliceSkip_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.PixelBox
 * Method:     isConsecutive()
 * Type:       non-virtual method
 * Definition: bool Ogre::PixelBox::isConsecutive
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_PixelBox__1isConsecutive_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.PixelBox
 * Method:     getConsecutiveSize()
 * Type:       non-virtual method
 * Definition: size_t Ogre::PixelBox::getConsecutiveSize
 * Signature:  ()I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_PixelBox__1getConsecutiveSize_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.PixelBox
 * Method:     getSubVolume()
 * Type:       non-virtual method
 * Definition: PixelBox Ogre::PixelBox::getSubVolume
 * Signature:  (Ogre_Box)Ogre_PixelBox
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_PixelBox__1getSubVolume_1_1BoxR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong def
);

/*
 * Class:      org.ogre4j.PixelBox
 * Method:     contains()
 * Type:       non-virtual method
 * Definition: bool Ogre::Box::contains
 * Signature:  (Ogre_Box)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_PixelBox__1contains_1_1BoxR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong def
);

/*
 * Class:      org.ogre4j.PixelBox
 * Method:     getWidth()
 * Type:       non-virtual method
 * Definition: size_t Ogre::Box::getWidth
 * Signature:  ()I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_PixelBox__1getWidth_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.PixelBox
 * Method:     getHeight()
 * Type:       non-virtual method
 * Definition: size_t Ogre::Box::getHeight
 * Signature:  ()I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_PixelBox__1getHeight_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.PixelBox
 * Method:     getDepth()
 * Type:       non-virtual method
 * Definition: size_t Ogre::Box::getDepth
 * Signature:  ()I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_PixelBox__1getDepth_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.PixelBox
 * Method:     __delete()
 * Type:       destructor
 * Definition: Ogre::PixelBox::__delete
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_PixelBox__1_1delete (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.PixelBox
 * Method:     getdata()
 * Type:       getter for public attribute
 * Definition: void* Ogre::PixelBox::data
 * Signature:  ()V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_PixelBox__1getdata (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.PixelBox
 * Method:     setdata()
 * Type:       setter for public attribute
 * Definition: void* Ogre::PixelBox::data
 * Signature:  (V)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_PixelBox__1setdata (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong _jni_value_
);

/*
 * Class:      org.ogre4j.PixelBox
 * Method:     getformat()
 * Type:       getter for public attribute
 * Definition: PixelFormat Ogre::PixelBox::format
 * Signature:  ()Ogre_PixelFormat
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_PixelBox__1getformat (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.PixelBox
 * Method:     setformat()
 * Type:       setter for public attribute
 * Definition: PixelFormat Ogre::PixelBox::format
 * Signature:  (Ogre_PixelFormat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_PixelBox__1setformat (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint _jni_value_
);

/*
 * Class:      org.ogre4j.PixelBox
 * Method:     getrowPitch()
 * Type:       getter for public attribute
 * Definition: size_t Ogre::PixelBox::rowPitch
 * Signature:  ()I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_PixelBox__1getrowPitch (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.PixelBox
 * Method:     setrowPitch()
 * Type:       setter for public attribute
 * Definition: size_t Ogre::PixelBox::rowPitch
 * Signature:  (I)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_PixelBox__1setrowPitch (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint _jni_value_
);

/*
 * Class:      org.ogre4j.PixelBox
 * Method:     getslicePitch()
 * Type:       getter for public attribute
 * Definition: size_t Ogre::PixelBox::slicePitch
 * Signature:  ()I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_PixelBox__1getslicePitch (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.PixelBox
 * Method:     setslicePitch()
 * Type:       setter for public attribute
 * Definition: size_t Ogre::PixelBox::slicePitch
 * Signature:  (I)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_PixelBox__1setslicePitch (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint _jni_value_
);

/*
 * Class:      org.ogre4j.PixelBox
 * Method:     getleft()
 * Type:       getter for public attribute
 * Definition: size_t Ogre::Box::left
 * Signature:  ()I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_PixelBox__1getleft (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.PixelBox
 * Method:     setleft()
 * Type:       setter for public attribute
 * Definition: size_t Ogre::Box::left
 * Signature:  (I)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_PixelBox__1setleft (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint _jni_value_
);

/*
 * Class:      org.ogre4j.PixelBox
 * Method:     gettop()
 * Type:       getter for public attribute
 * Definition: size_t Ogre::Box::top
 * Signature:  ()I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_PixelBox__1gettop (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.PixelBox
 * Method:     settop()
 * Type:       setter for public attribute
 * Definition: size_t Ogre::Box::top
 * Signature:  (I)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_PixelBox__1settop (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint _jni_value_
);

/*
 * Class:      org.ogre4j.PixelBox
 * Method:     getright()
 * Type:       getter for public attribute
 * Definition: size_t Ogre::Box::right
 * Signature:  ()I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_PixelBox__1getright (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.PixelBox
 * Method:     setright()
 * Type:       setter for public attribute
 * Definition: size_t Ogre::Box::right
 * Signature:  (I)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_PixelBox__1setright (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint _jni_value_
);

/*
 * Class:      org.ogre4j.PixelBox
 * Method:     getbottom()
 * Type:       getter for public attribute
 * Definition: size_t Ogre::Box::bottom
 * Signature:  ()I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_PixelBox__1getbottom (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.PixelBox
 * Method:     setbottom()
 * Type:       setter for public attribute
 * Definition: size_t Ogre::Box::bottom
 * Signature:  (I)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_PixelBox__1setbottom (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint _jni_value_
);

/*
 * Class:      org.ogre4j.PixelBox
 * Method:     getfront()
 * Type:       getter for public attribute
 * Definition: size_t Ogre::Box::front
 * Signature:  ()I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_PixelBox__1getfront (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.PixelBox
 * Method:     setfront()
 * Type:       setter for public attribute
 * Definition: size_t Ogre::Box::front
 * Signature:  (I)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_PixelBox__1setfront (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint _jni_value_
);

/*
 * Class:      org.ogre4j.PixelBox
 * Method:     getback()
 * Type:       getter for public attribute
 * Definition: size_t Ogre::Box::back
 * Signature:  ()I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_PixelBox__1getback (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.PixelBox
 * Method:     setback()
 * Type:       setter for public attribute
 * Definition: size_t Ogre::Box::back
 * Signature:  (I)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_PixelBox__1setback (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint _jni_value_
);

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif /*__Included_org_ogre4j_PixelBox__*/
