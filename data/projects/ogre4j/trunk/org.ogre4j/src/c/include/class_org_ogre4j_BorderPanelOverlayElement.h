///////////////////////////////////////////////////////////////////////////////
/// This source file is generated by XBiG (The XSLT Bindings Generator)
/// For the latest info, see http://sourceforge.net/projects/xbig/
///
/// Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
/// Also see acknowledgements in Readme.html
///
/// This program is free software; you can redistribute it and/or modify it under
/// the terms of the GNU Lesser General Public License as published by the Free Software
/// Foundation; either version 2 of the License, or (at your option) any later
/// version.
///
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
/// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
///
/// You should have received a copy of the GNU Lesser General Public License along with
/// this program; if not, write to the Free Software Foundation, Inc., 59 Temple
/// Place - Suite 330, Boston, MA 02111-1307, USA, or go to
/// http://www.gnu.org/copyleft/lesser.txt.
///
/// Machine generated file
///////////////////////////////////////////////////////////////////////////////



#ifdef WIN32
	// disable warnings
	#pragma warning (disable : 4267) // conversion from 'size_t' to 'jint'
#else

#endif


#ifndef __Included_org_ogre4j_BorderPanelOverlayElement__
#define __Included_org_ogre4j_BorderPanelOverlayElement__


#include "jni_base.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     BorderPanelOverlayElement()
 * Type:       constructor
 * Definition: Ogre::BorderPanelOverlayElement::BorderPanelOverlayElement
 * Signature:  (std_string)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1_1createBorderPanelOverlayElement_1_1StringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jstring name
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     initialise()
 * Type:       virtual method
 * Definition: virtual void Ogre::BorderPanelOverlayElement::initialise
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1initialise (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getTypeName()
 * Type:       virtual method
 * Definition: const String& Ogre::BorderPanelOverlayElement::getTypeName
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getTypeName_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     setBorderSize()
 * Type:       non-virtual method
 * Definition: void Ogre::BorderPanelOverlayElement::setBorderSize
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1setBorderSize_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat size
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     setBorderSize()
 * Type:       non-virtual method
 * Definition: void Ogre::BorderPanelOverlayElement::setBorderSize
 * Signature:  (floatfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1setBorderSize_1_1RealvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat sides, 
  jfloat topAndBottom
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     setBorderSize()
 * Type:       non-virtual method
 * Definition: void Ogre::BorderPanelOverlayElement::setBorderSize
 * Signature:  (floatfloatfloatfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1setBorderSize_1_1RealvRealvRealvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat left, 
  jfloat right, 
  jfloat top, 
  jfloat bottom
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getLeftBorderSize()
 * Type:       non-virtual method
 * Definition: Real Ogre::BorderPanelOverlayElement::getLeftBorderSize
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getLeftBorderSize_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getRightBorderSize()
 * Type:       non-virtual method
 * Definition: Real Ogre::BorderPanelOverlayElement::getRightBorderSize
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getRightBorderSize_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getTopBorderSize()
 * Type:       non-virtual method
 * Definition: Real Ogre::BorderPanelOverlayElement::getTopBorderSize
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getTopBorderSize_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getBottomBorderSize()
 * Type:       non-virtual method
 * Definition: Real Ogre::BorderPanelOverlayElement::getBottomBorderSize
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getBottomBorderSize_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     setLeftBorderUV()
 * Type:       non-virtual method
 * Definition: void Ogre::BorderPanelOverlayElement::setLeftBorderUV
 * Signature:  (floatfloatfloatfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1setLeftBorderUV_1_1RealvRealvRealvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat u1, 
  jfloat v1, 
  jfloat u2, 
  jfloat v2
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     setRightBorderUV()
 * Type:       non-virtual method
 * Definition: void Ogre::BorderPanelOverlayElement::setRightBorderUV
 * Signature:  (floatfloatfloatfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1setRightBorderUV_1_1RealvRealvRealvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat u1, 
  jfloat v1, 
  jfloat u2, 
  jfloat v2
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     setTopBorderUV()
 * Type:       non-virtual method
 * Definition: void Ogre::BorderPanelOverlayElement::setTopBorderUV
 * Signature:  (floatfloatfloatfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1setTopBorderUV_1_1RealvRealvRealvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat u1, 
  jfloat v1, 
  jfloat u2, 
  jfloat v2
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     setBottomBorderUV()
 * Type:       non-virtual method
 * Definition: void Ogre::BorderPanelOverlayElement::setBottomBorderUV
 * Signature:  (floatfloatfloatfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1setBottomBorderUV_1_1RealvRealvRealvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat u1, 
  jfloat v1, 
  jfloat u2, 
  jfloat v2
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     setTopLeftBorderUV()
 * Type:       non-virtual method
 * Definition: void Ogre::BorderPanelOverlayElement::setTopLeftBorderUV
 * Signature:  (floatfloatfloatfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1setTopLeftBorderUV_1_1RealvRealvRealvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat u1, 
  jfloat v1, 
  jfloat u2, 
  jfloat v2
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     setTopRightBorderUV()
 * Type:       non-virtual method
 * Definition: void Ogre::BorderPanelOverlayElement::setTopRightBorderUV
 * Signature:  (floatfloatfloatfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1setTopRightBorderUV_1_1RealvRealvRealvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat u1, 
  jfloat v1, 
  jfloat u2, 
  jfloat v2
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     setBottomLeftBorderUV()
 * Type:       non-virtual method
 * Definition: void Ogre::BorderPanelOverlayElement::setBottomLeftBorderUV
 * Signature:  (floatfloatfloatfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1setBottomLeftBorderUV_1_1RealvRealvRealvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat u1, 
  jfloat v1, 
  jfloat u2, 
  jfloat v2
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     setBottomRightBorderUV()
 * Type:       non-virtual method
 * Definition: void Ogre::BorderPanelOverlayElement::setBottomRightBorderUV
 * Signature:  (floatfloatfloatfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1setBottomRightBorderUV_1_1RealvRealvRealvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat u1, 
  jfloat v1, 
  jfloat u2, 
  jfloat v2
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getLeftBorderUVString()
 * Type:       non-virtual method
 * Definition: String Ogre::BorderPanelOverlayElement::getLeftBorderUVString
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getLeftBorderUVString_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getRightBorderUVString()
 * Type:       non-virtual method
 * Definition: String Ogre::BorderPanelOverlayElement::getRightBorderUVString
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getRightBorderUVString_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getTopBorderUVString()
 * Type:       non-virtual method
 * Definition: String Ogre::BorderPanelOverlayElement::getTopBorderUVString
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getTopBorderUVString_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getBottomBorderUVString()
 * Type:       non-virtual method
 * Definition: String Ogre::BorderPanelOverlayElement::getBottomBorderUVString
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getBottomBorderUVString_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getTopLeftBorderUVString()
 * Type:       non-virtual method
 * Definition: String Ogre::BorderPanelOverlayElement::getTopLeftBorderUVString
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getTopLeftBorderUVString_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getTopRightBorderUVString()
 * Type:       non-virtual method
 * Definition: String Ogre::BorderPanelOverlayElement::getTopRightBorderUVString
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getTopRightBorderUVString_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getBottomLeftBorderUVString()
 * Type:       non-virtual method
 * Definition: String Ogre::BorderPanelOverlayElement::getBottomLeftBorderUVString
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getBottomLeftBorderUVString_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getBottomRightBorderUVString()
 * Type:       non-virtual method
 * Definition: String Ogre::BorderPanelOverlayElement::getBottomRightBorderUVString
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getBottomRightBorderUVString_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     setBorderMaterialName()
 * Type:       non-virtual method
 * Definition: void Ogre::BorderPanelOverlayElement::setBorderMaterialName
 * Signature:  (std_string)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1setBorderMaterialName_1_1StringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getBorderMaterialName()
 * Type:       non-virtual method
 * Definition: const String& Ogre::BorderPanelOverlayElement::getBorderMaterialName
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getBorderMaterialName_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     _updateRenderQueue()
 * Type:       virtual method
 * Definition: void Ogre::BorderPanelOverlayElement::_updateRenderQueue
 * Signature:  (Ogre_RenderQueue)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1_1updateRenderQueue_1_1RenderQueuep (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong queue
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     visitRenderables()
 * Type:       non-virtual method
 * Definition: void Ogre::BorderPanelOverlayElement::visitRenderables
 * Signature:  (Ogre_Renderable_VisitorZ)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1visitRenderables_1_1Renderable_1Visitorpbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong visitor, 
  jboolean debugRenderables
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     setMetricsMode()
 * Type:       virtual method
 * Definition: void Ogre::BorderPanelOverlayElement::setMetricsMode
 * Signature:  (Ogre_GuiMetricsMode)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1setMetricsMode_1_1GuiMetricsModev (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint gmm
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     _update()
 * Type:       virtual method
 * Definition: void Ogre::BorderPanelOverlayElement::_update
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1_1update (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     setTiling()
 * Type:       non-virtual method
 * Definition: void Ogre::PanelOverlayElement::setTiling
 * Signature:  (floatfloatunsigned_short)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1setTiling_1_1RealvRealvushortv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat x, 
  jfloat y, 
  jint layer
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getTileX()
 * Type:       non-virtual method
 * Definition: Real Ogre::PanelOverlayElement::getTileX
 * Signature:  (unsigned_short)float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getTileX_1_1ushortv_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint layer
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getTileY()
 * Type:       non-virtual method
 * Definition: Real Ogre::PanelOverlayElement::getTileY
 * Signature:  (unsigned_short)float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getTileY_1_1ushortv_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint layer
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     setUV()
 * Type:       non-virtual method
 * Definition: void Ogre::PanelOverlayElement::setUV
 * Signature:  (floatfloatfloatfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1setUV_1_1RealvRealvRealvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat u1, 
  jfloat v1, 
  jfloat u2, 
  jfloat v2
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getUV()
 * Type:       non-virtual method
 * Definition: void Ogre::PanelOverlayElement::getUV
 * Signature:  (floatfloatfloatfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getUV_1_1RealrRealrRealrRealr_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong u1, 
  jlong v1, 
  jlong u2, 
  jlong v2
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     setTransparent()
 * Type:       non-virtual method
 * Definition: void Ogre::PanelOverlayElement::setTransparent
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1setTransparent_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean isTransparent
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     isTransparent()
 * Type:       non-virtual method
 * Definition: bool Ogre::PanelOverlayElement::isTransparent
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1isTransparent_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getRenderOperation()
 * Type:       virtual method
 * Definition: void Ogre::PanelOverlayElement::getRenderOperation
 * Signature:  (Ogre_RenderOperation)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getRenderOperation_1_1RenderOperationr (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong op
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     setMaterialName()
 * Type:       virtual method
 * Definition: void Ogre::PanelOverlayElement::setMaterialName
 * Signature:  (std_string)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1setMaterialName_1_1StringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring matName
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     addChild()
 * Type:       virtual method
 * Definition: virtual void Ogre::OverlayContainer::addChild
 * Signature:  (Ogre_OverlayElement)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1addChild_1_1OverlayElementp (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong elem
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     addChildImpl()
 * Type:       virtual method
 * Definition: virtual void Ogre::OverlayContainer::addChildImpl
 * Signature:  (Ogre_OverlayElement)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1addChildImpl_1_1OverlayElementp (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong elem
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     addChildImpl()
 * Type:       virtual method
 * Definition: virtual void Ogre::OverlayContainer::addChildImpl
 * Signature:  (Ogre_OverlayContainer)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1addChildImpl_1_1OverlayContainerp (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong cont
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     removeChild()
 * Type:       virtual method
 * Definition: virtual void Ogre::OverlayContainer::removeChild
 * Signature:  (std_string)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1removeChild_1_1StringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getChild()
 * Type:       virtual method
 * Definition: virtual OverlayElement* Ogre::OverlayContainer::getChild
 * Signature:  (std_string)Ogre_OverlayElement
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getChild_1_1StringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     _addChild()
 * Type:       non-virtual method
 * Definition: void Ogre::OverlayContainer::_addChild
 * Signature:  (Ogre_OverlayElement)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1_1addChild_1_1OverlayElementp (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong elem
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     _removeChild()
 * Type:       non-virtual method
 * Definition: void Ogre::OverlayContainer::_removeChild
 * Signature:  (Ogre_OverlayElement)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1_1removeChild_1_1OverlayElementp (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong elem
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     _removeChild()
 * Type:       non-virtual method
 * Definition: void Ogre::OverlayContainer::_removeChild
 * Signature:  (std_string)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1_1removeChild_1_1StringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getChildIterator()
 * Type:       virtual method
 * Definition: virtual ChildIterator Ogre::OverlayContainer::getChildIterator
 * Signature:  ()Ogre_OverlayContainer_ChildIterator
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getChildIterator (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getChildContainerIterator()
 * Type:       virtual method
 * Definition: virtual ChildContainerIterator Ogre::OverlayContainer::getChildContainerIterator
 * Signature:  ()Ogre_OverlayContainer_ChildContainerIterator
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getChildContainerIterator (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     _positionsOutOfDate()
 * Type:       virtual method
 * Definition: virtual void Ogre::OverlayContainer::_positionsOutOfDate
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1_1positionsOutOfDate (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     _notifyZOrder()
 * Type:       virtual method
 * Definition: virtual ushort Ogre::OverlayContainer::_notifyZOrder
 * Signature:  (unsigned_short)unsigned_short
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1_1notifyZOrder_1_1ushortv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint newZOrder
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     _notifyViewport()
 * Type:       virtual method
 * Definition: virtual void Ogre::OverlayContainer::_notifyViewport
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1_1notifyViewport (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     _notifyWorldTransforms()
 * Type:       virtual method
 * Definition: virtual void Ogre::OverlayContainer::_notifyWorldTransforms
 * Signature:  (Ogre_Matrix4)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1_1notifyWorldTransforms_1_1Matrix4R (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong xform
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     _notifyParent()
 * Type:       virtual method
 * Definition: virtual void Ogre::OverlayContainer::_notifyParent
 * Signature:  (Ogre_OverlayContainerOgre_Overlay)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1_1notifyParent_1_1OverlayContainerpOverlayp (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong parent, 
  jlong overlay
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     isContainer()
 * Type:       virtual method
 * Definition: bool Ogre::OverlayContainer::isContainer
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1isContainer_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     isChildrenProcessEvents()
 * Type:       virtual method
 * Definition: virtual bool Ogre::OverlayContainer::isChildrenProcessEvents
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1isChildrenProcessEvents_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     setChildrenProcessEvents()
 * Type:       virtual method
 * Definition: virtual void Ogre::OverlayContainer::setChildrenProcessEvents
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1setChildrenProcessEvents_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean val
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     findElementAt()
 * Type:       virtual method
 * Definition: virtual OverlayElement* Ogre::OverlayContainer::findElementAt
 * Signature:  (floatfloat)Ogre_OverlayElement
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1findElementAt_1_1RealvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat x, 
  jfloat y
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     copyFromTemplate()
 * Type:       virtual method
 * Definition: void Ogre::OverlayContainer::copyFromTemplate
 * Signature:  (Ogre_OverlayElement)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1copyFromTemplate_1_1OverlayElementp (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong templateOverlay
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     clone()
 * Type:       virtual method
 * Definition: virtual OverlayElement* Ogre::OverlayContainer::clone
 * Signature:  (std_string)Ogre_OverlayElement
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1clone_1_1StringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring instanceName
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getName()
 * Type:       non-virtual method
 * Definition: const String& Ogre::OverlayElement::getName
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getName_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     show()
 * Type:       virtual method
 * Definition: virtual void Ogre::OverlayElement::show
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1show (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     hide()
 * Type:       virtual method
 * Definition: virtual void Ogre::OverlayElement::hide
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1hide (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     isVisible()
 * Type:       non-virtual method
 * Definition: bool Ogre::OverlayElement::isVisible
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1isVisible_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     isEnabled()
 * Type:       non-virtual method
 * Definition: bool Ogre::OverlayElement::isEnabled
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1isEnabled_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     setEnabled()
 * Type:       virtual method
 * Definition: virtual void Ogre::OverlayElement::setEnabled
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1setEnabled_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean b
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     setDimensions()
 * Type:       non-virtual method
 * Definition: void Ogre::OverlayElement::setDimensions
 * Signature:  (floatfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1setDimensions_1_1RealvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat width, 
  jfloat height
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     setPosition()
 * Type:       non-virtual method
 * Definition: void Ogre::OverlayElement::setPosition
 * Signature:  (floatfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1setPosition_1_1RealvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat left, 
  jfloat top
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     setWidth()
 * Type:       non-virtual method
 * Definition: void Ogre::OverlayElement::setWidth
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1setWidth_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat width
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getWidth()
 * Type:       non-virtual method
 * Definition: Real Ogre::OverlayElement::getWidth
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getWidth_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     setHeight()
 * Type:       non-virtual method
 * Definition: void Ogre::OverlayElement::setHeight
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1setHeight_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat height
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getHeight()
 * Type:       non-virtual method
 * Definition: Real Ogre::OverlayElement::getHeight
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getHeight_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     setLeft()
 * Type:       non-virtual method
 * Definition: void Ogre::OverlayElement::setLeft
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1setLeft_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat left
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getLeft()
 * Type:       non-virtual method
 * Definition: Real Ogre::OverlayElement::getLeft
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getLeft_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     setTop()
 * Type:       non-virtual method
 * Definition: void Ogre::OverlayElement::setTop
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1setTop_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat Top
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getTop()
 * Type:       non-virtual method
 * Definition: Real Ogre::OverlayElement::getTop
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getTop_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     _getLeft()
 * Type:       non-virtual method
 * Definition: Real Ogre::OverlayElement::_getLeft
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1_1getLeft_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     _getTop()
 * Type:       non-virtual method
 * Definition: Real Ogre::OverlayElement::_getTop
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1_1getTop_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     _getWidth()
 * Type:       non-virtual method
 * Definition: Real Ogre::OverlayElement::_getWidth
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1_1getWidth_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     _getHeight()
 * Type:       non-virtual method
 * Definition: Real Ogre::OverlayElement::_getHeight
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1_1getHeight_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     _setLeft()
 * Type:       non-virtual method
 * Definition: void Ogre::OverlayElement::_setLeft
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1_1setLeft_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat left
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     _setTop()
 * Type:       non-virtual method
 * Definition: void Ogre::OverlayElement::_setTop
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1_1setTop_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat top
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     _setWidth()
 * Type:       non-virtual method
 * Definition: void Ogre::OverlayElement::_setWidth
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1_1setWidth_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat width
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     _setHeight()
 * Type:       non-virtual method
 * Definition: void Ogre::OverlayElement::_setHeight
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1_1setHeight_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat height
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     _setPosition()
 * Type:       non-virtual method
 * Definition: void Ogre::OverlayElement::_setPosition
 * Signature:  (floatfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1_1setPosition_1_1RealvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat left, 
  jfloat top
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     _setDimensions()
 * Type:       non-virtual method
 * Definition: void Ogre::OverlayElement::_setDimensions
 * Signature:  (floatfloat)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1_1setDimensions_1_1RealvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat width, 
  jfloat height
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getMaterialName()
 * Type:       virtual method
 * Definition: virtual const String& Ogre::OverlayElement::getMaterialName
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getMaterialName_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getMaterial()
 * Type:       virtual method
 * Definition: const MaterialPtr& Ogre::OverlayElement::getMaterial
 * Signature:  ()Ogre_MaterialPtr
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getMaterial_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getWorldTransforms()
 * Type:       virtual method
 * Definition: void Ogre::OverlayElement::getWorldTransforms
 * Signature:  (Ogre_Matrix4)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getWorldTransforms_1_1Matrix4p_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong xform
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     _updateFromParent()
 * Type:       virtual method
 * Definition: virtual void Ogre::OverlayElement::_updateFromParent
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1_1updateFromParent (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     _getDerivedLeft()
 * Type:       virtual method
 * Definition: virtual Real Ogre::OverlayElement::_getDerivedLeft
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1_1getDerivedLeft (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     _getDerivedTop()
 * Type:       virtual method
 * Definition: virtual Real Ogre::OverlayElement::_getDerivedTop
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1_1getDerivedTop (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     _getRelativeWidth()
 * Type:       virtual method
 * Definition: virtual Real Ogre::OverlayElement::_getRelativeWidth
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1_1getRelativeWidth (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     _getRelativeHeight()
 * Type:       virtual method
 * Definition: virtual Real Ogre::OverlayElement::_getRelativeHeight
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1_1getRelativeHeight (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     _getClippingRegion()
 * Type:       virtual method
 * Definition: virtual void Ogre::OverlayElement::_getClippingRegion
 * Signature:  (Ogre_Rectangle)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1_1getClippingRegion_1_1Rectangler (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong clippingRegion
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     setCaption()
 * Type:       virtual method
 * Definition: virtual void Ogre::OverlayElement::setCaption
 * Signature:  (Ogre_UTFString)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1setCaption_1_1DisplayStringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong text
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getCaption()
 * Type:       virtual method
 * Definition: virtual const DisplayString& Ogre::OverlayElement::getCaption
 * Signature:  ()Ogre_UTFString
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getCaption_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     setColour()
 * Type:       virtual method
 * Definition: virtual void Ogre::OverlayElement::setColour
 * Signature:  (Ogre_ColourValue)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1setColour_1_1ColourValueR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong col
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getColour()
 * Type:       virtual method
 * Definition: virtual const ColourValue& Ogre::OverlayElement::getColour
 * Signature:  ()Ogre_ColourValue
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getColour_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getMetricsMode()
 * Type:       virtual method
 * Definition: virtual GuiMetricsMode Ogre::OverlayElement::getMetricsMode
 * Signature:  ()Ogre_GuiMetricsMode
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getMetricsMode_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     setHorizontalAlignment()
 * Type:       virtual method
 * Definition: virtual void Ogre::OverlayElement::setHorizontalAlignment
 * Signature:  (Ogre_GuiHorizontalAlignment)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1setHorizontalAlignment_1_1GuiHorizontalAlignmentv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint gha
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getHorizontalAlignment()
 * Type:       virtual method
 * Definition: virtual GuiHorizontalAlignment Ogre::OverlayElement::getHorizontalAlignment
 * Signature:  ()Ogre_GuiHorizontalAlignment
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getHorizontalAlignment_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     setVerticalAlignment()
 * Type:       virtual method
 * Definition: virtual void Ogre::OverlayElement::setVerticalAlignment
 * Signature:  (Ogre_GuiVerticalAlignment)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1setVerticalAlignment_1_1GuiVerticalAlignmentv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint gva
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getVerticalAlignment()
 * Type:       virtual method
 * Definition: virtual GuiVerticalAlignment Ogre::OverlayElement::getVerticalAlignment
 * Signature:  ()Ogre_GuiVerticalAlignment
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getVerticalAlignment_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     contains()
 * Type:       virtual method
 * Definition: virtual bool Ogre::OverlayElement::contains
 * Signature:  (floatfloat)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1contains_1_1RealvRealv_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat x, 
  jfloat y
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     isKeyEnabled()
 * Type:       virtual method
 * Definition: virtual bool Ogre::OverlayElement::isKeyEnabled
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1isKeyEnabled_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     isCloneable()
 * Type:       virtual method
 * Definition: virtual bool Ogre::OverlayElement::isCloneable
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1isCloneable_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     setCloneable()
 * Type:       virtual method
 * Definition: virtual void Ogre::OverlayElement::setCloneable
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1setCloneable_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean c
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getParent()
 * Type:       non-virtual method
 * Definition: OverlayContainer* Ogre::OverlayElement::getParent
 * Signature:  ()Ogre_OverlayContainer
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getParent (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     _setParent()
 * Type:       non-virtual method
 * Definition: void Ogre::OverlayElement::_setParent
 * Signature:  (Ogre_OverlayContainer)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1_1setParent_1_1OverlayContainerp (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong parent
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getZOrder()
 * Type:       non-virtual method
 * Definition: ushort Ogre::OverlayElement::getZOrder
 * Signature:  ()unsigned_short
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getZOrder_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getSquaredViewDepth()
 * Type:       virtual method
 * Definition: Real Ogre::OverlayElement::getSquaredViewDepth
 * Signature:  (Ogre_Camera)float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getSquaredViewDepth_1_1CameraP_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong cam
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getLights()
 * Type:       virtual method
 * Definition: const LightList& Ogre::OverlayElement::getLights
 * Signature:  ()Ogre_LightList
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getLights_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getSourceTemplate()
 * Type:       non-virtual method
 * Definition: const OverlayElement* Ogre::OverlayElement::getSourceTemplate
 * Signature:  ()Ogre_OverlayElement
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getSourceTemplate_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getParamDictionary()
 * Type:       non-virtual method
 * Definition: ParamDictionary* Ogre::StringInterface::getParamDictionary
 * Signature:  ()Ogre_ParamDictionary
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getParamDictionary (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getParamDictionary_const()
 * Type:       non-virtual method
 * Definition: const ParamDictionary* Ogre::StringInterface::getParamDictionary
 * Signature:  ()Ogre_ParamDictionary
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getParamDictionary_1const_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getParameters()
 * Type:       non-virtual method
 * Definition: const ParameterList& Ogre::StringInterface::getParameters
 * Signature:  ()Ogre_ParameterList
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getParameters_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     setParameter()
 * Type:       virtual method
 * Definition: virtual bool Ogre::StringInterface::setParameter
 * Signature:  (std_stringstd_string)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1setParameter_1_1StringRStringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name, 
  jstring value
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     setParameterList()
 * Type:       virtual method
 * Definition: virtual void Ogre::StringInterface::setParameterList
 * Signature:  (Ogre_NameValuePairList)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1setParameterList_1_1NameValuePairListR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong paramList
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getParameter()
 * Type:       virtual method
 * Definition: virtual String Ogre::StringInterface::getParameter
 * Signature:  (std_string)std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getParameter_1_1StringR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     copyParametersTo()
 * Type:       virtual method
 * Definition: virtual void Ogre::StringInterface::copyParametersTo
 * Signature:  (Ogre_StringInterface)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1copyParametersTo_1_1StringInterfacep_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong dest
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     cleanupDictionary()
 * Type:       static method
 * Definition: static void Ogre::StringInterface::cleanupDictionary
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1cleanupDictionary (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getTechnique()
 * Type:       virtual method
 * Definition: virtual Technique* Ogre::Renderable::getTechnique
 * Signature:  ()Ogre_Technique
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getTechnique_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     preRender()
 * Type:       virtual method
 * Definition: virtual bool Ogre::Renderable::preRender
 * Signature:  (Ogre_SceneManagerOgre_RenderSystem)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1preRender_1_1SceneManagerpRenderSystemp (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong sm, 
  jlong rsys
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     postRender()
 * Type:       virtual method
 * Definition: virtual void Ogre::Renderable::postRender
 * Signature:  (Ogre_SceneManagerOgre_RenderSystem)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1postRender_1_1SceneManagerpRenderSystemp (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong sm, 
  jlong rsys
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getNumWorldTransforms()
 * Type:       virtual method
 * Definition: virtual unsigned short Ogre::Renderable::getNumWorldTransforms
 * Signature:  ()S
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getNumWorldTransforms_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     setUseIdentityProjection()
 * Type:       non-virtual method
 * Definition: void Ogre::Renderable::setUseIdentityProjection
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1setUseIdentityProjection_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean useIdentityProjection
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getUseIdentityProjection()
 * Type:       non-virtual method
 * Definition: bool Ogre::Renderable::getUseIdentityProjection
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getUseIdentityProjection_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     setUseIdentityView()
 * Type:       non-virtual method
 * Definition: void Ogre::Renderable::setUseIdentityView
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1setUseIdentityView_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean useIdentityView
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getUseIdentityView()
 * Type:       non-virtual method
 * Definition: bool Ogre::Renderable::getUseIdentityView
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getUseIdentityView_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getCastsShadows()
 * Type:       virtual method
 * Definition: virtual bool Ogre::Renderable::getCastsShadows
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getCastsShadows_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     setCustomParameter()
 * Type:       non-virtual method
 * Definition: void Ogre::Renderable::setCustomParameter
 * Signature:  (IOgre_Vector4)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1setCustomParameter_1_1ivVector4R (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint index, 
  jlong value
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getCustomParameter()
 * Type:       non-virtual method
 * Definition: const Vector4& Ogre::Renderable::getCustomParameter
 * Signature:  (I)Ogre_Vector4
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getCustomParameter_1_1iv_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint index
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     _updateCustomGpuParameter()
 * Type:       virtual method
 * Definition: virtual void Ogre::Renderable::_updateCustomGpuParameter
 * Signature:  (Ogre_GpuProgramParameters_AutoConstantEntryOgre_GpuProgramParameters)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1_1updateCustomGpuParameter_1_1GpuProgramParameters_1AutoConstantEntryRGpuProgramParametersp_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong constantEntry, 
  jlong params
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     setPolygonModeOverrideable()
 * Type:       virtual method
 * Definition: virtual void Ogre::Renderable::setPolygonModeOverrideable
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1setPolygonModeOverrideable_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean override
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getPolygonModeOverrideable()
 * Type:       virtual method
 * Definition: virtual bool Ogre::Renderable::getPolygonModeOverrideable
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getPolygonModeOverrideable_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     setUserAny()
 * Type:       virtual method
 * Definition: virtual void Ogre::Renderable::setUserAny
 * Signature:  (Ogre_Any)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1setUserAny_1_1AnyR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong anything
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getUserAny()
 * Type:       virtual method
 * Definition: virtual const Any& Ogre::Renderable::getUserAny
 * Signature:  ()Ogre_Any
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getUserAny_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     getRenderSystemData()
 * Type:       virtual method
 * Definition: virtual RenderSystemData* Ogre::Renderable::getRenderSystemData
 * Signature:  ()Ogre_Renderable_RenderSystemData
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1getRenderSystemData_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     setRenderSystemData()
 * Type:       virtual method
 * Definition: virtual void Ogre::Renderable::setRenderSystemData
 * Signature:  (Ogre_Renderable_RenderSystemData)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1setRenderSystemData_1_1RenderSystemDatap_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong val
);

/*
 * Class:      org.ogre4j.BorderPanelOverlayElement
 * Method:     __delete()
 * Type:       destructor
 * Definition: Ogre::BorderPanelOverlayElement::__delete
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_BorderPanelOverlayElement__1_1delete (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif /*__Included_org_ogre4j_BorderPanelOverlayElement__*/
