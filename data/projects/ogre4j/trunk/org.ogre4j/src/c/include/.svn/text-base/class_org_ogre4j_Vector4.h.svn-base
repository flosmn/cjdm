///////////////////////////////////////////////////////////////////////////////
/// This source file is generated by XBiG (The XSLT Bindings Generator)
/// For the latest info, see http://sourceforge.net/projects/xbig/
///
/// Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
/// Also see acknowledgements in Readme.html
///
/// This program is free software; you can redistribute it and/or modify it under
/// the terms of the GNU Lesser General Public License as published by the Free Software
/// Foundation; either version 2 of the License, or (at your option) any later
/// version.
///
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
/// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
///
/// You should have received a copy of the GNU Lesser General Public License along with
/// this program; if not, write to the Free Software Foundation, Inc., 59 Temple
/// Place - Suite 330, Boston, MA 02111-1307, USA, or go to
/// http://www.gnu.org/copyleft/lesser.txt.
///
/// Machine generated file
///////////////////////////////////////////////////////////////////////////////



#ifdef WIN32
	// disable warnings
	#pragma warning (disable : 4267) // conversion from 'size_t' to 'jint'
#else

#endif


#ifndef __Included_org_ogre4j_Vector4__
#define __Included_org_ogre4j_Vector4__


#include "jni_base.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/*
 * Class:      org.ogre4j.Vector4
 * Method:     Vector4()
 * Type:       constructor
 * Definition: Ogre::Vector4::Vector4
 * Signature:  ()V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Vector4__1_1createVector4 (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     Vector4()
 * Type:       constructor
 * Definition: Ogre::Vector4::Vector4
 * Signature:  (floatfloatfloatfloat)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Vector4__1_1createVector4_1_1RealVRealVRealVRealV (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jfloat fX, 
  jfloat fY, 
  jfloat fZ, 
  jfloat fW
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     Vector4()
 * Type:       constructor
 * Definition: Ogre::Vector4::Vector4
 * Signature:  (I)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Vector4__1_1createVector4_1_1iV (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jint afCoordinate
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     Vector4()
 * Type:       constructor
 * Definition: Ogre::Vector4::Vector4
 * Signature:  (float)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Vector4__1_1createVector4_1_1Realp (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong r
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     Vector4()
 * Type:       constructor
 * Definition: Ogre::Vector4::Vector4
 * Signature:  (Ogre_Vector3)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Vector4__1_1createVector4_1_1Vector3R (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong rhs
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     operator[]_const()
 * Type:       non-virtual method
 * Definition: Real Ogre::Vector4::operator[]
 * Signature:  (I)float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_Vector4__1operatorIndex_1const_1_1iV_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint i
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     operator[]()
 * Type:       non-virtual method
 * Definition: Real& Ogre::Vector4::operator[]
 * Signature:  (I)float
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Vector4__1operatorIndex_1_1iV (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint i
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     ptr()
 * Type:       non-virtual method
 * Definition: Real* Ogre::Vector4::ptr
 * Signature:  ()float
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Vector4__1ptr (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     ptr_const()
 * Type:       non-virtual method
 * Definition: const Real* Ogre::Vector4::ptr
 * Signature:  ()float
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Vector4__1ptr_1const_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     operator=()
 * Type:       non-virtual method
 * Definition: Vector4& Ogre::Vector4::operator=
 * Signature:  (Ogre_Vector4)Ogre_Vector4
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Vector4__1operatorAssignment_1_1Vector4R (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong rkVector
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     operator=()
 * Type:       non-virtual method
 * Definition: Vector4& Ogre::Vector4::operator=
 * Signature:  (float)Ogre_Vector4
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Vector4__1operatorAssignment_1_1RealV (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat fScalar
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     operator==()
 * Type:       non-virtual method
 * Definition: bool Ogre::Vector4::operator==
 * Signature:  (Ogre_Vector4)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_Vector4__1operatorEqual_1_1Vector4R_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong rkVector
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     operator!=()
 * Type:       non-virtual method
 * Definition: bool Ogre::Vector4::operator!=
 * Signature:  (Ogre_Vector4)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_Vector4__1operatorNotEqual_1_1Vector4R_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong rkVector
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     operator=()
 * Type:       non-virtual method
 * Definition: Vector4& Ogre::Vector4::operator=
 * Signature:  (Ogre_Vector3)Ogre_Vector4
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Vector4__1operatorAssignment_1_1Vector3R (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong rhs
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     operator+()
 * Type:       non-virtual method
 * Definition: Vector4 Ogre::Vector4::operator+
 * Signature:  (Ogre_Vector4)Ogre_Vector4
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Vector4__1operatorAddition_1_1Vector4R_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong rkVector
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     operator-()
 * Type:       non-virtual method
 * Definition: Vector4 Ogre::Vector4::operator-
 * Signature:  (Ogre_Vector4)Ogre_Vector4
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Vector4__1operatorSubtraction_1_1Vector4R_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong rkVector
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     operator *()
 * Type:       non-virtual method
 * Definition: Vector4 Ogre::Vector4::operator *
 * Signature:  (float)Ogre_Vector4
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Vector4__1operatorMultiplication_1_1RealV_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat fScalar
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     operator *()
 * Type:       non-virtual method
 * Definition: Vector4 Ogre::Vector4::operator *
 * Signature:  (Ogre_Vector4)Ogre_Vector4
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Vector4__1operatorMultiplication_1_1Vector4R_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong rhs
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     operator/()
 * Type:       non-virtual method
 * Definition: Vector4 Ogre::Vector4::operator/
 * Signature:  (float)Ogre_Vector4
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Vector4__1operatorDivision_1_1RealV_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat fScalar
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     operator/()
 * Type:       non-virtual method
 * Definition: Vector4 Ogre::Vector4::operator/
 * Signature:  (Ogre_Vector4)Ogre_Vector4
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Vector4__1operatorDivision_1_1Vector4R_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong rhs
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     operator+()
 * Type:       non-virtual method
 * Definition: const Vector4& Ogre::Vector4::operator+
 * Signature:  ()Ogre_Vector4
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Vector4__1operatorAddition_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     operator-()
 * Type:       non-virtual method
 * Definition: Vector4 Ogre::Vector4::operator-
 * Signature:  ()Ogre_Vector4
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Vector4__1operatorSubtraction_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     operator+=()
 * Type:       non-virtual method
 * Definition: Vector4& Ogre::Vector4::operator+=
 * Signature:  (Ogre_Vector4)Ogre_Vector4
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Vector4__1operatorIncrementAndAssign_1_1Vector4R (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong rkVector
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     operator-=()
 * Type:       non-virtual method
 * Definition: Vector4& Ogre::Vector4::operator-=
 * Signature:  (Ogre_Vector4)Ogre_Vector4
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Vector4__1operatorDecrementAndAssign_1_1Vector4R (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong rkVector
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     operator *=()
 * Type:       non-virtual method
 * Definition: Vector4& Ogre::Vector4::operator *=
 * Signature:  (float)Ogre_Vector4
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Vector4__1operatorMultiplyAndAssign_1_1RealV (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat fScalar
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     operator+=()
 * Type:       non-virtual method
 * Definition: Vector4& Ogre::Vector4::operator+=
 * Signature:  (float)Ogre_Vector4
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Vector4__1operatorIncrementAndAssign_1_1RealV (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat fScalar
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     operator-=()
 * Type:       non-virtual method
 * Definition: Vector4& Ogre::Vector4::operator-=
 * Signature:  (float)Ogre_Vector4
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Vector4__1operatorDecrementAndAssign_1_1RealV (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat fScalar
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     operator *=()
 * Type:       non-virtual method
 * Definition: Vector4& Ogre::Vector4::operator *=
 * Signature:  (Ogre_Vector4)Ogre_Vector4
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Vector4__1operatorMultiplyAndAssign_1_1Vector4R (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong rkVector
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     operator/=()
 * Type:       non-virtual method
 * Definition: Vector4& Ogre::Vector4::operator/=
 * Signature:  (float)Ogre_Vector4
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Vector4__1operatorDivideAndAssign_1_1RealV (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat fScalar
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     operator/=()
 * Type:       non-virtual method
 * Definition: Vector4& Ogre::Vector4::operator/=
 * Signature:  (Ogre_Vector4)Ogre_Vector4
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Vector4__1operatorDivideAndAssign_1_1Vector4R (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong rkVector
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     dotProduct()
 * Type:       non-virtual method
 * Definition: Real Ogre::Vector4::dotProduct
 * Signature:  (Ogre_Vector4)float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_Vector4__1dotProduct_1_1Vector4R_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong vec
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     __delete()
 * Type:       destructor
 * Definition: Ogre::Vector4::__delete
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_Vector4__1_1delete (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     getx()
 * Type:       getter for public attribute
 * Definition: Real Ogre::Vector4::x
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_Vector4__1getx (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     setx()
 * Type:       setter for public attribute
 * Definition: Real Ogre::Vector4::x
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_Vector4__1setx (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat _jni_value_
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     gety()
 * Type:       getter for public attribute
 * Definition: Real Ogre::Vector4::y
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_Vector4__1gety (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     sety()
 * Type:       setter for public attribute
 * Definition: Real Ogre::Vector4::y
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_Vector4__1sety (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat _jni_value_
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     getz()
 * Type:       getter for public attribute
 * Definition: Real Ogre::Vector4::z
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_Vector4__1getz (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     setz()
 * Type:       setter for public attribute
 * Definition: Real Ogre::Vector4::z
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_Vector4__1setz (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat _jni_value_
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     getw()
 * Type:       getter for public attribute
 * Definition: Real Ogre::Vector4::w
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_Vector4__1getw (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     setw()
 * Type:       setter for public attribute
 * Definition: Real Ogre::Vector4::w
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_Vector4__1setw (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat _jni_value_
);

/*
 * Class:      org.ogre4j.Vector4
 * Method:     getZERO()
 * Type:       getter for public attribute
 * Definition: const Vector4 Ogre::Vector4::ZERO
 * Signature:  ()Ogre_Vector4
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Vector4__1getZERO (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif /*__Included_org_ogre4j_Vector4__*/
