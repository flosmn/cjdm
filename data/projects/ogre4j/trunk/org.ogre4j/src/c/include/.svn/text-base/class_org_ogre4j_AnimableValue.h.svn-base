///////////////////////////////////////////////////////////////////////////////
/// This source file is generated by XBiG (The XSLT Bindings Generator)
/// For the latest info, see http://sourceforge.net/projects/xbig/
///
/// Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
/// Also see acknowledgements in Readme.html
///
/// This program is free software; you can redistribute it and/or modify it under
/// the terms of the GNU Lesser General Public License as published by the Free Software
/// Foundation; either version 2 of the License, or (at your option) any later
/// version.
///
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
/// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
///
/// You should have received a copy of the GNU Lesser General Public License along with
/// this program; if not, write to the Free Software Foundation, Inc., 59 Temple
/// Place - Suite 330, Boston, MA 02111-1307, USA, or go to
/// http://www.gnu.org/copyleft/lesser.txt.
///
/// Machine generated file
///////////////////////////////////////////////////////////////////////////////



#ifdef WIN32
	// disable warnings
	#pragma warning (disable : 4267) // conversion from 'size_t' to 'jint'
#else

#endif


#ifndef __Included_org_ogre4j_AnimableValue__
#define __Included_org_ogre4j_AnimableValue__


#include "jni_base.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/*
 * Class:      org.ogre4j.AnimableValue
 * Method:     getType()
 * Type:       non-virtual method
 * Definition: ValueType Ogre::AnimableValue::getType
 * Signature:  ()Ogre_AnimableValue_ValueType
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_AnimableValue__1getType_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.AnimableValue
 * Method:     setCurrentStateAsBaseValue()
 * Type:       pure virtual method
 * Definition: virtual void Ogre::AnimableValue::setCurrentStateAsBaseValue
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimableValue__1setCurrentStateAsBaseValue (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.AnimableValue
 * Method:     setValue()
 * Type:       virtual method
 * Definition: virtual void Ogre::AnimableValue::setValue
 * Signature:  (I)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimableValue__1setValue_1_1iv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint a1
);

/*
 * Class:      org.ogre4j.AnimableValue
 * Method:     setValue()
 * Type:       virtual method
 * Definition: virtual void Ogre::AnimableValue::setValue
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimableValue__1setValue_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat a1
);

/*
 * Class:      org.ogre4j.AnimableValue
 * Method:     setValue()
 * Type:       virtual method
 * Definition: virtual void Ogre::AnimableValue::setValue
 * Signature:  (Ogre_Vector2)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimableValue__1setValue_1_1Vector2R (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong a1
);

/*
 * Class:      org.ogre4j.AnimableValue
 * Method:     setValue()
 * Type:       virtual method
 * Definition: virtual void Ogre::AnimableValue::setValue
 * Signature:  (Ogre_Vector3)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimableValue__1setValue_1_1Vector3R (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong a1
);

/*
 * Class:      org.ogre4j.AnimableValue
 * Method:     setValue()
 * Type:       virtual method
 * Definition: virtual void Ogre::AnimableValue::setValue
 * Signature:  (Ogre_Vector4)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimableValue__1setValue_1_1Vector4R (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong a1
);

/*
 * Class:      org.ogre4j.AnimableValue
 * Method:     setValue()
 * Type:       virtual method
 * Definition: virtual void Ogre::AnimableValue::setValue
 * Signature:  (Ogre_Quaternion)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimableValue__1setValue_1_1QuaternionR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong a1
);

/*
 * Class:      org.ogre4j.AnimableValue
 * Method:     setValue()
 * Type:       virtual method
 * Definition: virtual void Ogre::AnimableValue::setValue
 * Signature:  (Ogre_ColourValue)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimableValue__1setValue_1_1ColourValueR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong a1
);

/*
 * Class:      org.ogre4j.AnimableValue
 * Method:     setValue()
 * Type:       virtual method
 * Definition: virtual void Ogre::AnimableValue::setValue
 * Signature:  (Ogre_Radian)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimableValue__1setValue_1_1RadianR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong a1
);

/*
 * Class:      org.ogre4j.AnimableValue
 * Method:     setValue()
 * Type:       virtual method
 * Definition: virtual void Ogre::AnimableValue::setValue
 * Signature:  (Ogre_Degree)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimableValue__1setValue_1_1DegreeR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong a1
);

/*
 * Class:      org.ogre4j.AnimableValue
 * Method:     setValue()
 * Type:       virtual method
 * Definition: virtual void Ogre::AnimableValue::setValue
 * Signature:  (Ogre_Any)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimableValue__1setValue_1_1AnyR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong val
);

/*
 * Class:      org.ogre4j.AnimableValue
 * Method:     resetToBaseValue()
 * Type:       virtual method
 * Definition: virtual void Ogre::AnimableValue::resetToBaseValue
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimableValue__1resetToBaseValue (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.AnimableValue
 * Method:     applyDeltaValue()
 * Type:       virtual method
 * Definition: virtual void Ogre::AnimableValue::applyDeltaValue
 * Signature:  (I)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimableValue__1applyDeltaValue_1_1iv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint a1
);

/*
 * Class:      org.ogre4j.AnimableValue
 * Method:     applyDeltaValue()
 * Type:       virtual method
 * Definition: virtual void Ogre::AnimableValue::applyDeltaValue
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimableValue__1applyDeltaValue_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat a1
);

/*
 * Class:      org.ogre4j.AnimableValue
 * Method:     applyDeltaValue()
 * Type:       virtual method
 * Definition: virtual void Ogre::AnimableValue::applyDeltaValue
 * Signature:  (Ogre_Vector2)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimableValue__1applyDeltaValue_1_1Vector2R (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong a1
);

/*
 * Class:      org.ogre4j.AnimableValue
 * Method:     applyDeltaValue()
 * Type:       virtual method
 * Definition: virtual void Ogre::AnimableValue::applyDeltaValue
 * Signature:  (Ogre_Vector3)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimableValue__1applyDeltaValue_1_1Vector3R (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong a1
);

/*
 * Class:      org.ogre4j.AnimableValue
 * Method:     applyDeltaValue()
 * Type:       virtual method
 * Definition: virtual void Ogre::AnimableValue::applyDeltaValue
 * Signature:  (Ogre_Vector4)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimableValue__1applyDeltaValue_1_1Vector4R (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong a1
);

/*
 * Class:      org.ogre4j.AnimableValue
 * Method:     applyDeltaValue()
 * Type:       virtual method
 * Definition: virtual void Ogre::AnimableValue::applyDeltaValue
 * Signature:  (Ogre_Quaternion)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimableValue__1applyDeltaValue_1_1QuaternionR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong a1
);

/*
 * Class:      org.ogre4j.AnimableValue
 * Method:     applyDeltaValue()
 * Type:       virtual method
 * Definition: virtual void Ogre::AnimableValue::applyDeltaValue
 * Signature:  (Ogre_ColourValue)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimableValue__1applyDeltaValue_1_1ColourValueR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong a1
);

/*
 * Class:      org.ogre4j.AnimableValue
 * Method:     applyDeltaValue()
 * Type:       virtual method
 * Definition: virtual void Ogre::AnimableValue::applyDeltaValue
 * Signature:  (Ogre_Degree)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimableValue__1applyDeltaValue_1_1DegreeR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong a1
);

/*
 * Class:      org.ogre4j.AnimableValue
 * Method:     applyDeltaValue()
 * Type:       virtual method
 * Definition: virtual void Ogre::AnimableValue::applyDeltaValue
 * Signature:  (Ogre_Radian)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimableValue__1applyDeltaValue_1_1RadianR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong a1
);

/*
 * Class:      org.ogre4j.AnimableValue
 * Method:     applyDeltaValue()
 * Type:       virtual method
 * Definition: virtual void Ogre::AnimableValue::applyDeltaValue
 * Signature:  (Ogre_Any)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimableValue__1applyDeltaValue_1_1AnyR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong val
);

/*
 * Class:      org.ogre4j.AnimableValue
 * Method:     __delete()
 * Type:       destructor
 * Definition: Ogre::AnimableValue::__delete
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimableValue__1_1delete (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);;;;;

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif /*__Included_org_ogre4j_AnimableValue__*/
