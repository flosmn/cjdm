///////////////////////////////////////////////////////////////////////////////
/// This source file is generated by XBiG (The XSLT Bindings Generator)
/// For the latest info, see http://sourceforge.net/projects/xbig/
///
/// Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
/// Also see acknowledgements in Readme.html
///
/// This program is free software; you can redistribute it and/or modify it under
/// the terms of the GNU Lesser General Public License as published by the Free Software
/// Foundation; either version 2 of the License, or (at your option) any later
/// version.
///
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
/// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
///
/// You should have received a copy of the GNU Lesser General Public License along with
/// this program; if not, write to the Free Software Foundation, Inc., 59 Temple
/// Place - Suite 330, Boston, MA 02111-1307, USA, or go to
/// http://www.gnu.org/copyleft/lesser.txt.
///
/// Machine generated file
///////////////////////////////////////////////////////////////////////////////



#ifdef WIN32
	// disable warnings
	#pragma warning (disable : 4267) // conversion from 'size_t' to 'jint'
#else

#endif


#ifndef __Included_org_ogre4j_Log__
#define __Included_org_ogre4j_Log__


#include "jni_base.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/*
 * Class:      org.ogre4j.Log
 * Method:     Log()
 * Type:       constructor
 * Definition: Ogre::Log::Log
 * Signature:  (std_stringZZ)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Log__1_1createLog_1_1StringRbvbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jstring name, 
  jboolean debugOutput, 
  jboolean suppressFileOutput
);

/*
 * Class:      org.ogre4j.Log
 * Method:     getName()
 * Type:       non-virtual method
 * Definition: const String& Ogre::Log::getName
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_Log__1getName_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.Log
 * Method:     isDebugOutputEnabled()
 * Type:       non-virtual method
 * Definition: bool Ogre::Log::isDebugOutputEnabled
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_Log__1isDebugOutputEnabled_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.Log
 * Method:     isFileOutputSuppressed()
 * Type:       non-virtual method
 * Definition: bool Ogre::Log::isFileOutputSuppressed
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_Log__1isFileOutputSuppressed_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.Log
 * Method:     logMessage()
 * Type:       non-virtual method
 * Definition: void Ogre::Log::logMessage
 * Signature:  (std_stringOgre_LogMessageLevelZ)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_Log__1logMessage_1_1StringRLogMessageLevelvbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring message, 
  jint lml, 
  jboolean maskDebug
);

/*
 * Class:      org.ogre4j.Log
 * Method:     stream()
 * Type:       non-virtual method
 * Definition: Stream Ogre::Log::stream
 * Signature:  (Ogre_LogMessageLevelZ)Ogre_Log_Stream
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Log__1stream_1_1LogMessageLevelvbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint lml, 
  jboolean maskDebug
);

/*
 * Class:      org.ogre4j.Log
 * Method:     setDebugOutputEnabled()
 * Type:       non-virtual method
 * Definition: void Ogre::Log::setDebugOutputEnabled
 * Signature:  (Z)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_Log__1setDebugOutputEnabled_1_1bv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jboolean debugOutput
);

/*
 * Class:      org.ogre4j.Log
 * Method:     setLogDetail()
 * Type:       non-virtual method
 * Definition: void Ogre::Log::setLogDetail
 * Signature:  (Ogre_LoggingLevel)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_Log__1setLogDetail_1_1LoggingLevelv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint ll
);

/*
 * Class:      org.ogre4j.Log
 * Method:     getLogDetail()
 * Type:       non-virtual method
 * Definition: LoggingLevel Ogre::Log::getLogDetail
 * Signature:  ()Ogre_LoggingLevel
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_Log__1getLogDetail_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.Log
 * Method:     addListener()
 * Type:       non-virtual method
 * Definition: void Ogre::Log::addListener
 * Signature:  (Ogre_LogListener)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_Log__1addListener_1_1LogListenerp (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong listener
);

/*
 * Class:      org.ogre4j.Log
 * Method:     removeListener()
 * Type:       non-virtual method
 * Definition: void Ogre::Log::removeListener
 * Signature:  (Ogre_LogListener)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_Log__1removeListener_1_1LogListenerp (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong listener
);

/*
 * Class:      org.ogre4j.Log
 * Method:     __delete()
 * Type:       destructor
 * Definition: Ogre::Log::__delete
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_Log__1_1delete (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif /*__Included_org_ogre4j_Log__*/
