///////////////////////////////////////////////////////////////////////////////
/// This source file is generated by XBiG (The XSLT Bindings Generator)
/// For the latest info, see http://sourceforge.net/projects/xbig/
///
/// Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
/// Also see acknowledgements in Readme.html
///
/// This program is free software; you can redistribute it and/or modify it under
/// the terms of the GNU Lesser General Public License as published by the Free Software
/// Foundation; either version 2 of the License, or (at your option) any later
/// version.
///
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
/// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
///
/// You should have received a copy of the GNU Lesser General Public License along with
/// this program; if not, write to the Free Software Foundation, Inc., 59 Temple
/// Place - Suite 330, Boston, MA 02111-1307, USA, or go to
/// http://www.gnu.org/copyleft/lesser.txt.
///
/// Machine generated file
///////////////////////////////////////////////////////////////////////////////



#ifdef WIN32
	// disable warnings
	#pragma warning (disable : 4267) // conversion from 'size_t' to 'jint'
#else

#endif


#ifndef __Included_org_ogre4j_AnimationStateSet__
#define __Included_org_ogre4j_AnimationStateSet__


#include "jni_base.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/*
 * Class:      org.ogre4j.AnimationStateSet
 * Method:     AnimationStateSet()
 * Type:       constructor
 * Definition: Ogre::AnimationStateSet::AnimationStateSet
 * Signature:  ()V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_AnimationStateSet__1_1createAnimationStateSet (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.AnimationStateSet
 * Method:     AnimationStateSet()
 * Type:       constructor
 * Definition: Ogre::AnimationStateSet::AnimationStateSet
 * Signature:  (Ogre_AnimationStateSet)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_AnimationStateSet__1_1createAnimationStateSet_1_1AnimationStateSetR (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong rhs
);

/*
 * Class:      org.ogre4j.AnimationStateSet
 * Method:     createAnimationState()
 * Type:       non-virtual method
 * Definition: AnimationState* Ogre::AnimationStateSet::createAnimationState
 * Signature:  (std_stringfloatfloatfloatZ)Ogre_AnimationState
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_AnimationStateSet__1createAnimationState_1_1StringRRealvRealvRealvbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring animName, 
  jfloat timePos, 
  jfloat length, 
  jfloat weight, 
  jboolean enabled
);

/*
 * Class:      org.ogre4j.AnimationStateSet
 * Method:     getAnimationState()
 * Type:       non-virtual method
 * Definition: AnimationState* Ogre::AnimationStateSet::getAnimationState
 * Signature:  (std_string)Ogre_AnimationState
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_AnimationStateSet__1getAnimationState_1_1StringR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name
);

/*
 * Class:      org.ogre4j.AnimationStateSet
 * Method:     hasAnimationState()
 * Type:       non-virtual method
 * Definition: bool Ogre::AnimationStateSet::hasAnimationState
 * Signature:  (std_string)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_AnimationStateSet__1hasAnimationState_1_1StringR_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name
);

/*
 * Class:      org.ogre4j.AnimationStateSet
 * Method:     removeAnimationState()
 * Type:       non-virtual method
 * Definition: void Ogre::AnimationStateSet::removeAnimationState
 * Signature:  (std_string)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimationStateSet__1removeAnimationState_1_1StringR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jstring name
);

/*
 * Class:      org.ogre4j.AnimationStateSet
 * Method:     removeAllAnimationStates()
 * Type:       non-virtual method
 * Definition: void Ogre::AnimationStateSet::removeAllAnimationStates
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimationStateSet__1removeAllAnimationStates (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.AnimationStateSet
 * Method:     getAnimationStateIterator()
 * Type:       non-virtual method
 * Definition: AnimationStateIterator Ogre::AnimationStateSet::getAnimationStateIterator
 * Signature:  ()Ogre_AnimationStateIterator
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_AnimationStateSet__1getAnimationStateIterator (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.AnimationStateSet
 * Method:     getAnimationStateIterator_const()
 * Type:       non-virtual method
 * Definition: ConstAnimationStateIterator Ogre::AnimationStateSet::getAnimationStateIterator
 * Signature:  ()Ogre_ConstAnimationStateIterator
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_AnimationStateSet__1getAnimationStateIterator_1const_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.AnimationStateSet
 * Method:     copyMatchingState()
 * Type:       non-virtual method
 * Definition: void Ogre::AnimationStateSet::copyMatchingState
 * Signature:  (Ogre_AnimationStateSet)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimationStateSet__1copyMatchingState_1_1AnimationStateSetp_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong target
);

/*
 * Class:      org.ogre4j.AnimationStateSet
 * Method:     _notifyDirty()
 * Type:       non-virtual method
 * Definition: void Ogre::AnimationStateSet::_notifyDirty
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimationStateSet__1_1notifyDirty (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.AnimationStateSet
 * Method:     getDirtyFrameNumber()
 * Type:       non-virtual method
 * Definition: unsigned long Ogre::AnimationStateSet::getDirtyFrameNumber
 * Signature:  ()J
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_AnimationStateSet__1getDirtyFrameNumber_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.AnimationStateSet
 * Method:     _notifyAnimationStateEnabled()
 * Type:       non-virtual method
 * Definition: void Ogre::AnimationStateSet::_notifyAnimationStateEnabled
 * Signature:  (Ogre_AnimationStateZ)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimationStateSet__1_1notifyAnimationStateEnabled_1_1AnimationStatepbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong target, 
  jboolean enabled
);

/*
 * Class:      org.ogre4j.AnimationStateSet
 * Method:     hasEnabledAnimationState()
 * Type:       non-virtual method
 * Definition: bool Ogre::AnimationStateSet::hasEnabledAnimationState
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_AnimationStateSet__1hasEnabledAnimationState_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.AnimationStateSet
 * Method:     getEnabledAnimationStateIterator()
 * Type:       non-virtual method
 * Definition: ConstEnabledAnimationStateIterator Ogre::AnimationStateSet::getEnabledAnimationStateIterator
 * Signature:  ()Ogre_ConstEnabledAnimationStateIterator
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_AnimationStateSet__1getEnabledAnimationStateIterator_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.AnimationStateSet
 * Method:     __delete()
 * Type:       destructor
 * Definition: Ogre::AnimationStateSet::__delete
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_AnimationStateSet__1_1delete (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif /*__Included_org_ogre4j_AnimationStateSet__*/
