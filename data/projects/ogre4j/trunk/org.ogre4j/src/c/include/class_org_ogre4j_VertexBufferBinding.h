///////////////////////////////////////////////////////////////////////////////
/// This source file is generated by XBiG (The XSLT Bindings Generator)
/// For the latest info, see http://sourceforge.net/projects/xbig/
///
/// Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
/// Also see acknowledgements in Readme.html
///
/// This program is free software; you can redistribute it and/or modify it under
/// the terms of the GNU Lesser General Public License as published by the Free Software
/// Foundation; either version 2 of the License, or (at your option) any later
/// version.
///
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
/// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
///
/// You should have received a copy of the GNU Lesser General Public License along with
/// this program; if not, write to the Free Software Foundation, Inc., 59 Temple
/// Place - Suite 330, Boston, MA 02111-1307, USA, or go to
/// http://www.gnu.org/copyleft/lesser.txt.
///
/// Machine generated file
///////////////////////////////////////////////////////////////////////////////



#ifdef WIN32
	// disable warnings
	#pragma warning (disable : 4267) // conversion from 'size_t' to 'jint'
#else

#endif


#ifndef __Included_org_ogre4j_VertexBufferBinding__
#define __Included_org_ogre4j_VertexBufferBinding__


#include "jni_base.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/*
 * Class:      org.ogre4j.VertexBufferBinding
 * Method:     VertexBufferBinding()
 * Type:       constructor
 * Definition: Ogre::VertexBufferBinding::VertexBufferBinding
 * Signature:  ()V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_VertexBufferBinding__1_1createVertexBufferBinding (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
);

/*
 * Class:      org.ogre4j.VertexBufferBinding
 * Method:     setBinding()
 * Type:       virtual method
 * Definition: virtual void Ogre::VertexBufferBinding::setBinding
 * Signature:  (SOgre_HardwareVertexBufferSharedPtr)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_VertexBufferBinding__1setBinding_1_1HvHardwareVertexBufferSharedPtrR (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint index, 
  jlong buffer
);

/*
 * Class:      org.ogre4j.VertexBufferBinding
 * Method:     unsetBinding()
 * Type:       virtual method
 * Definition: virtual void Ogre::VertexBufferBinding::unsetBinding
 * Signature:  (S)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_VertexBufferBinding__1unsetBinding_1_1Hv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint index
);

/*
 * Class:      org.ogre4j.VertexBufferBinding
 * Method:     unsetAllBindings()
 * Type:       virtual method
 * Definition: virtual void Ogre::VertexBufferBinding::unsetAllBindings
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_VertexBufferBinding__1unsetAllBindings (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.VertexBufferBinding
 * Method:     getBindings()
 * Type:       virtual method
 * Definition: virtual const VertexBufferBindingMap& Ogre::VertexBufferBinding::getBindings
 * Signature:  ()Ogre_VertexBufferBinding_VertexBufferBindingMap
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_VertexBufferBinding__1getBindings_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.VertexBufferBinding
 * Method:     getBuffer()
 * Type:       virtual method
 * Definition: virtual const HardwareVertexBufferSharedPtr& Ogre::VertexBufferBinding::getBuffer
 * Signature:  (S)Ogre_HardwareVertexBufferSharedPtr
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_VertexBufferBinding__1getBuffer_1_1Hv_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint index
);

/*
 * Class:      org.ogre4j.VertexBufferBinding
 * Method:     isBufferBound()
 * Type:       virtual method
 * Definition: virtual bool Ogre::VertexBufferBinding::isBufferBound
 * Signature:  (S)Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_VertexBufferBinding__1isBufferBound_1_1Hv_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint index
);

/*
 * Class:      org.ogre4j.VertexBufferBinding
 * Method:     getBufferCount()
 * Type:       virtual method
 * Definition: virtual size_t Ogre::VertexBufferBinding::getBufferCount
 * Signature:  ()I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_VertexBufferBinding__1getBufferCount_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.VertexBufferBinding
 * Method:     getNextIndex()
 * Type:       virtual method
 * Definition: virtual unsigned short Ogre::VertexBufferBinding::getNextIndex
 * Signature:  ()S
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_VertexBufferBinding__1getNextIndex_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.VertexBufferBinding
 * Method:     getLastBoundIndex()
 * Type:       virtual method
 * Definition: virtual unsigned short Ogre::VertexBufferBinding::getLastBoundIndex
 * Signature:  ()S
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_VertexBufferBinding__1getLastBoundIndex_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.VertexBufferBinding
 * Method:     hasGaps()
 * Type:       virtual method
 * Definition: virtual bool Ogre::VertexBufferBinding::hasGaps
 * Signature:  ()Z
 */

JNIEXPORT jboolean JNICALL Java_org_ogre4j_VertexBufferBinding__1hasGaps_1const (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

/*
 * Class:      org.ogre4j.VertexBufferBinding
 * Method:     closeGaps()
 * Type:       virtual method
 * Definition: virtual void Ogre::VertexBufferBinding::closeGaps
 * Signature:  (Ogre_VertexBufferBinding_BindingIndexMap)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_VertexBufferBinding__1closeGaps_1_1BindingIndexMapr (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong bindingIndexMap
);

/*
 * Class:      org.ogre4j.VertexBufferBinding
 * Method:     __delete()
 * Type:       destructor
 * Definition: Ogre::VertexBufferBinding::__delete
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_VertexBufferBinding__1_1delete (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
);

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif /*__Included_org_ogre4j_VertexBufferBinding__*/
