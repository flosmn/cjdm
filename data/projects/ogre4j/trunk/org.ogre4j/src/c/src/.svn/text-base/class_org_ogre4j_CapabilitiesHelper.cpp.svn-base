///////////////////////////////////////////////////////////////////////////////
/// This source file is generated by XBiG (The XSLT Bindings Generator)
/// For the latest info, see http://sourceforge.net/projects/xbig/
///
/// Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
/// Also see acknowledgements in Readme.html
///
/// This program is free software; you can redistribute it and/or modify it under
/// the terms of the GNU Lesser General Public License as published by the Free Software
/// Foundation; either version 2 of the License, or (at your option) any later
/// version.
///
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
/// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
///
/// You should have received a copy of the GNU Lesser General Public License along with
/// this program; if not, write to the Free Software Foundation, Inc., 59 Temple
/// Place - Suite 330, Boston, MA 02111-1307, USA, or go to
/// http://www.gnu.org/copyleft/lesser.txt.
///
/// Machine generated file
///////////////////////////////////////////////////////////////////////////////



#ifdef WIN32
	// disable warnings
	#pragma warning (disable : 4267) // conversion from 'size_t' to 'jint'
#else

#endif



// use base library for cpp2j
#include "jni_base_all.h"

// includes from config
#include <Ogre4JStableHeaders.h>

// import declaration of all functions
#include "class_org_ogre4j_CapabilitiesHelper.h"

// import header files of original library
#include <OgreRenderSystemCapabilities.h>

/*
 * Class:org_ogre4j_CapabilitiesHelper
 * Method:getEnumValues
 * Signature:()[I
 */
JNIEXPORT jintArray JNICALL Java_org_ogre4j_CapabilitiesHelper_getEnumValues
(JNIEnv * env, jclass that)
{
    jint enum_values[] = {
        Ogre::RSC_AUTOMIPMAP,
        Ogre::RSC_BLENDING,
        Ogre::RSC_ANISOTROPY,
        Ogre::RSC_DOT3,
        Ogre::RSC_CUBEMAPPING,
        Ogre::RSC_HWSTENCIL,
        Ogre::RSC_VBO,
        Ogre::RSC_VERTEX_PROGRAM,
        Ogre::RSC_FRAGMENT_PROGRAM,
        Ogre::RSC_SCISSOR_TEST,
        Ogre::RSC_TWO_SIDED_STENCIL,
        Ogre::RSC_STENCIL_WRAP,
        Ogre::RSC_HWOCCLUSION,
        Ogre::RSC_USER_CLIP_PLANES,
        Ogre::RSC_VERTEX_FORMAT_UBYTE4,
        Ogre::RSC_INFINITE_FAR_PLANE,
        Ogre::RSC_HWRENDER_TO_TEXTURE,
        Ogre::RSC_TEXTURE_FLOAT,
        Ogre::RSC_NON_POWER_OF_2_TEXTURES,
        Ogre::RSC_TEXTURE_3D,
        Ogre::RSC_POINT_SPRITES,
        Ogre::RSC_POINT_EXTENDED_PARAMETERS,
        Ogre::RSC_VERTEX_TEXTURE_FETCH,
        Ogre::RSC_MIPMAP_LOD_BIAS,
        Ogre::RSC_GEOMETRY_PROGRAM,
        Ogre::RSC_HWRENDER_TO_VERTEX_BUFFER,
        Ogre::RSC_TEXTURE_COMPRESSION,
        Ogre::RSC_TEXTURE_COMPRESSION_DXT,
        Ogre::RSC_TEXTURE_COMPRESSION_VTC,
        Ogre::RSC_FIXED_FUNCTION,
        Ogre::RSC_MRT_DIFFERENT_BIT_DEPTHS,
        Ogre::RSC_ALPHA_TO_COVERAGE,
        Ogre::RSC_PERSTAGECONSTANT,
        Ogre::RSC_GL1_5_NOVBO,
        Ogre::RSC_FBO,
        Ogre::RSC_FBO_ARB,
        Ogre::RSC_FBO_ATI,
        Ogre::RSC_PBUFFER,
        Ogre::RSC_GL1_5_NOHWOCCLUSION
    };
    jintArray array = env->NewIntArray(39);
    env->SetIntArrayRegion(array, 0,39, enum_values);
    return array;
}
