///////////////////////////////////////////////////////////////////////////////
/// This source file is generated by XBiG (The XSLT Bindings Generator)
/// For the latest info, see http://sourceforge.net/projects/xbig/
///
/// Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
/// Also see acknowledgements in Readme.html
///
/// This program is free software; you can redistribute it and/or modify it under
/// the terms of the GNU Lesser General Public License as published by the Free Software
/// Foundation; either version 2 of the License, or (at your option) any later
/// version.
///
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
/// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
///
/// You should have received a copy of the GNU Lesser General Public License along with
/// this program; if not, write to the Free Software Foundation, Inc., 59 Temple
/// Place - Suite 330, Boston, MA 02111-1307, USA, or go to
/// http://www.gnu.org/copyleft/lesser.txt.
///
/// Machine generated file
///////////////////////////////////////////////////////////////////////////////



#ifdef WIN32
	// disable warnings
	#pragma warning (disable : 4267) // conversion from 'size_t' to 'jint'
#else

#endif


// includes from config
#include <Ogre4JStableHeaders.h>

// use base library for cpp2j
#include "jni_base_all.h"

// import declaration of all functions
#include "class_org_ogre4j_ShadowVolumeExtrudeProgram.h"

// import header files of original library
#include <OgreShadowVolumeExtrudeProgram.h>



/*
 * Class:      org.ogre4j.ShadowVolumeExtrudeProgram
 * Method:     initialise()
 * Type:       static method
 * Definition: static void Ogre::ShadowVolumeExtrudeProgram::initialise
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ShadowVolumeExtrudeProgram__1initialise (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
)
{
   // static method of class Ogre::ShadowVolumeExtrudeProgram without return value 
   // parameter conversions 
   
   // call library method 
   Ogre::ShadowVolumeExtrudeProgram::initialise();
} /* static void Ogre::ShadowVolumeExtrudeProgram::initialise */


/*
 * Class:      org.ogre4j.ShadowVolumeExtrudeProgram
 * Method:     shutdown()
 * Type:       static method
 * Definition: static void Ogre::ShadowVolumeExtrudeProgram::shutdown
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ShadowVolumeExtrudeProgram__1shutdown (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
)
{
   // static method of class Ogre::ShadowVolumeExtrudeProgram without return value 
   // parameter conversions 
   
   // call library method 
   Ogre::ShadowVolumeExtrudeProgram::shutdown();
} /* static void Ogre::ShadowVolumeExtrudeProgram::shutdown */


/*
 * Class:      org.ogre4j.ShadowVolumeExtrudeProgram
 * Method:     getPointLightExtruderArbvp1()
 * Type:       static method
 * Definition: static const String& Ogre::ShadowVolumeExtrudeProgram::getPointLightExtruderArbvp1
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_ShadowVolumeExtrudeProgram__1getPointLightExtruderArbvp1 (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
)
{
   // static method of class Ogre::ShadowVolumeExtrudeProgram with return value 
   // parameter conversions 
   
   // call library method 
   std::string _cpp_result = Ogre::ShadowVolumeExtrudeProgram::getPointLightExtruderArbvp1(); 
   return org::xbig::jni::to_jstring(_jni_env_, _cpp_result);
} /* static const String& Ogre::ShadowVolumeExtrudeProgram::getPointLightExtruderArbvp1 */


/*
 * Class:      org.ogre4j.ShadowVolumeExtrudeProgram
 * Method:     getPointLightExtruderVs_1_1()
 * Type:       static method
 * Definition: static const String& Ogre::ShadowVolumeExtrudeProgram::getPointLightExtruderVs_1_1
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_ShadowVolumeExtrudeProgram__1getPointLightExtruderVs_11_11 (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
)
{
   // static method of class Ogre::ShadowVolumeExtrudeProgram with return value 
   // parameter conversions 
   
   // call library method 
   std::string _cpp_result = Ogre::ShadowVolumeExtrudeProgram::getPointLightExtruderVs_1_1(); 
   return org::xbig::jni::to_jstring(_jni_env_, _cpp_result);
} /* static const String& Ogre::ShadowVolumeExtrudeProgram::getPointLightExtruderVs_1_1 */


/*
 * Class:      org.ogre4j.ShadowVolumeExtrudeProgram
 * Method:     getDirectionalLightExtruderArbvp1()
 * Type:       static method
 * Definition: static const String& Ogre::ShadowVolumeExtrudeProgram::getDirectionalLightExtruderArbvp1
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_ShadowVolumeExtrudeProgram__1getDirectionalLightExtruderArbvp1 (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
)
{
   // static method of class Ogre::ShadowVolumeExtrudeProgram with return value 
   // parameter conversions 
   
   // call library method 
   std::string _cpp_result = Ogre::ShadowVolumeExtrudeProgram::getDirectionalLightExtruderArbvp1(); 
   return org::xbig::jni::to_jstring(_jni_env_, _cpp_result);
} /* static const String& Ogre::ShadowVolumeExtrudeProgram::getDirectionalLightExtruderArbvp1 */


/*
 * Class:      org.ogre4j.ShadowVolumeExtrudeProgram
 * Method:     getDirectionalLightExtruderVs_1_1()
 * Type:       static method
 * Definition: static const String& Ogre::ShadowVolumeExtrudeProgram::getDirectionalLightExtruderVs_1_1
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_ShadowVolumeExtrudeProgram__1getDirectionalLightExtruderVs_11_11 (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
)
{
   // static method of class Ogre::ShadowVolumeExtrudeProgram with return value 
   // parameter conversions 
   
   // call library method 
   std::string _cpp_result = Ogre::ShadowVolumeExtrudeProgram::getDirectionalLightExtruderVs_1_1(); 
   return org::xbig::jni::to_jstring(_jni_env_, _cpp_result);
} /* static const String& Ogre::ShadowVolumeExtrudeProgram::getDirectionalLightExtruderVs_1_1 */


/*
 * Class:      org.ogre4j.ShadowVolumeExtrudeProgram
 * Method:     getPointLightExtruderArbvp1Debug()
 * Type:       static method
 * Definition: static const String& Ogre::ShadowVolumeExtrudeProgram::getPointLightExtruderArbvp1Debug
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_ShadowVolumeExtrudeProgram__1getPointLightExtruderArbvp1Debug (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
)
{
   // static method of class Ogre::ShadowVolumeExtrudeProgram with return value 
   // parameter conversions 
   
   // call library method 
   std::string _cpp_result = Ogre::ShadowVolumeExtrudeProgram::getPointLightExtruderArbvp1Debug(); 
   return org::xbig::jni::to_jstring(_jni_env_, _cpp_result);
} /* static const String& Ogre::ShadowVolumeExtrudeProgram::getPointLightExtruderArbvp1Debug */


/*
 * Class:      org.ogre4j.ShadowVolumeExtrudeProgram
 * Method:     getPointLightExtruderVs_1_1Debug()
 * Type:       static method
 * Definition: static const String& Ogre::ShadowVolumeExtrudeProgram::getPointLightExtruderVs_1_1Debug
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_ShadowVolumeExtrudeProgram__1getPointLightExtruderVs_11_11Debug (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
)
{
   // static method of class Ogre::ShadowVolumeExtrudeProgram with return value 
   // parameter conversions 
   
   // call library method 
   std::string _cpp_result = Ogre::ShadowVolumeExtrudeProgram::getPointLightExtruderVs_1_1Debug(); 
   return org::xbig::jni::to_jstring(_jni_env_, _cpp_result);
} /* static const String& Ogre::ShadowVolumeExtrudeProgram::getPointLightExtruderVs_1_1Debug */


/*
 * Class:      org.ogre4j.ShadowVolumeExtrudeProgram
 * Method:     getDirectionalLightExtruderArbvp1Debug()
 * Type:       static method
 * Definition: static const String& Ogre::ShadowVolumeExtrudeProgram::getDirectionalLightExtruderArbvp1Debug
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_ShadowVolumeExtrudeProgram__1getDirectionalLightExtruderArbvp1Debug (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
)
{
   // static method of class Ogre::ShadowVolumeExtrudeProgram with return value 
   // parameter conversions 
   
   // call library method 
   std::string _cpp_result = Ogre::ShadowVolumeExtrudeProgram::getDirectionalLightExtruderArbvp1Debug(); 
   return org::xbig::jni::to_jstring(_jni_env_, _cpp_result);
} /* static const String& Ogre::ShadowVolumeExtrudeProgram::getDirectionalLightExtruderArbvp1Debug */


/*
 * Class:      org.ogre4j.ShadowVolumeExtrudeProgram
 * Method:     getDirectionalLightExtruderVs_1_1Debug()
 * Type:       static method
 * Definition: static const String& Ogre::ShadowVolumeExtrudeProgram::getDirectionalLightExtruderVs_1_1Debug
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_ShadowVolumeExtrudeProgram__1getDirectionalLightExtruderVs_11_11Debug (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
)
{
   // static method of class Ogre::ShadowVolumeExtrudeProgram with return value 
   // parameter conversions 
   
   // call library method 
   std::string _cpp_result = Ogre::ShadowVolumeExtrudeProgram::getDirectionalLightExtruderVs_1_1Debug(); 
   return org::xbig::jni::to_jstring(_jni_env_, _cpp_result);
} /* static const String& Ogre::ShadowVolumeExtrudeProgram::getDirectionalLightExtruderVs_1_1Debug */


/*
 * Class:      org.ogre4j.ShadowVolumeExtrudeProgram
 * Method:     getProgramSource()
 * Type:       static method
 * Definition: static const String& Ogre::ShadowVolumeExtrudeProgram::getProgramSource
 * Signature:  (Ogre_Light_LightTypesstd_stringZZ)std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_ShadowVolumeExtrudeProgram__1getProgramSource_1_1Light_1LightTypesvStringVbvbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jint lightType, 
  jstring syntax, 
  jboolean finite, 
  jboolean debug
)
{
   // static method of class Ogre::ShadowVolumeExtrudeProgram with return value 
   // parameter conversions 
  Ogre::Light::LightTypes _cpp_lightType = (Ogre::Light::LightTypes)lightType;
  std::string _cpp_syntax = ""; org::xbig::jni::to_stdstring(_jni_env_, syntax, _cpp_syntax); // calls c-tor only. Not operator= .;
  bool _cpp_finite = finite ? true : false;
  bool _cpp_debug = debug ? true : false; 
   
   // call library method 
   std::string _cpp_result = Ogre::ShadowVolumeExtrudeProgram::getProgramSource(_cpp_lightType, _cpp_syntax, _cpp_finite, _cpp_debug); 
   return org::xbig::jni::to_jstring(_jni_env_, _cpp_result);
} /* static const String& Ogre::ShadowVolumeExtrudeProgram::getProgramSource */


/*
 * Class:      org.ogre4j.ShadowVolumeExtrudeProgram
 * Method:     getProgramName()
 * Type:       static method
 * Definition: static const String& Ogre::ShadowVolumeExtrudeProgram::getProgramName
 * Signature:  (Ogre_Light_LightTypesZZ)std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_ShadowVolumeExtrudeProgram__1getProgramName_1_1Light_1LightTypesvbvbv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jint lightType, 
  jboolean finite, 
  jboolean debug
)
{
   // static method of class Ogre::ShadowVolumeExtrudeProgram with return value 
   // parameter conversions 
  Ogre::Light::LightTypes _cpp_lightType = (Ogre::Light::LightTypes)lightType;
  bool _cpp_finite = finite ? true : false;
  bool _cpp_debug = debug ? true : false; 
   
   // call library method 
   std::string _cpp_result = Ogre::ShadowVolumeExtrudeProgram::getProgramName(_cpp_lightType, _cpp_finite, _cpp_debug); 
   return org::xbig::jni::to_jstring(_jni_env_, _cpp_result);
} /* static const String& Ogre::ShadowVolumeExtrudeProgram::getProgramName */


/*
 * Class:      org.ogre4j.ShadowVolumeExtrudeProgram
 * Method:     getPointLightExtruderArbvp1Finite()
 * Type:       static method
 * Definition: static const String& Ogre::ShadowVolumeExtrudeProgram::getPointLightExtruderArbvp1Finite
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_ShadowVolumeExtrudeProgram__1getPointLightExtruderArbvp1Finite (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
)
{
   // static method of class Ogre::ShadowVolumeExtrudeProgram with return value 
   // parameter conversions 
   
   // call library method 
   std::string _cpp_result = Ogre::ShadowVolumeExtrudeProgram::getPointLightExtruderArbvp1Finite(); 
   return org::xbig::jni::to_jstring(_jni_env_, _cpp_result);
} /* static const String& Ogre::ShadowVolumeExtrudeProgram::getPointLightExtruderArbvp1Finite */


/*
 * Class:      org.ogre4j.ShadowVolumeExtrudeProgram
 * Method:     getPointLightExtruderVs_1_1Finite()
 * Type:       static method
 * Definition: static const String& Ogre::ShadowVolumeExtrudeProgram::getPointLightExtruderVs_1_1Finite
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_ShadowVolumeExtrudeProgram__1getPointLightExtruderVs_11_11Finite (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
)
{
   // static method of class Ogre::ShadowVolumeExtrudeProgram with return value 
   // parameter conversions 
   
   // call library method 
   std::string _cpp_result = Ogre::ShadowVolumeExtrudeProgram::getPointLightExtruderVs_1_1Finite(); 
   return org::xbig::jni::to_jstring(_jni_env_, _cpp_result);
} /* static const String& Ogre::ShadowVolumeExtrudeProgram::getPointLightExtruderVs_1_1Finite */


/*
 * Class:      org.ogre4j.ShadowVolumeExtrudeProgram
 * Method:     getDirectionalLightExtruderArbvp1Finite()
 * Type:       static method
 * Definition: static const String& Ogre::ShadowVolumeExtrudeProgram::getDirectionalLightExtruderArbvp1Finite
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_ShadowVolumeExtrudeProgram__1getDirectionalLightExtruderArbvp1Finite (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
)
{
   // static method of class Ogre::ShadowVolumeExtrudeProgram with return value 
   // parameter conversions 
   
   // call library method 
   std::string _cpp_result = Ogre::ShadowVolumeExtrudeProgram::getDirectionalLightExtruderArbvp1Finite(); 
   return org::xbig::jni::to_jstring(_jni_env_, _cpp_result);
} /* static const String& Ogre::ShadowVolumeExtrudeProgram::getDirectionalLightExtruderArbvp1Finite */


/*
 * Class:      org.ogre4j.ShadowVolumeExtrudeProgram
 * Method:     getDirectionalLightExtruderVs_1_1Finite()
 * Type:       static method
 * Definition: static const String& Ogre::ShadowVolumeExtrudeProgram::getDirectionalLightExtruderVs_1_1Finite
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_ShadowVolumeExtrudeProgram__1getDirectionalLightExtruderVs_11_11Finite (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
)
{
   // static method of class Ogre::ShadowVolumeExtrudeProgram with return value 
   // parameter conversions 
   
   // call library method 
   std::string _cpp_result = Ogre::ShadowVolumeExtrudeProgram::getDirectionalLightExtruderVs_1_1Finite(); 
   return org::xbig::jni::to_jstring(_jni_env_, _cpp_result);
} /* static const String& Ogre::ShadowVolumeExtrudeProgram::getDirectionalLightExtruderVs_1_1Finite */


/*
 * Class:      org.ogre4j.ShadowVolumeExtrudeProgram
 * Method:     getPointLightExtruderArbvp1FiniteDebug()
 * Type:       static method
 * Definition: static const String& Ogre::ShadowVolumeExtrudeProgram::getPointLightExtruderArbvp1FiniteDebug
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_ShadowVolumeExtrudeProgram__1getPointLightExtruderArbvp1FiniteDebug (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
)
{
   // static method of class Ogre::ShadowVolumeExtrudeProgram with return value 
   // parameter conversions 
   
   // call library method 
   std::string _cpp_result = Ogre::ShadowVolumeExtrudeProgram::getPointLightExtruderArbvp1FiniteDebug(); 
   return org::xbig::jni::to_jstring(_jni_env_, _cpp_result);
} /* static const String& Ogre::ShadowVolumeExtrudeProgram::getPointLightExtruderArbvp1FiniteDebug */


/*
 * Class:      org.ogre4j.ShadowVolumeExtrudeProgram
 * Method:     getPointLightExtruderVs_1_1FiniteDebug()
 * Type:       static method
 * Definition: static const String& Ogre::ShadowVolumeExtrudeProgram::getPointLightExtruderVs_1_1FiniteDebug
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_ShadowVolumeExtrudeProgram__1getPointLightExtruderVs_11_11FiniteDebug (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
)
{
   // static method of class Ogre::ShadowVolumeExtrudeProgram with return value 
   // parameter conversions 
   
   // call library method 
   std::string _cpp_result = Ogre::ShadowVolumeExtrudeProgram::getPointLightExtruderVs_1_1FiniteDebug(); 
   return org::xbig::jni::to_jstring(_jni_env_, _cpp_result);
} /* static const String& Ogre::ShadowVolumeExtrudeProgram::getPointLightExtruderVs_1_1FiniteDebug */


/*
 * Class:      org.ogre4j.ShadowVolumeExtrudeProgram
 * Method:     getDirectionalLightExtruderArbvp1FiniteDebug()
 * Type:       static method
 * Definition: static const String& Ogre::ShadowVolumeExtrudeProgram::getDirectionalLightExtruderArbvp1FiniteDebug
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_ShadowVolumeExtrudeProgram__1getDirectionalLightExtruderArbvp1FiniteDebug (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
)
{
   // static method of class Ogre::ShadowVolumeExtrudeProgram with return value 
   // parameter conversions 
   
   // call library method 
   std::string _cpp_result = Ogre::ShadowVolumeExtrudeProgram::getDirectionalLightExtruderArbvp1FiniteDebug(); 
   return org::xbig::jni::to_jstring(_jni_env_, _cpp_result);
} /* static const String& Ogre::ShadowVolumeExtrudeProgram::getDirectionalLightExtruderArbvp1FiniteDebug */


/*
 * Class:      org.ogre4j.ShadowVolumeExtrudeProgram
 * Method:     getDirectionalLightExtruderVs_1_1FiniteDebug()
 * Type:       static method
 * Definition: static const String& Ogre::ShadowVolumeExtrudeProgram::getDirectionalLightExtruderVs_1_1FiniteDebug
 * Signature:  ()std_string
 */

JNIEXPORT jstring JNICALL Java_org_ogre4j_ShadowVolumeExtrudeProgram__1getDirectionalLightExtruderVs_11_11FiniteDebug (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
)
{
   // static method of class Ogre::ShadowVolumeExtrudeProgram with return value 
   // parameter conversions 
   
   // call library method 
   std::string _cpp_result = Ogre::ShadowVolumeExtrudeProgram::getDirectionalLightExtruderVs_1_1FiniteDebug(); 
   return org::xbig::jni::to_jstring(_jni_env_, _cpp_result);
} /* static const String& Ogre::ShadowVolumeExtrudeProgram::getDirectionalLightExtruderVs_1_1FiniteDebug */


/*
 * Class:      org.ogre4j.ShadowVolumeExtrudeProgram
 * Method:     ShadowVolumeExtrudeProgram()
 * Type:       constructor
 * Definition: Ogre::ShadowVolumeExtrudeProgram::ShadowVolumeExtrudeProgram
 * Signature:  ()V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_ShadowVolumeExtrudeProgram__1_1createShadowVolumeExtrudeProgram (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
)
{
   // constructor of class Ogre::ShadowVolumeExtrudeProgram 
   
   // parameter conversions 
   
   // create new instance of class Ogre::ShadowVolumeExtrudeProgram 
   Ogre::ShadowVolumeExtrudeProgram* _cpp_this = new Ogre::ShadowVolumeExtrudeProgram(); 
   
   // return casted pointer 
   jlong _jni_pointer_ = reinterpret_cast<jlong>(_cpp_this); 
   return _jni_pointer_;
} /* Ogre::ShadowVolumeExtrudeProgram::ShadowVolumeExtrudeProgram */


/*
 * Class:      org.ogre4j.ShadowVolumeExtrudeProgram
 * Method:     __delete()
 * Type:       destructor
 * Definition: Ogre::ShadowVolumeExtrudeProgram::__delete
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_ShadowVolumeExtrudeProgram__1_1delete (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
)
{
   // destructor of class Ogre::ShadowVolumeExtrudeProgram 
   // cast pointer to C++ object 
   Ogre::ShadowVolumeExtrudeProgram* _cpp_this = reinterpret_cast<Ogre::ShadowVolumeExtrudeProgram*>(_jni_pointer_); 
   // delete object if it exists 
   if(_cpp_this != NULL) delete _cpp_this;
} /* Ogre::ShadowVolumeExtrudeProgram::__delete */
