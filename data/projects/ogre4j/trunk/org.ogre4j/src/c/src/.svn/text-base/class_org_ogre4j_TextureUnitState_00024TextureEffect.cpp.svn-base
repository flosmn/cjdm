///////////////////////////////////////////////////////////////////////////////
/// This source file is generated by XBiG (The XSLT Bindings Generator)
/// For the latest info, see http://sourceforge.net/projects/xbig/
///
/// Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
/// Also see acknowledgements in Readme.html
///
/// This program is free software; you can redistribute it and/or modify it under
/// the terms of the GNU Lesser General Public License as published by the Free Software
/// Foundation; either version 2 of the License, or (at your option) any later
/// version.
///
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
/// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
///
/// You should have received a copy of the GNU Lesser General Public License along with
/// this program; if not, write to the Free Software Foundation, Inc., 59 Temple
/// Place - Suite 330, Boston, MA 02111-1307, USA, or go to
/// http://www.gnu.org/copyleft/lesser.txt.
///
/// Machine generated file
///////////////////////////////////////////////////////////////////////////////



#ifdef WIN32
	// disable warnings
	#pragma warning (disable : 4267) // conversion from 'size_t' to 'jint'
#else

#endif


// includes from config
#include <Ogre4JStableHeaders.h>

// use base library for cpp2j
#include "jni_base_all.h"

// import declaration of all functions
#include "class_org_ogre4j_TextureUnitState_00024TextureEffect.h"

// import header files of original library
#include <OgreTextureUnitState.h>



/*
 * Class:      org.ogre4j.TextureUnitState.00024TextureEffect
 * Method:     TextureEffect()
 * Type:       constructor
 * Definition: Ogre::TextureUnitState::TextureEffect::TextureEffect
 * Signature:  ()V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_TextureUnitState_00024TextureEffect__1_1createTextureEffect (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
)
{
   // constructor of class Ogre::TextureUnitState::TextureEffect 
   
   // parameter conversions 
   
   // create new instance of class Ogre::TextureUnitState::TextureEffect 
   Ogre::TextureUnitState::TextureEffect* _cpp_this = new Ogre::TextureUnitState::TextureEffect(); 
   
   // return casted pointer 
   jlong _jni_pointer_ = reinterpret_cast<jlong>(_cpp_this); 
   return _jni_pointer_;
} /* Ogre::TextureUnitState::TextureEffect::TextureEffect */


/*
 * Class:      org.ogre4j.TextureUnitState.00024TextureEffect
 * Method:     __delete()
 * Type:       destructor
 * Definition: Ogre::TextureUnitState::TextureEffect::__delete
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState_00024TextureEffect__1_1delete (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
)
{
   // destructor of class Ogre::TextureUnitState::TextureEffect 
   // cast pointer to C++ object 
   Ogre::TextureUnitState::TextureEffect* _cpp_this = reinterpret_cast<Ogre::TextureUnitState::TextureEffect*>(_jni_pointer_); 
   // delete object if it exists 
   if(_cpp_this != NULL) delete _cpp_this;
} /* Ogre::TextureUnitState::TextureEffect::__delete */


/*
 * Class:      org.ogre4j.TextureUnitState.00024TextureEffect
 * Method:     gettype()
 * Type:       getter for public attribute
 * Definition: TextureEffectType Ogre::TextureUnitState::TextureEffect::type
 * Signature:  ()Ogre_TextureUnitState_TextureEffectType
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_TextureUnitState_00024TextureEffect__1gettype (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
)
{
   // parameter conversions 
   
   // cast pointer to C++ object 
   Ogre::TextureUnitState::TextureEffect* _cpp_this = reinterpret_cast<Ogre::TextureUnitState::TextureEffect*>(_jni_pointer_); 
   
   // call library method 
   const Ogre::TextureUnitState::TextureEffectType _cpp_result = _cpp_this->type; 
   return _cpp_result;
} /* TextureEffectType Ogre::TextureUnitState::TextureEffect::type */


/*
 * Class:      org.ogre4j.TextureUnitState.00024TextureEffect
 * Method:     settype()
 * Type:       setter for public attribute
 * Definition: TextureEffectType Ogre::TextureUnitState::TextureEffect::type
 * Signature:  (Ogre_TextureUnitState_TextureEffectType)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState_00024TextureEffect__1settype (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint _jni_value_
)
{
   // parameter conversions 
  Ogre::TextureUnitState::TextureEffectType _cpp__jni_value_ = (Ogre::TextureUnitState::TextureEffectType)_jni_value_; 
   
   // cast pointer to C++ object 
   Ogre::TextureUnitState::TextureEffect* _cpp_this =reinterpret_cast<Ogre::TextureUnitState::TextureEffect*>(_jni_pointer_); 
   
   // call library method 
   _cpp_this->type = _cpp__jni_value_;
} /* TextureEffectType Ogre::TextureUnitState::TextureEffect::type */


/*
 * Class:      org.ogre4j.TextureUnitState.00024TextureEffect
 * Method:     getsubtype()
 * Type:       getter for public attribute
 * Definition: int Ogre::TextureUnitState::TextureEffect::subtype
 * Signature:  ()I
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_TextureUnitState_00024TextureEffect__1getsubtype (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
)
{
   // parameter conversions 
   
   // cast pointer to C++ object 
   Ogre::TextureUnitState::TextureEffect* _cpp_this = reinterpret_cast<Ogre::TextureUnitState::TextureEffect*>(_jni_pointer_); 
   
   // call library method 
   const int _cpp_result = _cpp_this->subtype; 
   return _cpp_result;
} /* int Ogre::TextureUnitState::TextureEffect::subtype */


/*
 * Class:      org.ogre4j.TextureUnitState.00024TextureEffect
 * Method:     setsubtype()
 * Type:       setter for public attribute
 * Definition: int Ogre::TextureUnitState::TextureEffect::subtype
 * Signature:  (I)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState_00024TextureEffect__1setsubtype (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint _jni_value_
)
{
   // parameter conversions 
  int _cpp__jni_value_ = _jni_value_; 
   
   // cast pointer to C++ object 
   Ogre::TextureUnitState::TextureEffect* _cpp_this =reinterpret_cast<Ogre::TextureUnitState::TextureEffect*>(_jni_pointer_); 
   
   // call library method 
   _cpp_this->subtype = _cpp__jni_value_;
} /* int Ogre::TextureUnitState::TextureEffect::subtype */


/*
 * Class:      org.ogre4j.TextureUnitState.00024TextureEffect
 * Method:     getarg1()
 * Type:       getter for public attribute
 * Definition: Real Ogre::TextureUnitState::TextureEffect::arg1
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_TextureUnitState_00024TextureEffect__1getarg1 (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
)
{
   // parameter conversions 
   
   // cast pointer to C++ object 
   Ogre::TextureUnitState::TextureEffect* _cpp_this = reinterpret_cast<Ogre::TextureUnitState::TextureEffect*>(_jni_pointer_); 
   
   // call library method 
   const float _cpp_result = _cpp_this->arg1; 
   return _cpp_result;
} /* Real Ogre::TextureUnitState::TextureEffect::arg1 */


/*
 * Class:      org.ogre4j.TextureUnitState.00024TextureEffect
 * Method:     setarg1()
 * Type:       setter for public attribute
 * Definition: Real Ogre::TextureUnitState::TextureEffect::arg1
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState_00024TextureEffect__1setarg1 (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat _jni_value_
)
{
   // parameter conversions 
  float _cpp__jni_value_ = _jni_value_; 
   
   // cast pointer to C++ object 
   Ogre::TextureUnitState::TextureEffect* _cpp_this =reinterpret_cast<Ogre::TextureUnitState::TextureEffect*>(_jni_pointer_); 
   
   // call library method 
   _cpp_this->arg1 = _cpp__jni_value_;
} /* Real Ogre::TextureUnitState::TextureEffect::arg1 */


/*
 * Class:      org.ogre4j.TextureUnitState.00024TextureEffect
 * Method:     getarg2()
 * Type:       getter for public attribute
 * Definition: Real Ogre::TextureUnitState::TextureEffect::arg2
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_TextureUnitState_00024TextureEffect__1getarg2 (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
)
{
   // parameter conversions 
   
   // cast pointer to C++ object 
   Ogre::TextureUnitState::TextureEffect* _cpp_this = reinterpret_cast<Ogre::TextureUnitState::TextureEffect*>(_jni_pointer_); 
   
   // call library method 
   const float _cpp_result = _cpp_this->arg2; 
   return _cpp_result;
} /* Real Ogre::TextureUnitState::TextureEffect::arg2 */


/*
 * Class:      org.ogre4j.TextureUnitState.00024TextureEffect
 * Method:     setarg2()
 * Type:       setter for public attribute
 * Definition: Real Ogre::TextureUnitState::TextureEffect::arg2
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState_00024TextureEffect__1setarg2 (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat _jni_value_
)
{
   // parameter conversions 
  float _cpp__jni_value_ = _jni_value_; 
   
   // cast pointer to C++ object 
   Ogre::TextureUnitState::TextureEffect* _cpp_this =reinterpret_cast<Ogre::TextureUnitState::TextureEffect*>(_jni_pointer_); 
   
   // call library method 
   _cpp_this->arg2 = _cpp__jni_value_;
} /* Real Ogre::TextureUnitState::TextureEffect::arg2 */


/*
 * Class:      org.ogre4j.TextureUnitState.00024TextureEffect
 * Method:     getwaveType()
 * Type:       getter for public attribute
 * Definition: WaveformType Ogre::TextureUnitState::TextureEffect::waveType
 * Signature:  ()Ogre_WaveformType
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_TextureUnitState_00024TextureEffect__1getwaveType (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
)
{
   // parameter conversions 
   
   // cast pointer to C++ object 
   Ogre::TextureUnitState::TextureEffect* _cpp_this = reinterpret_cast<Ogre::TextureUnitState::TextureEffect*>(_jni_pointer_); 
   
   // call library method 
   const Ogre::WaveformType _cpp_result = _cpp_this->waveType; 
   return _cpp_result;
} /* WaveformType Ogre::TextureUnitState::TextureEffect::waveType */


/*
 * Class:      org.ogre4j.TextureUnitState.00024TextureEffect
 * Method:     setwaveType()
 * Type:       setter for public attribute
 * Definition: WaveformType Ogre::TextureUnitState::TextureEffect::waveType
 * Signature:  (Ogre_WaveformType)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState_00024TextureEffect__1setwaveType (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jint _jni_value_
)
{
   // parameter conversions 
  Ogre::WaveformType _cpp__jni_value_ = (Ogre::WaveformType)_jni_value_; 
   
   // cast pointer to C++ object 
   Ogre::TextureUnitState::TextureEffect* _cpp_this =reinterpret_cast<Ogre::TextureUnitState::TextureEffect*>(_jni_pointer_); 
   
   // call library method 
   _cpp_this->waveType = _cpp__jni_value_;
} /* WaveformType Ogre::TextureUnitState::TextureEffect::waveType */


/*
 * Class:      org.ogre4j.TextureUnitState.00024TextureEffect
 * Method:     getbase()
 * Type:       getter for public attribute
 * Definition: Real Ogre::TextureUnitState::TextureEffect::base
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_TextureUnitState_00024TextureEffect__1getbase (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
)
{
   // parameter conversions 
   
   // cast pointer to C++ object 
   Ogre::TextureUnitState::TextureEffect* _cpp_this = reinterpret_cast<Ogre::TextureUnitState::TextureEffect*>(_jni_pointer_); 
   
   // call library method 
   const float _cpp_result = _cpp_this->base; 
   return _cpp_result;
} /* Real Ogre::TextureUnitState::TextureEffect::base */


/*
 * Class:      org.ogre4j.TextureUnitState.00024TextureEffect
 * Method:     setbase()
 * Type:       setter for public attribute
 * Definition: Real Ogre::TextureUnitState::TextureEffect::base
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState_00024TextureEffect__1setbase (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat _jni_value_
)
{
   // parameter conversions 
  float _cpp__jni_value_ = _jni_value_; 
   
   // cast pointer to C++ object 
   Ogre::TextureUnitState::TextureEffect* _cpp_this =reinterpret_cast<Ogre::TextureUnitState::TextureEffect*>(_jni_pointer_); 
   
   // call library method 
   _cpp_this->base = _cpp__jni_value_;
} /* Real Ogre::TextureUnitState::TextureEffect::base */


/*
 * Class:      org.ogre4j.TextureUnitState.00024TextureEffect
 * Method:     getfrequency()
 * Type:       getter for public attribute
 * Definition: Real Ogre::TextureUnitState::TextureEffect::frequency
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_TextureUnitState_00024TextureEffect__1getfrequency (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
)
{
   // parameter conversions 
   
   // cast pointer to C++ object 
   Ogre::TextureUnitState::TextureEffect* _cpp_this = reinterpret_cast<Ogre::TextureUnitState::TextureEffect*>(_jni_pointer_); 
   
   // call library method 
   const float _cpp_result = _cpp_this->frequency; 
   return _cpp_result;
} /* Real Ogre::TextureUnitState::TextureEffect::frequency */


/*
 * Class:      org.ogre4j.TextureUnitState.00024TextureEffect
 * Method:     setfrequency()
 * Type:       setter for public attribute
 * Definition: Real Ogre::TextureUnitState::TextureEffect::frequency
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState_00024TextureEffect__1setfrequency (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat _jni_value_
)
{
   // parameter conversions 
  float _cpp__jni_value_ = _jni_value_; 
   
   // cast pointer to C++ object 
   Ogre::TextureUnitState::TextureEffect* _cpp_this =reinterpret_cast<Ogre::TextureUnitState::TextureEffect*>(_jni_pointer_); 
   
   // call library method 
   _cpp_this->frequency = _cpp__jni_value_;
} /* Real Ogre::TextureUnitState::TextureEffect::frequency */


/*
 * Class:      org.ogre4j.TextureUnitState.00024TextureEffect
 * Method:     getphase()
 * Type:       getter for public attribute
 * Definition: Real Ogre::TextureUnitState::TextureEffect::phase
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_TextureUnitState_00024TextureEffect__1getphase (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
)
{
   // parameter conversions 
   
   // cast pointer to C++ object 
   Ogre::TextureUnitState::TextureEffect* _cpp_this = reinterpret_cast<Ogre::TextureUnitState::TextureEffect*>(_jni_pointer_); 
   
   // call library method 
   const float _cpp_result = _cpp_this->phase; 
   return _cpp_result;
} /* Real Ogre::TextureUnitState::TextureEffect::phase */


/*
 * Class:      org.ogre4j.TextureUnitState.00024TextureEffect
 * Method:     setphase()
 * Type:       setter for public attribute
 * Definition: Real Ogre::TextureUnitState::TextureEffect::phase
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState_00024TextureEffect__1setphase (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat _jni_value_
)
{
   // parameter conversions 
  float _cpp__jni_value_ = _jni_value_; 
   
   // cast pointer to C++ object 
   Ogre::TextureUnitState::TextureEffect* _cpp_this =reinterpret_cast<Ogre::TextureUnitState::TextureEffect*>(_jni_pointer_); 
   
   // call library method 
   _cpp_this->phase = _cpp__jni_value_;
} /* Real Ogre::TextureUnitState::TextureEffect::phase */


/*
 * Class:      org.ogre4j.TextureUnitState.00024TextureEffect
 * Method:     getamplitude()
 * Type:       getter for public attribute
 * Definition: Real Ogre::TextureUnitState::TextureEffect::amplitude
 * Signature:  ()float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_TextureUnitState_00024TextureEffect__1getamplitude (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
)
{
   // parameter conversions 
   
   // cast pointer to C++ object 
   Ogre::TextureUnitState::TextureEffect* _cpp_this = reinterpret_cast<Ogre::TextureUnitState::TextureEffect*>(_jni_pointer_); 
   
   // call library method 
   const float _cpp_result = _cpp_this->amplitude; 
   return _cpp_result;
} /* Real Ogre::TextureUnitState::TextureEffect::amplitude */


/*
 * Class:      org.ogre4j.TextureUnitState.00024TextureEffect
 * Method:     setamplitude()
 * Type:       setter for public attribute
 * Definition: Real Ogre::TextureUnitState::TextureEffect::amplitude
 * Signature:  (float)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState_00024TextureEffect__1setamplitude (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat _jni_value_
)
{
   // parameter conversions 
  float _cpp__jni_value_ = _jni_value_; 
   
   // cast pointer to C++ object 
   Ogre::TextureUnitState::TextureEffect* _cpp_this =reinterpret_cast<Ogre::TextureUnitState::TextureEffect*>(_jni_pointer_); 
   
   // call library method 
   _cpp_this->amplitude = _cpp__jni_value_;
} /* Real Ogre::TextureUnitState::TextureEffect::amplitude */


/*
 * Class:      org.ogre4j.TextureUnitState.00024TextureEffect
 * Method:     getcontroller()
 * Type:       getter for public attribute
 * Definition: Controller<Real>* Ogre::TextureUnitState::TextureEffect::controller
 * Signature:  ()Controller__Real__
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_TextureUnitState_00024TextureEffect__1getcontroller (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
)
{
   // parameter conversions 
   
   // cast pointer to C++ object 
   Ogre::TextureUnitState::TextureEffect* _cpp_this = reinterpret_cast<Ogre::TextureUnitState::TextureEffect*>(_jni_pointer_); 
   
   // call library method 
   const Ogre::Controller< float >* _cpp_result = _cpp_this->controller; 
   return reinterpret_cast<jlong>(_cpp_result);
} /* Controller<Real>* Ogre::TextureUnitState::TextureEffect::controller */


/*
 * Class:      org.ogre4j.TextureUnitState.00024TextureEffect
 * Method:     setcontroller()
 * Type:       setter for public attribute
 * Definition: Controller<Real>* Ogre::TextureUnitState::TextureEffect::controller
 * Signature:  (Controller__Real__)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_TextureUnitState_00024TextureEffect__1setcontroller (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jlong _jni_value_
)
{
   // parameter conversions 
  Ogre::Controller< float >* _cpp__jni_value_ = reinterpret_cast< Ogre::Controller< float >* >(_jni_value_); 
   
   // cast pointer to C++ object 
   Ogre::TextureUnitState::TextureEffect* _cpp_this =reinterpret_cast<Ogre::TextureUnitState::TextureEffect*>(_jni_pointer_); 
   
   // call library method 
   _cpp_this->controller = _cpp__jni_value_;
} /* Controller<Real>* Ogre::TextureUnitState::TextureEffect::controller */


/*
 * Class:      org.ogre4j.TextureUnitState.00024TextureEffect
 * Method:     getfrustum()
 * Type:       getter for public attribute
 * Definition: const Frustum* Ogre::TextureUnitState::TextureEffect::frustum
 * Signature:  ()Ogre_Frustum
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_TextureUnitState_00024TextureEffect__1getfrustum (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
)
{
   // parameter conversions 
   
   // cast pointer to C++ object 
   Ogre::TextureUnitState::TextureEffect* _cpp_this = reinterpret_cast<Ogre::TextureUnitState::TextureEffect*>(_jni_pointer_); 
   
   // call library method 
   const Ogre::Frustum* _cpp_result = _cpp_this->frustum; 
   return reinterpret_cast<jlong>(_cpp_result);
} /* const Frustum* Ogre::TextureUnitState::TextureEffect::frustum */
