///////////////////////////////////////////////////////////////////////////////
/// This source file is generated by XBiG (The XSLT Bindings Generator)
/// For the latest info, see http://sourceforge.net/projects/xbig/
///
/// Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
/// Also see acknowledgements in Readme.html
///
/// This program is free software; you can redistribute it and/or modify it under
/// the terms of the GNU Lesser General Public License as published by the Free Software
/// Foundation; either version 2 of the License, or (at your option) any later
/// version.
///
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
/// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
///
/// You should have received a copy of the GNU Lesser General Public License along with
/// this program; if not, write to the Free Software Foundation, Inc., 59 Temple
/// Place - Suite 330, Boston, MA 02111-1307, USA, or go to
/// http://www.gnu.org/copyleft/lesser.txt.
///
/// Machine generated file
///////////////////////////////////////////////////////////////////////////////



#ifdef WIN32
	// disable warnings
	#pragma warning (disable : 4267) // conversion from 'size_t' to 'jint'
#else

#endif


// includes from config
#include <Ogre4JStableHeaders.h>

// use base library for cpp2j
#include "jni_base_all.h"

// import declaration of all functions
#include "class_org_ogre4j_ErrorDialog.h"

// import header files of original library
//#include <OgreErrorDialogImp.h>



/*
 * Class:      org.ogre4j.ErrorDialog
 * Method:     ErrorDialog()
 * Type:       constructor
 * Definition: Ogre::ErrorDialog::ErrorDialog
 * Signature:  ()V
 */

//JNIEXPORT jlong JNICALL Java_org_ogre4j_ErrorDialog__1_1createErrorDialog (
//  JNIEnv* _jni_env_, /* interface pointer */
//  jclass _jni_class_  /* class pointer */
//)
//{
//   // constructor of class Ogre::ErrorDialog 
//   
//   // parameter conversions 
//   
//   // create new instance of class Ogre::ErrorDialog 
//   Ogre::ErrorDialog* _cpp_this = new Ogre::ErrorDialog(); 
//   
//   // return casted pointer 
//   jlong _jni_pointer_ = reinterpret_cast<jlong>(_cpp_this); 
//   return _jni_pointer_;
//} /* Ogre::ErrorDialog::ErrorDialog */


/*
 * Class:      org.ogre4j.ErrorDialog
 * Method:     display()
 * Type:       non-virtual method
 * Definition: void Ogre::ErrorDialog::display
 * Signature:  (std_stringstd_string)V
 */

//JNIEXPORT void JNICALL Java_org_ogre4j_ErrorDialog__1display_1_1StringRStringv (
//  JNIEnv* _jni_env_, /* interface pointer */
//  jobject _jni_this_, /* Java object */
//  jlong _jni_pointer_, /* C++ pointer */
//  jstring errorMessage, 
//  jstring logName
//)
//{
//   // parameter conversions 
//  std::string _cpp_errorMessage = ""; org::xbig::jni::to_stdstring(_jni_env_, errorMessage, _cpp_errorMessage); // calls c-tor only. Not operator= .;
//  std::string _cpp_logName = ""; org::xbig::jni::to_stdstring(_jni_env_, logName, _cpp_logName); // calls c-tor only. Not operator= .; 
//   
//   // cast pointer to C++ object 
//   Ogre::ErrorDialog* _cpp_this = reinterpret_cast<Ogre::ErrorDialog*>(_jni_pointer_); 
//   
//   // call library method 
//   _cpp_this->display(_cpp_errorMessage, _cpp_logName);
//} /* void Ogre::ErrorDialog::display */


/*
 * Class:      org.ogre4j.ErrorDialog
 * Method:     __delete()
 * Type:       destructor
 * Definition: Ogre::ErrorDialog::__delete
 * Signature:  ()V
 */

//JNIEXPORT void JNICALL Java_org_ogre4j_ErrorDialog__1_1delete (
//  JNIEnv* _jni_env_, /* interface pointer */
//  jobject _jni_this_, /* Java object */
//  jlong _jni_pointer_ /* C++ pointer */
//)
//{
//   // destructor of class Ogre::ErrorDialog 
//   // cast pointer to C++ object 
//   Ogre::ErrorDialog* _cpp_this = reinterpret_cast<Ogre::ErrorDialog*>(_jni_pointer_); 
//   // delete object if it exists 
//   if(_cpp_this != NULL) delete _cpp_this;
//} /* Ogre::ErrorDialog::__delete */
