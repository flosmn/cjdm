///////////////////////////////////////////////////////////////////////////////
/// This source file is generated by XBiG (The XSLT Bindings Generator)
/// For the latest info, see http://sourceforge.net/projects/xbig/
///
/// Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
/// Also see acknowledgements in Readme.html
///
/// This program is free software; you can redistribute it and/or modify it under
/// the terms of the GNU Lesser General Public License as published by the Free Software
/// Foundation; either version 2 of the License, or (at your option) any later
/// version.
///
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
/// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
///
/// You should have received a copy of the GNU Lesser General Public License along with
/// this program; if not, write to the Free Software Foundation, Inc., 59 Temple
/// Place - Suite 330, Boston, MA 02111-1307, USA, or go to
/// http://www.gnu.org/copyleft/lesser.txt.
///
/// Machine generated file
///////////////////////////////////////////////////////////////////////////////



#ifdef WIN32
	// disable warnings
	#pragma warning (disable : 4267) // conversion from 'size_t' to 'jint'
#else

#endif


// includes from config
#include <Ogre4JStableHeaders.h>

// use base library for cpp2j
#include "jni_base_all.h"

// import declaration of all functions
#include "class_org_ogre4j_Bitwise.h"

// import header files of original library
#include <OgreBitwise.h>



/*
 * Class:      org.ogre4j.Bitwise
 * Method:     mostSignificantBitSet()
 * Type:       static method
 * Definition: static __inline unsigned int Ogre::Bitwise::mostSignificantBitSet
 * Signature:  (I)I
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Bitwise__1mostSignificantBitSet_1_1Iv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong value
)
{
   // static method of class Ogre::Bitwise with return value 
   // parameter conversions 
  unsigned int _cpp_value = value; 
   
   // call library method 
   const unsigned int _cpp_result = Ogre::Bitwise::mostSignificantBitSet(_cpp_value); 
   return _cpp_result;
} /* static __inline unsigned int Ogre::Bitwise::mostSignificantBitSet */


/*
 * Class:      org.ogre4j.Bitwise
 * Method:     firstPO2From()
 * Type:       static method
 * Definition: static __inline uint32 Ogre::Bitwise::firstPO2From
 * Signature:  (unsigned_int)unsigned_int
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Bitwise__1firstPO2From_1_1uint32v (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong n
)
{
   // static method of class Ogre::Bitwise with return value 
   // parameter conversions 
  unsigned int _cpp_n = n; 
   
   // call library method 
   const unsigned int _cpp_result = Ogre::Bitwise::firstPO2From(_cpp_n); 
   return _cpp_result;
} /* static __inline uint32 Ogre::Bitwise::firstPO2From */


/*
 * Class:      org.ogre4j.Bitwise
 * Method:     fixedToFixed()
 * Type:       static method
 * Definition: static unsigned int Ogre::Bitwise::fixedToFixed
 * Signature:  (unsigned_intII)I
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Bitwise__1fixedToFixed_1_1uint32vIvIv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong value, 
  jlong n, 
  jlong p
)
{
   // static method of class Ogre::Bitwise with return value 
   // parameter conversions 
  unsigned int _cpp_value = value;
  unsigned int _cpp_n = n;
  unsigned int _cpp_p = p; 
   
   // call library method 
   const unsigned int _cpp_result = Ogre::Bitwise::fixedToFixed(_cpp_value, _cpp_n, _cpp_p); 
   return _cpp_result;
} /* static unsigned int Ogre::Bitwise::fixedToFixed */


/*
 * Class:      org.ogre4j.Bitwise
 * Method:     floatToFixed()
 * Type:       static method
 * Definition: static unsigned int Ogre::Bitwise::floatToFixed
 * Signature:  (FI)I
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Bitwise__1floatToFixed_1_1FVIV (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jfloat value, 
  jlong bits
)
{
   // static method of class Ogre::Bitwise with return value 
   // parameter conversions 
  const float _cpp_value = value;
  const unsigned int _cpp_bits = bits; 
   
   // call library method 
   const unsigned int _cpp_result = Ogre::Bitwise::floatToFixed(_cpp_value, _cpp_bits); 
   return _cpp_result;
} /* static unsigned int Ogre::Bitwise::floatToFixed */


/*
 * Class:      org.ogre4j.Bitwise
 * Method:     fixedToFloat()
 * Type:       static method
 * Definition: static float Ogre::Bitwise::fixedToFloat
 * Signature:  (II)F
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_Bitwise__1fixedToFloat_1_1IvIv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong value, 
  jlong bits
)
{
   // static method of class Ogre::Bitwise with return value 
   // parameter conversions 
  unsigned _cpp_value = value;
  unsigned int _cpp_bits = bits; 
   
   // call library method 
   const float _cpp_result = Ogre::Bitwise::fixedToFloat(_cpp_value, _cpp_bits); 
   return _cpp_result;
} /* static float Ogre::Bitwise::fixedToFloat */


/*
 * Class:      org.ogre4j.Bitwise
 * Method:     intWrite()
 * Type:       static method
 * Definition: static void Ogre::Bitwise::intWrite
 * Signature:  (VII)V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_Bitwise__1intWrite_1_1vpiVIV (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong dest, 
  jint n, 
  jlong value
)
{
   // static method of class Ogre::Bitwise without return value 
   // parameter conversions 
  void* _cpp_dest = reinterpret_cast<void*>(dest);
  const int _cpp_n = n;
  const unsigned int _cpp_value = value; 
   
   // call library method 
   Ogre::Bitwise::intWrite(_cpp_dest, _cpp_n, _cpp_value);
} /* static void Ogre::Bitwise::intWrite */


/*
 * Class:      org.ogre4j.Bitwise
 * Method:     intRead()
 * Type:       static method
 * Definition: static unsigned int Ogre::Bitwise::intRead
 * Signature:  (VI)I
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Bitwise__1intRead_1_1vPiv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong src, 
  jint n
)
{
   // static method of class Ogre::Bitwise with return value 
   // parameter conversions 
  const void* _cpp_src = reinterpret_cast<void*>(src);
  int _cpp_n = n; 
   
   // call library method 
   const unsigned int _cpp_result = Ogre::Bitwise::intRead(_cpp_src, _cpp_n); 
   return _cpp_result;
} /* static unsigned int Ogre::Bitwise::intRead */


/*
 * Class:      org.ogre4j.Bitwise
 * Method:     floatToHalf()
 * Type:       static method
 * Definition: static uint16 Ogre::Bitwise::floatToHalf
 * Signature:  (F)unsigned_short
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_Bitwise__1floatToHalf_1_1Fv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jfloat i
)
{
   // static method of class Ogre::Bitwise with return value 
   // parameter conversions 
  float _cpp_i = i; 
   
   // call library method 
   const unsigned short _cpp_result = Ogre::Bitwise::floatToHalf(_cpp_i); 
   return _cpp_result;
} /* static uint16 Ogre::Bitwise::floatToHalf */


/*
 * Class:      org.ogre4j.Bitwise
 * Method:     floatToHalfI()
 * Type:       static method
 * Definition: static uint16 Ogre::Bitwise::floatToHalfI
 * Signature:  (unsigned_int)unsigned_short
 */

JNIEXPORT jint JNICALL Java_org_ogre4j_Bitwise__1floatToHalfI_1_1uint32v (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jlong i
)
{
   // static method of class Ogre::Bitwise with return value 
   // parameter conversions 
  unsigned int _cpp_i = i; 
   
   // call library method 
   const unsigned short _cpp_result = Ogre::Bitwise::floatToHalfI(_cpp_i); 
   return _cpp_result;
} /* static uint16 Ogre::Bitwise::floatToHalfI */


/*
 * Class:      org.ogre4j.Bitwise
 * Method:     halfToFloat()
 * Type:       static method
 * Definition: static float Ogre::Bitwise::halfToFloat
 * Signature:  (unsigned_short)F
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_Bitwise__1halfToFloat_1_1uint16v (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jint y
)
{
   // static method of class Ogre::Bitwise with return value 
   // parameter conversions 
  unsigned short _cpp_y = y; 
   
   // call library method 
   const float _cpp_result = Ogre::Bitwise::halfToFloat(_cpp_y); 
   return _cpp_result;
} /* static float Ogre::Bitwise::halfToFloat */


/*
 * Class:      org.ogre4j.Bitwise
 * Method:     halfToFloatI()
 * Type:       static method
 * Definition: static uint32 Ogre::Bitwise::halfToFloatI
 * Signature:  (unsigned_short)unsigned_int
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Bitwise__1halfToFloatI_1_1uint16v (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jint y
)
{
   // static method of class Ogre::Bitwise with return value 
   // parameter conversions 
  unsigned short _cpp_y = y; 
   
   // call library method 
   const unsigned int _cpp_result = Ogre::Bitwise::halfToFloatI(_cpp_y); 
   return _cpp_result;
} /* static uint32 Ogre::Bitwise::halfToFloatI */


/*
 * Class:      org.ogre4j.Bitwise
 * Method:     Bitwise()
 * Type:       constructor
 * Definition: Ogre::Bitwise::Bitwise
 * Signature:  ()V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_Bitwise__1_1createBitwise (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_  /* class pointer */
)
{
   // constructor of class Ogre::Bitwise 
   
   // parameter conversions 
   
   // create new instance of class Ogre::Bitwise 
   Ogre::Bitwise* _cpp_this = new Ogre::Bitwise(); 
   
   // return casted pointer 
   jlong _jni_pointer_ = reinterpret_cast<jlong>(_cpp_this); 
   return _jni_pointer_;
} /* Ogre::Bitwise::Bitwise */


/*
 * Class:      org.ogre4j.Bitwise
 * Method:     __delete()
 * Type:       destructor
 * Definition: Ogre::Bitwise::__delete
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_Bitwise__1_1delete (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
)
{
   // destructor of class Ogre::Bitwise 
   // cast pointer to C++ object 
   Ogre::Bitwise* _cpp_this = reinterpret_cast<Ogre::Bitwise*>(_jni_pointer_); 
   // delete object if it exists 
   if(_cpp_this != NULL) delete _cpp_this;
} /* Ogre::Bitwise::__delete */
