///////////////////////////////////////////////////////////////////////////////
/// This source file is generated by XBiG (The XSLT Bindings Generator)
/// For the latest info, see http://sourceforge.net/projects/xbig/
///
/// Copyright (c) 2004-2008 NetAllied Systems GmbH, Ravensburg. All rights reserved.
/// Also see acknowledgements in Readme.html
///
/// This program is free software; you can redistribute it and/or modify it under
/// the terms of the GNU Lesser General Public License as published by the Free Software
/// Foundation; either version 2 of the License, or (at your option) any later
/// version.
///
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
/// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
///
/// You should have received a copy of the GNU Lesser General Public License along with
/// this program; if not, write to the Free Software Foundation, Inc., 59 Temple
/// Place - Suite 330, Boston, MA 02111-1307, USA, or go to
/// http://www.gnu.org/copyleft/lesser.txt.
///
/// Machine generated file
///////////////////////////////////////////////////////////////////////////////



#ifdef WIN32
	// disable warnings
	#pragma warning (disable : 4267) // conversion from 'size_t' to 'jint'
#else

#endif


// includes from config
#include <Ogre4JStableHeaders.h>

// use base library for cpp2j
#include "jni_base_all.h"

// import declaration of all functions
#include "class_org_ogre4j_WaveformControllerFunction.h"

// import header files of original library
#include <OgrePredefinedControllers.h>



/*
 * Class:      org.ogre4j.WaveformControllerFunction
 * Method:     WaveformControllerFunction()
 * Type:       constructor
 * Definition: Ogre::WaveformControllerFunction::WaveformControllerFunction
 * Signature:  (Ogre_WaveformTypefloatfloatfloatfloatZfloat)V
 */

JNIEXPORT jlong JNICALL Java_org_ogre4j_WaveformControllerFunction__1_1createWaveformControllerFunction_1_1WaveformTypevRealvRealvRealvRealvbvRealv (
  JNIEnv* _jni_env_, /* interface pointer */
  jclass _jni_class_,  /* class pointer */
  jint wType, 
  jfloat base, 
  jfloat frequency, 
  jfloat phase, 
  jfloat amplitude, 
  jboolean deltaInput, 
  jfloat dutyCycle
)
{
   // constructor of class Ogre::WaveformControllerFunction 
   
   // parameter conversions 
  Ogre::WaveformType _cpp_wType = (Ogre::WaveformType)wType;
  float _cpp_base = base;
  float _cpp_frequency = frequency;
  float _cpp_phase = phase;
  float _cpp_amplitude = amplitude;
  bool _cpp_deltaInput = deltaInput ? true : false;
  float _cpp_dutyCycle = dutyCycle; 
   
   // create new instance of class Ogre::WaveformControllerFunction 
   Ogre::WaveformControllerFunction* _cpp_this = new Ogre::WaveformControllerFunction(_cpp_wType, _cpp_base, _cpp_frequency, _cpp_phase, _cpp_amplitude, _cpp_deltaInput, _cpp_dutyCycle); 
   
   // return casted pointer 
   jlong _jni_pointer_ = reinterpret_cast<jlong>(_cpp_this); 
   return _jni_pointer_;
} /* Ogre::WaveformControllerFunction::WaveformControllerFunction */


/*
 * Class:      org.ogre4j.WaveformControllerFunction
 * Method:     calculate()
 * Type:       virtual method
 * Definition: Real Ogre::WaveformControllerFunction::calculate
 * Signature:  (float)float
 */

JNIEXPORT jfloat JNICALL Java_org_ogre4j_WaveformControllerFunction__1calculate_1_1Realv (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_, /* C++ pointer */
  jfloat source
)
{
   // parameter conversions 
  float _cpp_source = source; 
   
   // cast pointer to C++ object 
   Ogre::WaveformControllerFunction* _cpp_this = reinterpret_cast<Ogre::WaveformControllerFunction*>(_jni_pointer_); 
   
   // call library method 
   const float _cpp_result = _cpp_this->calculate(_cpp_source) ; 
   return _cpp_result;
} /* Real Ogre::WaveformControllerFunction::calculate */


/*
 * Class:      org.ogre4j.WaveformControllerFunction
 * Method:     __delete()
 * Type:       destructor
 * Definition: Ogre::WaveformControllerFunction::__delete
 * Signature:  ()V
 */

JNIEXPORT void JNICALL Java_org_ogre4j_WaveformControllerFunction__1_1delete (
  JNIEnv* _jni_env_, /* interface pointer */
  jobject _jni_this_, /* Java object */
  jlong _jni_pointer_ /* C++ pointer */
)
{
   // destructor of class Ogre::WaveformControllerFunction 
   // cast pointer to C++ object 
   Ogre::WaveformControllerFunction* _cpp_this = reinterpret_cast<Ogre::WaveformControllerFunction*>(_jni_pointer_); 
   // delete object if it exists 
   if(_cpp_this != NULL) delete _cpp_this;
} /* Ogre::WaveformControllerFunction::__delete */
